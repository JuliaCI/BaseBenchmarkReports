cset: moving following pidspec: 6039
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341376316 seconds)
loading group "string"... done (took 0.546498912 seconds)
loading group "linalg"... done (took 6.952511232 seconds)
loading group "parallel"... done (took 0.154689215 seconds)
loading group "find"... done (took 1.118966736 seconds)
loading group "tuple"... done (took 1.688695853 seconds)
loading group "dates"... done (took 1.20270898 seconds)
loading group "micro"... done (took 0.215249006 seconds)
loading group "io"... done (took 0.98740576 seconds)
loading group "scalar"... done (took 36.363118923 seconds)
loading group "sparse"... done (took 11.722660268 seconds)
loading group "broadcast"... done (took 0.905590724 seconds)
loading group "union"... done (took 11.776491072 seconds)
loading group "simd"... done (took 4.264181788 seconds)
loading group "random"... done (took 8.931673308 seconds)
loading group "problem"... done (took 1.864927336 seconds)
loading group "array"... done (took 20.305217024 seconds)
loading group "misc"... done (took 1.623231386 seconds)
loading group "sort"... done (took 3.330875118 seconds)
loading group "collection"... done (took 16.63635182 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.474143072 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120839453 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.111802856 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116755723 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143663134 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.108885825 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121307777 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.0827285 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.822509907 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145306265 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116120381 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407088553 seconds)
done (took 5.135936817 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170574051 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082158709 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080336816 seconds)
  done (took 1.357749512 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064484294 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119595171 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065743641 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066313318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066240149 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06523098 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065289588 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065090443 seconds)
  done (took 1.709899655 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072554707 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06699101 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068278101 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067110292 seconds)
  done (took 1.476747138 seconds)
done (took 5.987155715 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.744389526 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198998774 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181617382 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396057788 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127475674 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155011258 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643842612 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310434793 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185405171 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080645749 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10304738 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.314350435 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106596171 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642734769 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075632402 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088976924 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.134671934 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43227278 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066375906 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08115039 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087977322 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127636434 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087020709 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073555439 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141729458 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06677771 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133891966 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078602244 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065532562 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205509796 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171378314 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652767085 seconds)
  done (took 10.199879378 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094615134 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095671718 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06792433 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12209488 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097846668 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068640044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070300196 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066407332 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085792853 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126713845 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090298039 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099868627 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064805759 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067807418 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083694096 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203361506 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081465222 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079865098 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070092959 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07409282 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106744842 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077529902 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077463368 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076696193 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12709814 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181064855 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094936099 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096382747 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066012239 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079814282 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114190782 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127257028 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06666663 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065525675 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122995372 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096083788 seconds)
  done (took 4.622417431 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.943868923 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139048689 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089920414 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130592765 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063829335 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105672632 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06493805 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080034131 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198003025 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.352327131 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.56222172 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10986394 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102793969 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066730254 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067584275 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065953207 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.312179201 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.093383754 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102876808 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079940054 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069160185 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068194844 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.345858392 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066984906 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062614049 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066678876 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057181508 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122336611 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06711931 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.918079534 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124601504 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066299657 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100518335 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169009032 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089438746 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137861459 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.201180566 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064129893 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.14892157 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069714024 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083648231 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065407756 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08285843 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10242564 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112122933 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06456385 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065496054 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159277354 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064921532 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078606706 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.606821254 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153210639 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077582325 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0652809 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248384601 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084403673 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068081706 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063280933 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.172917088 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134587541 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063228547 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089419722 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066242789 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065744977 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067620396 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068541612 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.354277578 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065054772 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.808547947 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069999631 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076143453 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068339966 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068278215 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074172806 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071577904 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084699416 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065914633 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074627997 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065311316 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065030331 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065750078 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083168339 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354218169 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065569046 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067956868 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064595886 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085698247 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096500702 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067508879 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064516 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099337719 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067237806 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065399055 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103752865 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065550069 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083413386 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067992372 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.216778887 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067709832 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09524249 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06637536 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095623951 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069333409 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102019182 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079987036 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067067358 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.394206682 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064364948 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064588397 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063973478 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068214474 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064318292 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067313919 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06585958 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078837678 seconds)
  done (took 20.516861991 seconds)
done (took 37.485737851 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.230281771 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074663126 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07433973 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074418675 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077191218 seconds)
  done (took 1.815947987 seconds)
done (took 3.082284722 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118882711 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098127079 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064135039 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094543502 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063339496 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098894697 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097920344 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079952958 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098004374 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06360564 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09509747 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063716584 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063350217 seconds)
  done (took 2.380228486 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083756031 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082236875 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069495449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081833105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063182635 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081295237 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080393541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087521591 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079818231 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071999057 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063294777 seconds)
  done (took 2.100468197 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081587929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08253493 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068760304 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080375875 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065253348 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080570991 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079740794 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084112798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079947134 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072664353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063216532 seconds)
  done (took 2.094145179 seconds)
done (took 7.824641853 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077633896 seconds)
  done (took 1.322132485 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.58153132 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.046890254 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080895235 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110986698 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182397856 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118617252 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276268306 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086311205 seconds)
  done (took 8.914610843 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087052839 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080862055 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070476929 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068873203 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070130675 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068248637 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069224913 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068488721 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070796945 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071566022 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068637212 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071340304 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070375402 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067838889 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071697984 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067677428 seconds)
  done (took 2.459993324 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091373917 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090528736 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072758817 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07379484 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071372402 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071514625 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073653228 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072625962 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070263122 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071331293 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074037951 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072962645 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070504675 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064258635 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07288557 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07478913 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070268283 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073358959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074058135 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073807239 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07412055 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063695073 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070518598 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073155754 seconds)
  done (took 3.113126169 seconds)
done (took 17.066181855 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11433924 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070439038 seconds)
  done (took 1.432571994 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082501466 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081981085 seconds)
  done (took 1.421194348 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085721916 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065123148 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091790705 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078366291 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065506429 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065292499 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08852212 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065875995 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06516129 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065685204 seconds)
  done (took 1.994040349 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069508063 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078275445 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070222663 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080619573 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073379365 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063941146 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072221388 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067660302 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078048675 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062439483 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071167406 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082052107 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070474503 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083338638 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071668517 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068291815 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070355142 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066604824 seconds)
  done (took 2.560768416 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067373114 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066723864 seconds)
  done (took 1.398022387 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069397288 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064537415 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066808532 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0661727 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06302326 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062302367 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063357151 seconds)
  done (took 1.714118962 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370496262 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109032232 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293911533 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07010834 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080375968 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246470637 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064540651 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069576075 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069757064 seconds)
  done (took 2.675795909 seconds)
done (took 14.464065013 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079473752 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085470184 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09508038 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.356661556 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090780374 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065110129 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113371711 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190908564 seconds)
done (took 2.355721551 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210362655 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606257524 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.383577067 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195987904 seconds)
  done (took 2.452283995 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325484366 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.084869581 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058085097 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066386315 seconds)
  done (took 1.812315457 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066389546 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068321343 seconds)
  done (took 1.406060729 seconds)
done (took 7.153588891 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065885823 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082199546 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064468821 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06524592 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062911447 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065443256 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062678554 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062798007 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064980515 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065114487 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067844891 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065088526 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064911238 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062740775 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06276189 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065048727 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062630177 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062733242 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062585874 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062857739 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064980707 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065072836 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062917851 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062675829 seconds)
  done (took 2.859563246 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082991703 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066415188 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071037336 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070933253 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069217624 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070614929 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070021922 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065599851 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070367801 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067455241 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069123423 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069084952 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067489742 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0695564 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067452485 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069268897 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070028726 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065909781 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067188062 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069355863 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070086606 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065742804 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069350025 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06996547 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068792837 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070472643 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067566156 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065348699 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070420743 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068754207 seconds)
  done (took 3.357446327 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06992731 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062806879 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063413665 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070168526 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063160911 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064061912 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062619542 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063396308 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063685287 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062852972 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064109338 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062599745 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063010921 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063763278 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06387662 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066543659 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07800202 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063688862 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063091642 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063291585 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066047267 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062454437 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063047842 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063085419 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062879795 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062554009 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063296776 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063256072 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063499647 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062560795 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065940846 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06641137 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062594652 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06965767 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066680275 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062383414 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067017657 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062654562 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063524791 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062451677 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06240911 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062698911 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062805646 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069889943 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062829934 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063967096 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062860263 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063803887 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063471334 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06515703 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06217877 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063142863 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064621116 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063869782 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066602407 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062490457 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063383757 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062239502 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063823172 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.170706639 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062479424 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062636596 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065311895 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063258176 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077151984 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069763577 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063087394 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064646009 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063781667 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065291391 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064240808 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075689413 seconds)
  done (took 6.042433667 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090052025 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086479891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065208031 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06422955 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061214145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063995274 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066612773 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063415712 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064759013 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069141885 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063374108 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064480673 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064805012 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076209606 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063755234 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064548969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069514493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06120293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063472167 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066393337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06340451 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066341705 seconds)
  done (took 2.781172348 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154035059 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069777369 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10457478 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071998714 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066970529 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071712602 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069108824 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069531814 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069276859 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067274403 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06758863 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069623206 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066700413 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06709058 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067560564 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067264126 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06903316 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067518467 seconds)
  done (took 2.648831277 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077338943 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065288597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085245473 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065796801 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065668389 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067803111 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070222639 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073492349 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06726015 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065699288 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073604905 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067197099 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06735852 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065154746 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067628647 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065167244 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067133459 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065292735 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073336792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069876165 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069588263 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072832482 seconds)
  done (took 2.819833279 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079611756 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067031194 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082381214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068324876 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06156115 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064161674 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069834926 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065286333 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069072642 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066757018 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065270348 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063713115 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068689675 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065412096 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068738204 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0650694 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066759502 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065263624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066660471 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06135999 seconds)
  done (took 2.642666567 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086130903 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067426595 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06718311 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075458908 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066942424 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066653249 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074324514 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066753479 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066557763 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086333351 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066623312 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06661631 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074965721 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071659084 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066607792 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074411743 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074503805 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07441669 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066882855 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066968026 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087025785 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067281628 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074337931 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066717225 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067677665 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067386762 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066758665 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07220447 seconds)
  done (took 3.291515124 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066806737 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06612745 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063737725 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06289122 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063046426 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063473665 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063316076 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063135803 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065518638 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063080776 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065877721 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066031044 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065451185 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065699158 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065774739 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065659587 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065786835 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063246979 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063498183 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063232949 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065507713 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065593795 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065432769 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063183725 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063328482 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065996567 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063204703 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063065087 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065206239 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062958752 seconds)
  done (took 3.230584841 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075877095 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072146975 seconds)
  done (took 1.445136079 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064004318 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080182036 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062968116 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069317788 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069708591 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066556692 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073158162 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069603832 seconds)
  done (took 1.849182252 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082108817 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077500352 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066790921 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079205461 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076238015 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08241688 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13167227 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06683984 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072326061 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063611618 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079246175 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064958793 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071551359 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066224524 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071401713 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072226396 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063704077 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072066367 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067940543 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064530074 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067270087 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074488078 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067857783 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061335082 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067364931 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087060678 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076921661 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065332755 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0681336 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072384761 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071197966 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059780643 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065137603 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065897521 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063735331 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074849073 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080171414 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068243912 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07394937 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066689615 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076195596 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06089457 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070122477 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072411054 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075252375 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0661792 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066275095 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060734756 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063588309 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067929559 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060896863 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065857712 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060367808 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074359609 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068846763 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075895698 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064640466 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066932878 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068383186 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068211104 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07172529 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067103229 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067990414 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065298142 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074851553 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069809894 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073805672 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060725124 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059549634 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063388073 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074605972 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087381872 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07151876 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066121181 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066170824 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064020377 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069288317 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066733076 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071059888 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071523498 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065768145 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071218089 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072693091 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065996344 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067475362 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073792809 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063819403 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068322309 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06338628 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081702207 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064221194 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063609964 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063332257 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075946293 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069081901 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065246622 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063517752 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072088642 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059847027 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065992012 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0664016 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065958284 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075965697 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070869988 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070730497 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073961274 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072904566 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065761868 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068225983 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062154338 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066049356 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063902721 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071639877 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059170319 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067726493 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065070328 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065295973 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.20276264 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065735029 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066600649 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073598764 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072189822 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064642372 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063077118 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068789711 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066348038 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069382414 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073686163 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065048251 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061550716 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061748772 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069477982 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066502476 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069738637 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071787265 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06949429 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061534063 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064796547 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071812069 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075369106 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066961961 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067120002 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072649796 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067927932 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065476983 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073234053 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069198897 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065580363 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071684009 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067276395 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061265572 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068894459 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06881878 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064727625 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069616056 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069769598 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068304042 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066615876 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064948445 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07422718 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067308786 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065362006 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065873104 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06459943 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076262057 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068333361 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062440805 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063883579 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07505424 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064471942 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065344659 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065973889 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068080052 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066685748 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063925305 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066186995 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067964796 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076293487 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070509979 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067100529 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07171216 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077318313 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066300928 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068084939 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065897418 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066486441 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067126022 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07448613 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070277975 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070435633 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068409205 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06270834 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070503318 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072240531 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064786792 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063234629 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064480449 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069550475 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070783075 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069526611 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066389375 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063734603 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066097849 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068583494 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068399107 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065299072 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064600375 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072146301 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063675413 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072575804 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066385647 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075427934 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06887879 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060634872 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068461052 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063698707 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071775277 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060988122 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063595285 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064663344 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066491811 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064683107 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068113169 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059984474 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072436309 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072960561 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065729077 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064798015 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065343481 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07201606 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066611933 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068852217 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067596418 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069679345 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074049251 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063573239 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06733122 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074584089 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.197067819 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060875388 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07130606 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06546733 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064453966 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065348496 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0645645 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069163313 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075071961 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073113004 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060360504 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068530254 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064889631 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064941278 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061695688 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07045579 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069178151 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067833233 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073103014 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067162466 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.0675622 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070564841 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066379983 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066803017 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067661839 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068994676 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067286494 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068061128 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066165517 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069698792 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065617281 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064850787 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067446522 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066567274 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066857711 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071454629 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065540873 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066406905 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068214372 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067263452 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066876504 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066226923 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065609697 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069110339 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066549519 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065854671 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06831703 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061752301 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073798087 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065844848 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072683439 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06655456 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062643448 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073121133 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068665948 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072333927 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067302164 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066723156 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067677658 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066149813 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068375644 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072675914 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063752856 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076652661 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073430571 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066599773 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068593144 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066316217 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067623113 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065627177 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066864194 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067269928 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06607811 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065510945 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06960083 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067972368 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065719054 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067276858 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067186856 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065678708 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066533079 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060134915 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064675705 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065150799 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065472377 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074490448 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066141516 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065229515 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064393649 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066537911 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064819353 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06284308 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073906526 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074470805 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066148899 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072271866 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064610129 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067006158 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076306561 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060324637 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064125613 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063924711 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063669112 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072821788 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066213804 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07507041 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065728706 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065189078 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063129835 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066590832 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064933753 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060250821 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063614264 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069270165 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064486359 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064072949 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065704467 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067492001 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066052222 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073385868 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063968442 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065073358 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064295763 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061523385 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.19987881 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065492283 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068843846 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067604154 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064440007 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064268336 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06631224 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066783812 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067545019 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06622976 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067263379 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075343874 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066489484 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069421283 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069642526 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061447686 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069361971 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06595514 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065969869 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065154036 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070031978 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069043002 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067204968 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074633882 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066579848 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06670404 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067074949 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064209276 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065778278 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065718334 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066896426 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065864293 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067559271 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073806512 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064634136 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06824879 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06638031 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066320541 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072766917 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067379645 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06944898 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072976639 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066110159 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067303624 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074442313 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070131338 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068796193 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067313117 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067664194 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071115226 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065957995 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071986823 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066826059 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067203546 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06824813 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064291906 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065640557 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066173167 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06569873 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072033584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066973773 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065767446 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065877592 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064331732 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066930616 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069351209 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073218757 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068264342 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069288253 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.0610998 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06328 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066983438 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063217443 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067559309 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068622138 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071009947 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067932875 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065816186 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064663689 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074004261 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070883485 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068790394 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063661634 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068972756 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066446837 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067421763 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06660249 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06577734 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066826807 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069013349 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067036181 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064834982 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072027829 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068973139 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06638207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067460638 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066310881 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065867639 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060882282 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066099274 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067599472 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070420562 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067678405 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065670314 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075874984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063246085 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06588635 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06882612 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065338938 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070091518 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061125089 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067163614 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06710647 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066990037 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061206215 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064953335 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063440264 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067381585 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064542289 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060648023 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074922585 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072937173 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067283755 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063792687 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063287675 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.195448671 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061989055 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065398996 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067842122 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068317409 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075880352 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065266191 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06508817 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061392249 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066240301 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069245311 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070148224 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063734051 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061790277 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065295235 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069474287 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071891452 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065049386 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066258628 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06980925 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068259701 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064139591 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069374541 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063887881 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069931713 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078639187 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066961915 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067473339 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072709068 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073713481 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066706473 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061556614 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066922663 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069060331 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067397 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06784837 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067393579 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080026608 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068504141 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065208454 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065010839 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068822372 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065640165 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073869997 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067535402 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066533846 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071031969 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068067539 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075603603 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068670238 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073793306 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068932224 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069554654 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06571855 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066319987 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064277029 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065954529 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067193062 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066683393 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071792626 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074318729 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065920511 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07617191 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074765608 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067474766 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062429865 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066221206 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065488572 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061123189 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067334439 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064306325 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064389736 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064143195 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064815142 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067567339 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070891677 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066506402 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06707057 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065941107 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060490213 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067780444 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067821216 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066577575 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062936569 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06590203 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066712797 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06973031 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068854943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063512237 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067053805 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067020626 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066202596 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061023547 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071749439 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064707525 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067196504 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065093656 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065919424 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066254826 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068708121 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070413487 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066490937 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067698345 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069059945 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067809961 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063297206 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063152792 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070933916 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063733687 seconds)
  done (took 42.294315889 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100665474 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062816393 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061104375 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061262876 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073394735 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062065307 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061205831 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062405446 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062372005 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064338959 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061451204 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061490187 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069998687 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076875079 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073561531 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066165409 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061217572 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062627272 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061676275 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062384 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070243245 seconds)
  done (took 2.787807943 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074050948 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.06938286 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072020979 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075122756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066606343 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070034416 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071892508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070028397 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075337524 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06662092 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07531423 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070194789 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066470049 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066866673 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066149897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070134964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075783253 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066387066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070200457 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071849488 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070058113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072020456 seconds)
  done (took 2.911929016 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066453261 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065668391 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067307982 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061171411 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066132847 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061469389 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069360812 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063799827 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076913514 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064550379 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064218582 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064235675 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066797834 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060622806 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065293286 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063169356 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106840669 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068449486 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064924983 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06617959 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060667797 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067272497 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060954163 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061504535 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064447165 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069055087 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065999146 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063564711 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064935201 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064490338 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065321418 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063209879 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066486245 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065913937 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064676737 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064194935 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065324467 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065191805 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06110607 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063599961 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065703922 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061267857 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065249616 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066549361 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063412312 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063150963 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067011822 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064880019 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060255769 seconds)
  done (took 4.580620186 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08018364 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107547662 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067322299 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087294313 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079430795 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074857043 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068583324 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088409071 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063091707 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063941885 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08068385 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078952679 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065061117 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069608211 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071654657 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065116514 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066334523 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063880593 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068865825 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064448298 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068906543 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071502647 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079135425 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078079673 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06922077 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06410135 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064830205 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069191927 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077522402 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069670447 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06937276 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070353704 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079821525 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070543181 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064453593 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067674469 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080960103 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065988394 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06776372 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063218042 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067849256 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069222752 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071746088 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081376727 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065332346 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070206128 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065301739 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062405002 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077765823 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067265216 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072653025 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079168213 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069417872 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065071476 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069711416 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079510139 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064813614 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063415699 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06765328 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07702479 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063602384 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068420511 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078355234 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066892031 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071633426 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078874425 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070514461 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068301497 seconds)
  done (took 6.360677657 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075635195 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071796254 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079739163 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079284379 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071949524 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072400434 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071495369 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071551915 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071124208 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076658855 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071848643 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092611255 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067075184 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075020577 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072183364 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071889201 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072140077 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072427192 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071688961 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071406186 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071809757 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079195317 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071958266 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079471673 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097546501 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06734194 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071499741 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071633659 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08039643 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07164849 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078948708 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071573097 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071593356 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079368612 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07847374 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071317697 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065017361 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071609994 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071532008 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074186938 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066904792 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079316975 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071024129 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067238739 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071314752 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070939537 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078767228 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078590392 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074280917 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075855438 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071512381 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079133758 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070914989 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0718988 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079049424 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103603911 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078789327 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079424108 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071845095 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078807496 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078763884 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084974173 seconds)
  done (took 6.041944393 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08447465 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073879164 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075855201 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060900662 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063635183 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06920571 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06378432 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063632519 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073806469 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073392765 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075949 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068756787 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072128561 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076368372 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069502829 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072136025 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06893728 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068908112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073728643 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068811545 seconds)
  done (took 2.799167707 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074224719 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082587646 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067452479 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071486194 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068836469 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070789078 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06793428 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068516846 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066102056 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067989275 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075967006 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075296279 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06637266 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070866143 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074706853 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071077605 seconds)
  done (took 2.512377223 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074903113 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071801688 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079206805 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066140484 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063796283 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062269949 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065333435 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060997639 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062156004 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076948066 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06529445 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067612245 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065183848 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063960237 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062687736 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067994237 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061726652 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062776385 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065693189 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077212788 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07593863 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063700634 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065720958 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065762172 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065263035 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070102236 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064485375 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062951304 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062302592 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065770499 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065597165 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068757151 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062197263 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06349044 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064271151 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062910844 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065386415 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065743815 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067896919 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065529746 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063766979 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065219305 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065578921 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065974996 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061853239 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06544306 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061323501 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067197325 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063291667 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065511055 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065022096 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067569983 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065408579 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071220762 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06832601 seconds)
  done (took 5.015616113 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078814614 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068898849 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0617927 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063660835 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067815503 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066613511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068843929 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066801793 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067238835 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063319725 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066895352 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068473303 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066857691 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068902688 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067246487 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068793132 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061381546 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067127626 seconds)
  done (took 2.594089102 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070760367 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065569236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072231428 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065884057 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064871462 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067677098 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061412843 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064164411 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064200535 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065385815 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065480219 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067371236 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064069421 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06747379 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065028497 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064973192 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067323067 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063809815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06547962 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061658194 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067562024 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064063226 seconds)
  done (took 2.826520406 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091479406 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080206464 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.135741649 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078006697 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082293786 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070652399 seconds)
  done (took 1.920045051 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089513654 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078269113 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065871649 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087309076 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072778651 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066879247 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066738368 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066781077 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07513914 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075319098 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066742536 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075657248 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074910289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074846585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072459641 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072157998 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066595765 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067292469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065859567 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083314213 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066971018 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075176571 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06711916 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067019892 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06687603 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075054039 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07539975 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075210121 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066431731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075412281 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072103477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066929683 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075355405 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07516897 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06824354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075129164 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066544669 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083545389 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072372615 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074223322 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068320212 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072999183 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07502942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071712084 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074955115 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066808193 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071336308 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066677751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067158893 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08505509 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072555607 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074315642 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072462437 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075144923 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07535891 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08505334 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075233015 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074499101 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072919289 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077704498 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07454056 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072091464 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074369711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075218043 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072471779 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074661166 seconds)
  done (took 6.205066158 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082073566 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085283906 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067458003 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075542631 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075385595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066985015 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066982297 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067382692 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066990556 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066573602 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106286026 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067174444 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074689879 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074905004 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067159166 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067219711 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066943702 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074572215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066685635 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085532591 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067192647 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074710063 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074472524 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074845537 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075766179 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072341951 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066957701 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06699447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067358395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0672032 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071924659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068117918 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074826162 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066491027 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074925319 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067414819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066930486 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071792244 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066954883 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072698242 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074654341 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083820278 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067176904 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066830138 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074967127 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06698678 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066788651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066296091 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067003919 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066705643 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075193052 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074890366 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075049547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074585876 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067316389 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06680293 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066818958 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067022224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06684698 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072145273 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074606084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067058584 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085306617 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066869236 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06711302 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075000217 seconds)
  done (took 6.120328691 seconds)
done (took 129.208137837 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18394815 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16494046 seconds)
  done (took 1.721311837 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068956265 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096839605 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075911791 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12838201 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066558013 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09931109 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098345606 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076881218 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065484576 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065372174 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065668417 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068126331 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130584867 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065799999 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065544462 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068669344 seconds)
  done (took 2.691702528 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09767473 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156296114 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098559149 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064236108 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096257852 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072430366 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064351736 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074399055 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070283572 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064765777 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072344221 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069847069 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064597623 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071483186 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070480317 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071918425 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064235034 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071957488 seconds)
  done (took 2.807395278 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101752853 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089998456 seconds)
  done (took 1.582560972 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156192258 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104811324 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143022063 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342023754 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165709701 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228145789 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126434937 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127111634 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115665635 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122802338 seconds)
  done (took 3.020755259 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098106913 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150465397 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253014542 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114048615 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071566093 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094139675 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115318993 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077041328 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080411605 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079668074 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079744866 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075504155 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097678756 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07259232 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072744076 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075594042 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10085759 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071787365 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073300229 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075824208 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098671466 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064839314 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073111443 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072061061 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077184392 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076950063 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065386604 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064921383 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076473249 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073628273 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076604612 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093358969 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07716854 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106112627 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070042274 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108348476 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076379544 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07349222 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073928202 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073606371 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078865207 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078621739 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071687225 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075575765 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064871171 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075132536 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064530719 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064539449 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077274663 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065890315 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076799671 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076096118 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106012411 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066378477 seconds)
  done (took 5.962673384 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100588017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102481389 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070570511 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110836116 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099288584 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07169434 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099857798 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09290397 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102117574 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06978459 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067479888 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069524252 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081784978 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082478349 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111619255 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103404593 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073206515 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07042805 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102764123 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102029685 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068262918 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09373449 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088570539 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100811759 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066841228 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069561808 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067413201 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069521846 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076218263 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077676916 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069765039 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079940115 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084171033 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078093702 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066639499 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067268876 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067677275 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079432676 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078848625 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078087396 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077460242 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067403463 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06725157 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068999592 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069535881 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06777529 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078340322 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080047443 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078321928 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068992849 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069418195 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067400947 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069086985 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079526914 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077289032 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080380049 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07920586 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067956617 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067886126 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07173935 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080091454 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078727043 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078734256 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068607954 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078448607 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068261836 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079281487 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083368381 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06774787 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069217664 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067745003 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068759144 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068708098 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077066651 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077683874 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068651055 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068686684 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067209122 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079625139 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077739499 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06732876 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076215405 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066685377 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067830579 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069188301 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068982596 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077378657 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079709204 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069152814 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067713606 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068766445 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06822955 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066951426 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076235368 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079872999 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078652922 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078456079 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068969616 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078017401 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077737174 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068664117 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077754898 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067255981 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068322735 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.201389727 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079741859 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078410179 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079805859 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069223317 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067819848 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078403182 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081260387 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068287107 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078544317 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080666585 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079717083 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067879939 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081587733 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068983707 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079400726 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06906629 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079728967 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068419955 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080035042 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06853361 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067624795 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068942382 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079192889 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069802989 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068339745 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070099585 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069365761 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079322741 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082626868 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070803553 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081259322 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07887904 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070061884 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078596864 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068211792 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07896869 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069580396 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069035 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067210314 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081754155 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068089556 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067744859 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069336552 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079316342 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069090962 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080032035 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078070263 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067606227 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080633197 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080788094 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076964805 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079886962 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070714697 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067955764 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06760869 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068659842 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077709823 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079601523 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070657443 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068366995 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07726255 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07916425 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066671083 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077624021 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077672547 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078180876 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067905681 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069457396 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07997266 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080028005 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.0785026 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077516273 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077863738 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068081117 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076930662 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07767367 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067464685 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082929033 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06755333 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082031482 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078690413 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076643917 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078247332 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08010753 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079354628 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079225734 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082673311 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067544368 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067161708 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079245402 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067253457 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068405361 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077630897 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068889019 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068734108 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082943219 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06790306 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079290032 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06743272 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077616342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06521042 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067874712 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081442312 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066476101 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067958961 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.21480434 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069440174 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077656102 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080682319 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078812923 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068185753 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07003154 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079830161 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079126589 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068303515 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068426986 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069760698 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078078539 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077214547 seconds)
  done (took 18.574539932 seconds)
done (took 37.759270935 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213969875 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148854292 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178224235 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116751693 seconds)
  done (took 2.152010219 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121799213 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100916865 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094347384 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064365999 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100918151 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064421379 seconds)
  done (took 1.973166702 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310511515 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208619182 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180167791 seconds)
  done (took 2.124550814 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195807695 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186117271 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.391644578 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251617271 seconds)
  done (took 2.555474861 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143133403 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08866584 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06626235 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082171596 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133165939 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159443374 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100126771 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124491141 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077274217 seconds)
  done (took 2.453353425 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145653566 seconds)
done (took 12.831273203 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191962988 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.215756715 seconds)
    (3/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.10785032 seconds)
    (4/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.17072204 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.219795738 seconds)
    (6/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.157363832 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.119090298 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104148864 seconds)
    (9/309) benchmarking ("sort", Float64, false)...
    done (took 0.142998202 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078643648 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081085647 seconds)
    (12/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.157176913 seconds)
    (13/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099991852 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166033095 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.195370739 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.177510629 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076437046 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089032099 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070545267 seconds)
    (20/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105346856 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072213237 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081241404 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187631323 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08841148 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126572108 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050398118 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074850381 seconds)
    (28/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.155104363 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07138925 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070419373 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095437669 seconds)
    (32/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097050819 seconds)
    (33/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.158651961 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074203821 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064175192 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071831149 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215174202 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107187482 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050351967 seconds)
    (40/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.085257305 seconds)
    (41/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.118304489 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.188468661 seconds)
    (43/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.15543056 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071049228 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090516065 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064530946 seconds)
    (47/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075814721 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.170510182 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089055217 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.181125855 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071415871 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060926139 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095352147 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172732064 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068005078 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071599592 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063608803 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078467204 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072005973 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150777895 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072047744 seconds)
    (62/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061445197 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071286178 seconds)
    (64/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063841963 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06389458 seconds)
    (66/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078392601 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.192093355 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073096155 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.14013861 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074573534 seconds)
    (71/309) benchmarking ("sort", Float32, false)...
    done (took 0.126091484 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071677664 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072761332 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11324851 seconds)
    (75/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066726911 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05182019 seconds)
    (77/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07827403 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069626001 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076171956 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087307635 seconds)
    (81/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051085642 seconds)
    (82/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.147123401 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089974491 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066098376 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06374549 seconds)
    (86/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087471235 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087972697 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064036365 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.338627303 seconds)
    (90/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073009996 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072743314 seconds)
    (92/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072708618 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065692101 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076584336 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.06659914 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064772113 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.158028805 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.182954045 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117870372 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091478292 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052829784 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160839016 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083019613 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050980057 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068087813 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087720436 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.139647399 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065138922 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069004658 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071204525 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.099916238 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184336132 seconds)
    (113/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10440144 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052625461 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135085307 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.368406841 seconds)
    (117/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065548502 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10681472 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193538002 seconds)
    (120/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071888018 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087322297 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089343101 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133348071 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.061807568 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.147288929 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071557596 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051887161 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050968847 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06458403 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08968831 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13411455 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075157365 seconds)
    (133/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.148176065 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064826087 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071686453 seconds)
    (136/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060965417 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.130581618 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072646039 seconds)
    (139/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052734909 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064716855 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071414711 seconds)
    (142/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051002 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068445844 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070043074 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07066218 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087395146 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06458671 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.203534458 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072980333 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065694933 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064355163 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070823629 seconds)
    (153/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059869516 seconds)
    (154/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073385773 seconds)
    (155/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084982652 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050653545 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078939357 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064151419 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071893034 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069789554 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088516073 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050830434 seconds)
    (163/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051712615 seconds)
    (164/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084944544 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072556093 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072435795 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063414743 seconds)
    (168/309) benchmarking ("sort", Int8, false)...
    done (took 0.138410388 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051563563 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.143464809 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.148311826 seconds)
    (172/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065975417 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064509399 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114345301 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.173588707 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064657617 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050590781 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05079368 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06444493 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050937989 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066765155 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071118398 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067260598 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064545726 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071051601 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.130550541 seconds)
    (187/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077394201 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108870893 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107676834 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070583751 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08648347 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.161826053 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089623942 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063456534 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072100142 seconds)
    (196/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073377135 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071330113 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.224900349 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10861123 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052178811 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164170825 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064263406 seconds)
    (203/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072961657 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138578204 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050899298 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076200692 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069493701 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.184350388 seconds)
    (209/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150554663 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05211678 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091727085 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069887088 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07371521 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072733324 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065514338 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110744119 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066161958 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137127134 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067368484 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050994377 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066448424 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072129895 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093898196 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050528997 seconds)
    (225/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070871795 seconds)
    (226/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.155619013 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090801686 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091093101 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052612468 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075884881 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070580202 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182596346 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063210943 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1375779 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051852065 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104889014 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05037968 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.129927257 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051224365 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085722835 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050768768 seconds)
    (242/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079337437 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064665897 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174658854 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.062560705 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089802322 seconds)
    (247/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109083764 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149202668 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065882959 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050708856 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073815783 seconds)
    (252/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063984051 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064910558 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088343796 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067611363 seconds)
    (256/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103112674 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138948975 seconds)
    (258/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066589004 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064552109 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.123699139 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070233053 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106429488 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050637671 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.08987641 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050618035 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050269992 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077359732 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170926316 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07196156 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051951014 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051790789 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086702444 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050753591 seconds)
    (274/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051161755 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165377845 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051057252 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066044674 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062174425 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064578295 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074139358 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072594702 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050900114 seconds)
    (283/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064999454 seconds)
    (284/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106711573 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063961892 seconds)
    (286/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066124401 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072627479 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051711195 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06342252 seconds)
    (290/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050732149 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071772071 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.0529553 seconds)
    (293/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050331233 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062522666 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070109546 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051280462 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.1228964 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050702189 seconds)
    (299/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050499552 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070244545 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051070035 seconds)
    (302/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05115466 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069770847 seconds)
    (304/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051357908 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051948945 seconds)
    (306/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062731037 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051813361 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064783846 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05171948 seconds)
  done (took 30.121554268 seconds)
done (took 31.560265585 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083949703 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091557955 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073385752 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.089977832 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079443694 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074843994 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07080394 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076447989 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077825283 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079591509 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076761662 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053449371 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072227909 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072143215 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07256849 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089321493 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07624099 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071406483 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071514517 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063453933 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071469438 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064323338 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066507491 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053797237 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076608166 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070301495 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07161219 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072626482 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064877629 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064845392 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068058458 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072091263 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064480575 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076852291 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07121723 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071855982 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073358276 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075510519 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066301054 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065189268 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072661956 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064772255 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07140326 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072468915 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070856076 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070307133 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072239508 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07669874 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089631926 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066763997 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073127105 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074412666 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075076321 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071379971 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068437669 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072220836 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069908549 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089367534 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071944828 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067279502 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072334757 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072410021 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069538314 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072715821 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071885393 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073648799 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074081255 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069817245 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073450153 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070044265 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064319179 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071848834 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068066746 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064820621 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074275398 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075259679 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063632119 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070026259 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071184144 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069743386 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063552742 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066169576 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065897701 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070600284 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066291974 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053328822 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067821526 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070342639 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063592451 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071836495 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070805074 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070990321 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066021524 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07392548 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063670103 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069710377 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064550923 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064671676 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066060022 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068298675 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064135137 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066805077 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073024743 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065824815 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070334899 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078280392 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064177941 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070529446 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063857727 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063408794 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078310736 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072899999 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064518841 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066529418 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064132925 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070997708 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063409271 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063831447 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064285458 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064318511 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069408622 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06400758 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065891118 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0708914 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075861327 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063546688 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067238549 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06541862 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06321889 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068395191 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063223763 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062922315 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065216374 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.059576272 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065663127 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063261376 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070831019 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065566026 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070293437 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065040917 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070935682 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067764776 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068537951 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068007362 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061895628 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.056438522 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065160886 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064909143 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064492329 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062988123 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064396375 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062883353 seconds)
done (took 12.118641426 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069354118 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141770331 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098553464 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094670154 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084766926 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065921494 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075053171 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100138506 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066789805 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101038973 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088156731 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08386522 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110962021 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063823595 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06505688 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068591973 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066549263 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080861482 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100109278 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085691775 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114222161 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064462142 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093043506 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088762158 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086036282 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090720888 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066116602 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068747238 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06857957 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099259809 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08526142 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068417607 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065534762 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.0988034 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091301515 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082352951 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065637528 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081626725 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065917651 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064894199 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066438869 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096891857 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078729185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079098089 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068785292 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068615666 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066016093 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08312703 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088074933 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078010424 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086125922 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101812207 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068278475 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065353919 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064144955 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084661079 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064573975 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06863974 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065378584 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067644658 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065805238 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068495057 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080177953 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081370772 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068770353 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079540018 seconds)
  done (took 6.767979876 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083726764 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089082054 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082327521 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082144256 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065326313 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065603785 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065627499 seconds)
  done (took 2.060599535 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067056503 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087199031 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087539102 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087986925 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083975493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086306171 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074787438 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066067803 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079495909 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066934028 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0859573 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10064073 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066114368 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071781127 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089173533 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065739113 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089426916 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065780433 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068410558 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08848835 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067691623 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081001433 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068929663 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066105561 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08004029 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066004871 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113519145 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069844882 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06760792 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068760242 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063844719 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105856885 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079758568 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074510933 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065818903 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079827142 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.07986492 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063800161 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081701368 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070520229 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079234167 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066412595 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066720292 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064276354 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069928859 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076028597 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066743144 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066674921 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068251755 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08515263 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066244154 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078972897 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069064025 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068465148 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067027991 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069721182 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075455335 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067133592 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085687075 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066903722 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082362326 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081549049 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079035669 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081158838 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067993853 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078740982 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079096 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067790107 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067142633 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069055478 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081247487 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064217121 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066796141 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076213395 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067282696 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088072055 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087582059 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067274556 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074435218 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065703206 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066025571 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06596126 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088053412 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068123768 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065809065 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070157451 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068800012 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064071351 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064866886 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06893704 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064139671 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067264991 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069335963 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068699716 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068835485 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082048761 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068488208 seconds)
  done (took 8.706044862 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06811402 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0675156 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068970941 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067217304 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067776787 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067053237 seconds)
  done (took 1.953068846 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092777465 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069144867 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080066017 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072228018 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103234132 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085574666 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086163094 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077792133 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082730584 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078590674 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086112838 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087266979 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092013744 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072014554 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085594429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071094625 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086284696 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076073985 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07758987 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072668042 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085571966 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071820518 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07229635 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08044165 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074531343 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071406642 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066476459 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077989616 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077621941 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078001958 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07196538 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074721274 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069911859 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078204572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08599361 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069965638 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071328048 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076482221 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072790764 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074697911 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087198238 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072449383 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073940047 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076928569 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07757379 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070360046 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076407473 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075657125 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085469293 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076507926 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076294715 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071327203 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074453745 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076266242 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069958053 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077860783 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076373194 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085640992 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071995734 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070250499 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068319292 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074931041 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07740438 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075250138 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078049999 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076370425 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069961943 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07236377 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072508036 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071345747 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076881787 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068693306 seconds)
  done (took 7.065515184 seconds)
done (took 28.107562306 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543449827 seconds)
  done (took 2.048562822 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.59350391 seconds)
  done (took 2.129980251 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.54180474 seconds)
  done (took 8.072013314 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404571948 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.50511957 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.688492341 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130062765 seconds)
  done (took 3.310400565 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.684401098 seconds)
  done (took 2.231244473 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.206751272 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194133595 seconds)
  done (took 1.960241454 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374342904 seconds)
  done (took 1.906130872 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.108069484 seconds)
  done (took 2.642809461 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261105318 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162308393 seconds)
  done (took 1.962739074 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459691685 seconds)
  done (took 1.995274301 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.73347311 seconds)
  done (took 6.272852326 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205909778 seconds)
  done (took 1.784108625 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237820167 seconds)
  done (took 1.774844438 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.690978665 seconds)
  done (took 3.230137123 seconds)
done (took 42.863274669 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078857678 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079928868 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080326551 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076564353 seconds)
  done (took 1.84158914 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075864924 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07216713 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075699965 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071277607 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075644392 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07192669 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073065977 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076067881 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07134719 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072334549 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071790369 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071518037 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073786189 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073251908 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070291931 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074149329 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074976781 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071350916 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074237982 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.0718774 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069702093 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07357224 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073354271 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070923375 seconds)
  done (took 3.289795933 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076853518 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072325193 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07357793 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071185797 seconds)
  done (took 1.839826276 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076626261 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090921732 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088387584 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076654404 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090979745 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085075634 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067774654 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067843031 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071761739 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075695175 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067492572 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094734258 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08652224 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075771635 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078165327 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065160697 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067346629 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085339313 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076124099 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076489584 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069215769 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076290543 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067360928 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086710727 seconds)
  done (took 3.405016697 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077389085 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101551412 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07688851 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086476623 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088427065 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064395097 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073803164 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088408618 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121028515 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064211905 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069338566 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064522163 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071449845 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064241339 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074999601 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103172215 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106650103 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067951841 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094449308 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064461594 seconds)
  done (took 3.176072937 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072624513 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068435956 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06579023 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067681034 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075938021 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071721226 seconds)
  done (took 1.973789686 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06786559 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066425949 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067025739 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065749998 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07109279 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066268174 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064663867 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066714755 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066761876 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065733398 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065814145 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065351861 seconds)
  done (took 2.348557659 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192264072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067702261 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067995837 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065427972 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069362417 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065286487 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078402007 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066859446 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089095372 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065341276 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065762528 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067649853 seconds)
  done (took 2.507742316 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205403653 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074884912 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233364133 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134835317 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110164076 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11486311 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102409018 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112003783 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141487777 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10022749 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165411314 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163346594 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105474945 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135567139 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087626094 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096487042 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154001579 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160154897 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102319677 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163179605 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142145721 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122679191 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145168349 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100098658 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104576037 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120972477 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070236703 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079121299 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168400059 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129582894 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144440495 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10936168 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092110386 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173238694 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168529668 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140295352 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133014793 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083222047 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100540795 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131664982 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196243836 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086624558 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160552782 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248305413 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080337811 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132230807 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119037962 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118485567 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105666913 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088988531 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143830185 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180237063 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137094364 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086021784 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111213121 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114517438 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114625401 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102553878 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17915432 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159707185 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125787931 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072538679 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098342491 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15136896 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130271676 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107321016 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126117952 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092130785 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131967385 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152127094 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117442724 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142312872 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127872974 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087213975 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119428925 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138143132 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126755386 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167535896 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122765266 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071307401 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123272582 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102039347 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079737004 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.138917831 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074056516 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173155138 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097387245 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104798775 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111293226 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107515237 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107168089 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159652915 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141981043 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247452258 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065234701 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10280747 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118884806 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147269289 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085990039 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108401183 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11606539 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07688539 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138946238 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073826983 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121954448 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074409584 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123978892 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130223209 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074975713 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12047356 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099221152 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098584552 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132992121 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157152866 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08782995 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081833293 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164999509 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119809733 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102612747 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14270694 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153472746 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097249328 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101681955 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147459469 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177881585 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088087861 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161156932 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106077045 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082560459 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085892485 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122628028 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110640055 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120583461 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081233558 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116740071 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166000684 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074170846 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093983255 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131394745 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078123385 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079810792 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102652373 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09901248 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093286999 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098268839 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1026457 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135640605 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121537471 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102695064 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272038825 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097797238 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169391165 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087400898 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099680455 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102803526 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069270245 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135151815 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155629363 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078639109 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163349149 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122695802 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104276835 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117369929 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08209321 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138915619 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07813567 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07039267 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141888057 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109352119 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109146998 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148819552 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103563133 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126208117 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118895763 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133875766 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130729912 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127362409 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103996598 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087664157 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110365272 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124726352 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071895537 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089707169 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079751008 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102089187 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094304376 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082431053 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140046763 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122809707 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098128 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110161532 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094996203 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144729605 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075377263 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127696106 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117552523 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09305005 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15024047 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150308359 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129349086 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097590941 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142989343 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06889071 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072678713 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233462964 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122313877 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082775654 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082987339 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116566457 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145344043 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128257511 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137455082 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109985717 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119910789 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153015233 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068948728 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113402627 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145445582 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120154086 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102711434 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088864479 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097584324 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140269602 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106452837 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180578144 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113134567 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12420537 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150889022 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097736921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078848676 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101665333 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133790155 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103441264 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142570305 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098243674 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086961743 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108643574 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.0728376 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099133742 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125412302 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119287155 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133463323 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112674687 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131037096 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076244904 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115903323 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118752059 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121366362 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06373725 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118735963 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159537494 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092031842 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116583337 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151152663 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078115542 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122719278 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322330333 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143899067 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083944899 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108603619 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117196157 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126251949 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117899961 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137781308 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107227919 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134243662 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108434948 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084850555 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0867106 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095624928 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104203286 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093679617 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108008492 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114164617 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094586385 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13012294 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102178954 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108131714 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116521318 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095126759 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087767275 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096085725 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172338127 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117220985 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170413095 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097364593 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144816767 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163634729 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07322936 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077549908 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076997497 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138045582 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082502654 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129832843 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095971513 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10453236 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122662368 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140254136 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093564074 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067440413 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107320626 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133045488 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110533605 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096844572 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103345175 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161144636 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098945131 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078535587 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112113684 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102966725 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103798567 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169836095 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.205861973 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096725296 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075218545 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080898162 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126357492 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151947574 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079395441 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101314703 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117327945 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108825117 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126476559 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101307392 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097810856 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112565587 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148237281 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127712951 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089124673 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110763928 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127975259 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154799075 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103876605 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093973591 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170869414 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150254815 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158561776 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088082086 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113344182 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113025032 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106583265 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137821747 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081690371 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161981405 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080632685 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134385793 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103206891 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089690517 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128619952 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097549223 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102600683 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146644042 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116459463 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081702147 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076545525 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116086799 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118662322 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105501832 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074329578 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137125006 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071686624 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130075704 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165851498 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079833142 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102182631 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242449206 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079070504 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107446742 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101803932 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088876313 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097856657 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171124653 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086874916 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146558263 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140371825 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111885156 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135497931 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098286519 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633547647 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077051553 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150265586 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11505685 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172601453 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095983734 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115759523 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107298592 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122024373 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142634018 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103695808 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173095311 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130637811 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114542076 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079148999 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100877971 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101734463 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088039407 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103879683 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111696171 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114792685 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092563718 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114619236 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122397412 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080533962 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093852829 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153273103 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115942723 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142652044 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138517283 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083993889 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116375122 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137625218 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078540514 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120083628 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149682175 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10486418 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096156414 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080937893 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.248855639 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169337177 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072283317 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160612459 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119459649 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10858819 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112669566 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113100064 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129543902 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108022065 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120860536 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093496893 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109646708 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110941148 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080622675 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076181192 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103671352 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111213272 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096587678 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098822885 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097716988 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149584373 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070838077 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095170442 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102128927 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144630064 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172165658 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086565702 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081071709 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117594388 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110996327 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111537424 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119333766 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078315986 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081025365 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080836644 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076181718 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106270767 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11105285 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102967555 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109523357 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162238323 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081371227 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219236535 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093595307 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103099004 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068353662 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07749546 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094369016 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096391417 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106741313 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098680189 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167749021 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093034271 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087931746 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091159177 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071735496 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081033446 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273190817 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109513262 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117402024 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096580554 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062201289 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108913225 seconds)
  done (took 58.236561006 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105012958 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080936665 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094687128 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147805999 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121934699 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210842351 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155749971 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198343845 seconds)
  done (took 2.762529227 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068104555 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092727004 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098769544 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081483568 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066420164 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066912673 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221748476 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078926149 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06562143 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08708344 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077233468 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067718703 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411632792 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064954298 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065972771 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060777323 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066298802 seconds)
  done (took 3.374690269 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362340031 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600509656 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368153083 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072183219 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.396826986 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08961058 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.030704746 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.125795666 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072044626 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538276667 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.706260462 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.122370517 seconds)
  done (took 18.12748589 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075147361 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068084056 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082240927 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082049413 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071025345 seconds)
  done (took 2.015746702 seconds)
done (took 106.474804935 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080312881 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.374208322 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05296779 seconds)
  done (took 2.09313807 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082818841 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083513815 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08366269 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081574676 seconds)
  done (took 1.978722956 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075425084 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075457485 seconds)
  done (took 1.794032116 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220732417 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157970963 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085622611 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082402665 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077369901 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077850103 seconds)
  done (took 1.882821454 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072661454 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074056527 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0717841 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075359523 seconds)
  done (took 1.937081806 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076206158 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051705899 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053967908 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054821657 seconds)
  done (took 1.879197362 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086512227 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07765929 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076772349 seconds)
  done (took 1.884132652 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101254576 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083760726 seconds)
  done (took 1.829470961 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082100215 seconds)
  done (took 1.727551476 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099069067 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112314723 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129096146 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108884308 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135936237 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106755941 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084213552 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085608784 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076350921 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086012742 seconds)
  done (took 2.66883874 seconds)
done (took 21.859911168 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077972399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.360825483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360451673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087856847 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.679592562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354859366 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966236226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090943506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111303423 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066576665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082662439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.666804941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.95705529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317807233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943591053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.314104646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648786449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066944549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066399589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066942108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952477766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066422971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066739896 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067029453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64798469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369592873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06660456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.31846126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066370061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068785045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353303826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067344254 seconds)
  done (took 16.02763813 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070526796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115675544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072554758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082754274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069675591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069053599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070416812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067961136 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117358042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066778981 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083407449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066754264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070940211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067415236 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085452148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066830207 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067612394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067592776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066744078 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067486975 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084660283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066564625 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066886735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067522297 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06696401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078656733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067339115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067611339 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069371953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069929843 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068167723 seconds)
  done (took 4.010980415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114700829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12330936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073408707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10063698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109957784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069143806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140432047 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091133768 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125365352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067241769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082973569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06708952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099121008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06799276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087299531 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067439987 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068351781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067808391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067320701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067535577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085512799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066939375 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067578907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067598038 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067645973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079997441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067308154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067724448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067796833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069220939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070966201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068162342 seconds)
  done (took 4.266218482 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072634795 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07409908 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081705173 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082491043 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068644596 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070704764 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07184297 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06850776 seconds)
  done (took 2.255354634 seconds)
done (took 28.211824462 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079269575 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068393489 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071320467 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079449341 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072082877 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077190371 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066359436 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073578517 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070756584 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07207808 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073706247 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066531783 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069749883 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066229343 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073022986 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066726472 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079257097 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070775855 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077832034 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077960375 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069275224 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072322729 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072965062 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077297071 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077806417 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077768465 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076239943 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072129302 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068217261 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069552578 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075174773 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082118561 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067219198 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077934149 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066966819 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066579525 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07030572 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066758192 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077999472 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075263323 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068058813 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074926044 seconds)
  done (took 4.692968259 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086677029 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089658779 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083069183 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060308398 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065829231 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063906421 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08698972 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058264128 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058151321 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085942143 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054727121 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058243596 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061340981 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05312741 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058020262 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05570586 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060257911 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054868247 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058165401 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058366068 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086583886 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053034308 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075208482 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061391033 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057642958 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060901823 seconds)
  done (took 3.376778421 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074317953 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082842615 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08706322 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1240851 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102057674 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075242822 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077729665 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090818139 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083255816 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065751248 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069868855 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091858593 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085800286 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072474955 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066346946 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082541191 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079925295 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067692452 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072114368 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090397285 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083778785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082921494 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090889438 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079117987 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065795241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068440891 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.06984918 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08016952 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070813041 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075553751 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070503088 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069617012 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06824442 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077127515 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070082489 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067754101 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089168267 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075866903 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076504784 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066528617 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069639471 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067335548 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089312647 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12408477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065984583 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072797453 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074028096 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07535309 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066684048 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084653174 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077071895 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066430569 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069718402 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065572889 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066640141 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079133523 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068307224 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068664826 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074912386 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069502156 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08797251 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070733316 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081456026 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066189011 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073703028 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.0656022 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067571207 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065657778 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091689186 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068025983 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106395709 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068041945 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067350977 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075085456 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073807018 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072395131 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066697741 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081087312 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076411594 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069955825 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075036637 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069989171 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069427677 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086511765 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068958687 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068283602 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067719429 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072429607 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069097288 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067660883 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078945115 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066637523 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.0698207 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083069728 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066282463 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.0675739 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072783529 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071927934 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065770782 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077208651 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071097337 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066944766 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075758669 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066348511 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069887237 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077637782 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071971569 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06574689 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071124248 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072862272 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067118952 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067680754 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069470796 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068399 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074474547 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073002366 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070563666 seconds)
  done (took 10.439751102 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159279488 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151262212 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069024287 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142726723 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075504287 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07753519 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145460722 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092942115 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06681529 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067474764 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06753561 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108008087 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104396903 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113346633 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077221831 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066716357 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082102946 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112478577 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146925394 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140375596 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082073201 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075417887 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06908253 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067974185 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069693724 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077083631 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083886656 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074960421 seconds)
  done (took 4.361155419 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082245781 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095210443 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073462765 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088617859 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089322414 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066984979 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06903555 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068648797 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.07897082 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077862246 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066758667 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072057161 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07354413 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070481508 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067991832 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073244264 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073226175 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068333043 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069714949 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071987154 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076103158 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.089886799 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.0702897 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066380466 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072174687 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065948286 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063299763 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082972947 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067164221 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089599023 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064791325 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074158382 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08018387 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067489412 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066359049 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066775385 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066388381 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066384639 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068478161 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065489984 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064999955 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05687898 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065941167 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078421597 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0727036 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055526311 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071528578 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071444832 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071171984 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064387633 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069182083 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069112749 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069644976 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073651899 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07113444 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071673971 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067922211 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.072496201 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074743474 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066461304 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063265928 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065209015 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07071471 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065377755 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074507405 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070832547 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065260232 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065998083 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.067835991 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072281258 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066100958 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069577911 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064508116 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068672797 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070984956 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068086048 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067249306 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064965796 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066301822 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066994012 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054726076 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066296039 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052831331 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069365712 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064556422 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064779236 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066252028 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071177657 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078671874 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067584109 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072191894 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067370611 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065250246 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069487659 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059225023 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069103478 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081053514 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081288703 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066481967 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064870159 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080412449 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071332144 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065655482 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055348452 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073798882 seconds)
  done (took 9.048107394 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089455301 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068671153 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08240239 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089573011 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085111899 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073916871 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075130908 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068780798 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081417754 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072532237 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07538961 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067518752 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075813793 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075622343 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069382846 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076297168 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071779851 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081975933 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0811642 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067248818 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074327349 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078607642 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088036218 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.078783221 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077122424 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.07900554 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088067091 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071151121 seconds)
  done (took 3.867332231 seconds)
done (took 37.442079681 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.732960779 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.907638458 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.728824099 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.105451292 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.821082763 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.858017493 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.813363349 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.732385742 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.84264505 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.771460149 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.98260242 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.759662793 seconds)
done (took 64.721452456 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.742268456 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.869020427 seconds)
    (2/2) benchmarking "String"...
    done (took 1.997241824 seconds)
  done (took 5.535647468 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.074473345 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.311782671 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.959421041 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.724202525 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.729530797 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.95757847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.529618502 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.266756626 seconds)
  done (took 30.146889059 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.865379164 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.969244257 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.408147594 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.450833063 seconds)
  done (took 15.420563292 seconds)
done (took 62.67711937 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.740239343 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.730768824 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.738466196 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.708239339 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.781925348 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.737744687 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.28548521 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.801975887 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.722716093 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.719848237 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.724486877 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.151939308 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.743471337 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.142816617 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.726276385 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.735972162 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.774087449 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.219748065 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.886066106 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.737424973 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.729882052 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.792849885 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.725899782 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.886631471 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.782500812 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.727842252 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.169246115 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.743486844 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.335427775 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.731393533 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.757377294 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.277079101 seconds)
  done (took 203.135153128 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.730963644 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.567192008 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.674715964 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.731044977 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.055847842 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.908696804 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.830923082 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.143879055 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.732048332 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.743064145 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.919223617 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.729954119 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.935520307 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.677036302 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.75864761 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.733757339 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.894180147 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.93709949 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.760436799 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.894469345 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.751514903 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.769003943 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.719546417 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.890823994 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.741627172 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.755092237 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.741190873 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.738689972 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.92081496 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.886764507 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.756278948 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.746454465 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.919004964 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.602666048 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.756613165 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.749053219 seconds)
  done (took 167.476586795 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.099632558 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.731915806 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.731554405 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736357266 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.735959348 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.729287292 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.85013395 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853301248 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.194774605 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.223468846 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.779478011 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.576008521 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.735788001 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799799895 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.746101128 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.731494705 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.745507917 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.757603623 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.733941564 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.729778271 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.857081175 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.74182967 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.840915066 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746541812 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.732269708 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.735802975 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.102380043 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731428622 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73620513 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.973146377 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.731103714 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.732292188 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.637574672 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.119197266 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822531594 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.731547844 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736955902 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.73110035 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.954394216 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.730125023 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.73041932 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.73172461 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.735052263 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.919800819 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.731288375 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.853649234 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.732400236 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247283426 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.732831664 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731476605 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.476166741 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.436242897 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.738544156 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.730332076 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.733736506 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.73130081 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.732285936 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.737068654 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.484851552 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.804219343 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.732504648 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.732666241 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.731939951 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.739734459 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.735756878 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.731744824 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.801544157 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.732660527 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.732314742 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.793470499 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.844782318 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852217101 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.734880254 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801526368 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834127485 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.733304909 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.733089037 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.734367502 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.733436792 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.814029063 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.733794429 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.852607067 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740786167 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.733031591 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.789475871 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.801364008 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.73479231 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634934823 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.742400057 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.731375001 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.083871644 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.802286254 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.737862634 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.732740661 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.732167966 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.855503242 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853157485 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.53512319 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.73475739 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.554860059 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.935806306 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.932915708 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.735208407 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.035361169 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.735602114 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827740766 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.738315329 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.734880927 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.73536978 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.734592389 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.767354542 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.737208193 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.797180663 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.733256362 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.105793703 seconds)
  done (took 398.368107716 seconds)
done (took 772.810440599 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.404267782 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.357158956 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.475246426 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.380369475 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.356197925 seconds)
  done (took 13.646451302 seconds)
done (took 15.323814875 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.828409137 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.825898898 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.762885341 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.826463353 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.755446151 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.825074357 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.804112763 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.761775477 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.792902238 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.759671955 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.796949486 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760285631 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.748513799 seconds)
  done (took 24.922312652 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.962094255 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.976320053 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.808496464 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.971533464 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.78397315 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.96368439 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.896591915 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.887889884 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.888241092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.751821853 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.749345812 seconds)
  done (took 22.315690061 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.973125534 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.973742999 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.814699035 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.981793025 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.788731228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.964388708 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.898242744 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.888422758 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.885253366 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.752684129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.75047304 seconds)
  done (took 22.349700017 seconds)
done (took 71.264060134 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.745889113 seconds)
  done (took 3.42266658 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.767161028 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.906724013 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.751567759 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.749683715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.746099024 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.745340813 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.750040974 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.744537908 seconds)
  done (took 15.839412834 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.741114475 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.74564037 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.746465506 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.745156559 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.746835142 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.743463918 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.744731075 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.742301297 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.745335461 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.746744867 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.745534443 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.745943984 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.747462232 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.74327559 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.74627349 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.742122762 seconds)
  done (took 29.596301802 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.744819207 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.742325107 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.742934078 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.745533154 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.744357879 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.744672079 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.745158404 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.746045809 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.743611866 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.743299601 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.745919471 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.744597515 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.745056148 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.743771897 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.744125668 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.745492402 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.745460949 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.744008864 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.747559497 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.743951624 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.745731094 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.745599723 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.744741399 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.746989243 seconds)
  done (took 43.555534418 seconds)
done (took 94.090585042 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.649654226 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.143765123 seconds)
  done (took 8.472631023 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.747402334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.747782359 seconds)
  done (took 5.217464273 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.747206141 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.746824492 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.748439621 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.746911517 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.746803836 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.747568394 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.748491984 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.748681741 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.748558168 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.747746712 seconds)
  done (took 19.15956638 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.749361714 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.747725199 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.74422281 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.747886679 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.747597081 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.750694073 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.749078763 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.749019564 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.747555616 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.745693979 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.750550633 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.744845817 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.747472843 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.74611034 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.747747872 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.746735592 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.747940582 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.747012291 seconds)
  done (took 33.138172216 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.747890555 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.748738075 seconds)
  done (took 5.178227556 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.748037037 seconds)
    (2/7) benchmarking "second"...
    done (took 1.747953206 seconds)
    (3/7) benchmarking "month"...
    done (took 1.745716762 seconds)
    (4/7) benchmarking "year"...
    done (took 1.746593577 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.746794085 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.745800014 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.74549266 seconds)
  done (took 13.906584601 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.750808521 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.912470839 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.983626618 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.410318615 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.751396322 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.753548417 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.67735358 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.75337416 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.75474144 seconds)
  done (took 19.429201003 seconds)
done (took 106.182285488 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.557444331 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.744406821 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.103965389 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.802997752 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.788455758 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.084603217 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.778839814 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.970916783 seconds)
done (took 42.517287603 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.826525969 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.294225242 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.334684723 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.576719408 seconds)
  done (took 12.888936416 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.733970888 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.269329052 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.790014932 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.340198272 seconds)
  done (took 19.868743246 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.114216159 seconds)
    (2/2) benchmarking "read"...
    done (took 2.110067017 seconds)
  done (took 5.912829427 seconds)
done (took 47.182218404 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751228167 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.75056069 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.757398365 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.754833293 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.753219614 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.754505808 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.751310166 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.750919862 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.75360984 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.751626942 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.75042364 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.751676106 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751774152 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749382312 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748269117 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752107976 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.74963533 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75018255 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.748312993 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750989986 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.752518551 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754132716 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.748744206 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.749800272 seconds)
  done (took 43.720967444 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.752269007 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.750774752 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.751783269 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.751187404 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.750119573 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.754815409 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.753545605 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.755473962 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.753436789 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.753427598 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749702669 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.7522369 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.752637086 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.752348858 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752760015 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.749936424 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.754842857 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75100171 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753510064 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.750438842 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.754822672 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749702847 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.753073689 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753850455 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.752923792 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753457639 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.754321467 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.750616793 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754723664 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.75079737 seconds)
  done (took 54.259180814 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.757932338 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.762292309 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.754135102 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.755464312 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.754473942 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.755940977 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.754752712 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.754304505 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.755831485 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.755054968 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.757279656 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.753284494 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.754530285 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.754549013 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.75370365 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.756672422 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.757630114 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.754155149 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.755579389 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.75452975 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.75440635 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.753656639 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.758261507 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.755755686 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.755050185 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.757126848 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.755104303 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.754878895 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.756557565 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.756601863 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.755364983 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.755770659 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.756492 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.756163307 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.756654034 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.756407302 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.760798544 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.764478925 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.756032128 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.757166774 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.756476128 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.756283853 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.756002072 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.755452884 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.756697048 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.757883873 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.75592121 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.756907263 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.757438811 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.757767792 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.758041168 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.755910051 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.758868141 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.757221155 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.758697496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.758402565 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.758511399 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.755892363 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.757870497 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.758136647 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.757098042 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.758378501 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.761339384 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.75898021 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.757270046 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.758217973 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.758478638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.759114032 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.755733464 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.759222519 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.759177479 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.758998474 seconds)
  done (took 128.180177754 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.757477983 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755539448 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.756447797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.756055677 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755715735 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.757643745 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.756175726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757398861 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757560872 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.75797067 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758551261 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.755236003 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755075006 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.758850273 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757194108 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.755934205 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.756546472 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756201831 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.758475047 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.759058599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.758196225 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.755526771 seconds)
  done (took 40.341519725 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761293195 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.758592093 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.757182707 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.757572327 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.75688795 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759650785 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.760319463 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758560407 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758868188 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756666573 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758419247 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758959443 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75837326 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75705447 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756941584 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.758825244 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760713306 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.759641479 seconds)
  done (took 33.345351178 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.756385349 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.757315126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.761050491 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.757166053 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.760899563 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.761244822 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757472928 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.759280401 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.759406077 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.759812135 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.758691158 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759817265 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.759374501 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757771638 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760262707 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.759065101 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.760209201 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75633924 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759518498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758125548 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.758248149 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762738416 seconds)
  done (took 40.390415063 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760654269 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760287911 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.75904194 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.757872599 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.757671872 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.760028155 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.759643863 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.757129591 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.760783837 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.761094583 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75806715 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.759618058 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.758188562 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.758928889 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.758821934 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758134535 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.7618711 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760024556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764088648 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.758764589 seconds)
  done (took 36.883018061 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760530033 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76149513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.762058455 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.762616751 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76212967 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.761549206 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760713143 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761543094 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762840271 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.761675927 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.76434854 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.764486674 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.762508776 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.763463978 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762055026 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761118194 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761206466 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.765827702 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.763370234 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763290677 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.763038764 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.764471912 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763292968 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.76203535 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762029476 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.762676501 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.762121756 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.762572007 seconds)
  done (took 51.043818709 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76211514 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76251568 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.760261257 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.759353326 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.759534591 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.763341681 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.760626742 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.759908656 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76317507 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760126213 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.764850915 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.76307913 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762702797 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.761869184 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.7647827 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.762498021 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764694141 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.762317947 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760365823 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761680448 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.764442194 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764421235 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.766080093 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.761360536 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762307666 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.763903062 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761373937 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76266609 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765056963 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.760741111 seconds)
  done (took 54.57130331 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.783012102 seconds)
    (2/2) benchmarking "in"...
    done (took 1.782220199 seconds)
  done (took 5.260832401 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.761488946 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764145247 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.763693133 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.763115727 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.762018648 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767724834 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.76482943 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762619991 seconds)
  done (took 15.807915278 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.763433132 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.767521116 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.76455714 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.763781287 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.766957712 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.764105726 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770389815 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.765149153 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.76568124 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.766740361 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.772343543 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.773497277 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.768662498 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766317278 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.764769539 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767644262 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.767543477 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.766557365 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.766483294 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.767643501 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76545651 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.767785331 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.768683819 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.765195718 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.769131376 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.776937036 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.769857158 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.765770675 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767798918 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.768376563 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.770327572 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.76537817 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.767846752 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.76756488 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.767498814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.767783059 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774863193 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768068282 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.77321044 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.768580863 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767810659 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.767288412 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.771192892 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.769682272 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770525236 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.768680438 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.770931612 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.767196682 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.76855855 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.770396218 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.774669494 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767986342 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.766717323 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.772235872 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.770090697 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.773342751 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.770009629 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.770509565 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.778541814 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.777987719 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.780571205 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.776007233 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77047442 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.770363434 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.779716058 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.796414863 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.772713924 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.766132985 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.767380958 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.769251402 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.775855327 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781981649 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.778454612 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.770234704 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768828652 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.770933549 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768928479 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769689572 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775358931 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.7707603 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.769591324 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.772091015 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.778115887 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79206597 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.770093971 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.771216538 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.770370483 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.770196476 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.772075655 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.779572238 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.77138077 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.76960175 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.770042515 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.769591101 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.770930327 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.771611607 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.769573364 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773010233 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.768028092 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.770553592 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770981039 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773769521 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.780234753 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772308342 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773338694 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.779137399 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.771250506 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.770304041 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.778663863 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.772377028 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.770211047 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.770890637 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.777619604 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.767936099 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.774031597 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.779385567 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.771293364 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.772175558 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.770706352 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.772305377 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781590065 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.79970415 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.773019502 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.771810413 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.776269328 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.784225073 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771306927 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.775256916 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.771577343 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.770123932 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.768530681 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.774176178 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.775252431 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.775609262 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7748227 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771746442 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.770541302 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.772261935 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.773447698 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.773332554 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.774067615 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.77370343 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.776871271 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.773885546 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.773863796 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.774267223 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.778461571 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.773431255 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.773723007 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.775218958 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.769188418 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773746237 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.774921082 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.772624429 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.773540224 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773449615 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.773032277 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.775091963 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.7748191 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.774442413 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775370091 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.774179365 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780507983 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.774218209 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.776370435 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.775151618 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.77149052 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.774046503 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.775098635 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.775201852 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.774010738 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.774889162 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.776342297 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.783977545 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.77381104 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.773692942 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.777362364 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774926111 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772907646 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.774373215 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.776926525 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.780829166 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.774804337 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.782291946 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.773347276 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773892361 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.77506797 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.775043465 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.775606493 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.77411502 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.777366155 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.782428842 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786950211 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.785893013 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.775672593 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.780893246 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.77540537 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.778482875 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.778496645 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.776464438 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.773423682 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7756988 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773638983 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.774493161 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.777540689 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.77571058 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.774210899 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.776141968 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.775728773 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.77598998 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.776440879 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.778831076 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7774783 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.774030771 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.777055325 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777416088 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.775465043 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.774377802 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.77609555 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.776543684 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.777168732 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.776823986 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.781521503 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.774848146 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776465816 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779443214 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.7767581 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.775471378 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.776897133 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779882246 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.777797791 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782455225 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.776845108 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.776470649 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782588481 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.775780425 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.777423678 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.780535551 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.777393359 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.775543253 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.78087605 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.785678699 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.776824877 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.776660361 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.779666928 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778137046 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778554591 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.784356628 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.775759162 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.775553819 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.777994352 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.779024003 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.776293417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.77975944 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.781515246 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.779578468 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781926534 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777905504 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.777727365 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778280376 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.779063926 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.780780055 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.777585463 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781569132 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.789379074 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.7847652 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.77947089 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.78083209 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.780093512 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.7836316 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.779192022 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.780395877 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.779045404 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.791329993 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.787503661 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783246382 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.781350985 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.779480284 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784781257 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.779461304 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.783464834 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78081496 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779921263 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.780681967 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.777775005 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.778199015 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.781384264 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.779250719 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.779368564 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.780759595 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.784309881 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.779551256 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.778944533 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.780553349 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.779892453 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.779774001 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.780560818 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.783954978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.783771327 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782490432 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.781371173 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.781205219 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787586342 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779605071 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.781269633 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.780487754 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.782392762 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.780313205 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.781388813 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.779012508 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.785443139 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.789417063 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.78583028 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.7893775 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.781941479 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78879282 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.781160941 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.786985815 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.789732119 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.778655099 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.779557748 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.779820901 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.779664947 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.787024866 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.780479602 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.782316777 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.78474525 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782303071 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.783043904 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.783538418 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.781403782 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.7818528 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.781380145 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788055409 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.782177998 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.786437549 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783103565 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.77991533 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.781904832 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.783241063 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.780556904 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785789553 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.782736405 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.784194909 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.784038513 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.784759305 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.782067644 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.781579819 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.782310138 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.779189107 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.78167856 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787848086 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.783284572 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785856672 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.784163807 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.790903021 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784233954 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787763905 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.783589084 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.783331279 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.782101466 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.783026056 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.786694375 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.782694153 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.784520332 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.784641653 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.784592546 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.786391399 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.783791017 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.785317631 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.784642276 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.783263923 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.782220986 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792988604 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808734573 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.786284049 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788200267 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.781544882 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.785632135 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.789865414 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.785359165 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.783195094 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.786971406 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794116138 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791691997 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.786851715 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.784704506 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785012801 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.785133854 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.783813614 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.787180548 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.785954569 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.784613619 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.786363106 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.785007999 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788321274 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.785779648 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.784383025 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78564411 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.785457766 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.794894617 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.784950448 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.786864494 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786347919 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.786549141 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.785363563 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.785053389 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.784264091 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785859987 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785630325 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.786052244 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79209354 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.795026869 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.789596539 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.78421696 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.786349554 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.785442012 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.787577038 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787156269 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.785952179 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785419341 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.787817927 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.786741001 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.787387728 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.784833977 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.787825913 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.787336927 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789112417 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790307031 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.796114457 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787361193 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.785678591 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.787735676 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78874029 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.78789763 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.787841357 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.795360389 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790393735 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.798680517 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.798306307 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.794830988 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.789139929 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.791591643 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.794865599 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.787002109 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.788392446 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.790560557 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.791612036 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.789197173 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.791230672 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.788871149 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.79555309 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.788142618 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.788122355 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796891276 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.788039901 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.788722551 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.789553225 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.791835834 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.789872805 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.786620102 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.790203822 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.79007168 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79645375 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.789108135 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789310158 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789986136 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.787540994 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.790148149 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7940241 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.789528203 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.789543435 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.787224519 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.789477108 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789455819 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789882036 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.785392503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.788104584 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.78931786 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.793653867 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.797114483 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.787370677 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.793520474 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.791483313 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.790577217 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79396488 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.790290318 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.788237053 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.788048058 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.790641498 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795051391 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.793072744 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.793370625 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.790952704 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.792483211 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.792177518 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790404068 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793484018 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.801780647 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.800238795 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.788499176 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.790467395 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.791608534 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.795746972 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.793161122 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.792260894 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791170911 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.793260732 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.793582002 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792284565 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.791817281 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.795880105 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809122744 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.791942414 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79274785 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.792268412 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.795753122 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.793777695 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.790214964 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.793677016 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.795308569 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.794524054 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.80029414 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.793151016 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.797956785 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791777194 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.793491968 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.797149217 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.794154572 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.800798021 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.796077256 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793720029 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.79308429 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.79795614 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.810910641 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792878579 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801649795 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823980504 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.791555796 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.794178074 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.794359486 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793704478 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.794440417 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.796813543 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.795215107 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.793927388 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794466484 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.794768712 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.795926815 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800863867 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.795240038 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.795300059 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.796011302 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.794251897 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.795756369 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.79148283 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.792924032 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.793805981 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.794124156 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.795667417 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.79582055 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.795322224 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807189556 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.803260462 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.795140999 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.795228792 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.791689227 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.7981349 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.798070293 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804829764 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.802634659 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.795394009 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.794632795 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.79568838 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793564721 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.792110882 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.794594536 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.794724627 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794570907 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.792777504 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.806807123 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805544662 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.800680931 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.796234799 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797289899 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.795938401 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796898547 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.79580114 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796189978 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.797900694 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.795181155 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799882686 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.795737681 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.794309222 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.799187289 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.804703576 seconds)
  done (took 1064.110990315 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.791827001 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793260184 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792729502 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794282344 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793767231 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794307709 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792267031 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79472228 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.793040617 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.794620216 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.793084351 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793767219 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79337459 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792659504 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795274679 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792390637 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793458724 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795591042 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.795392418 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794485239 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.794499984 seconds)
  done (took 39.395782237 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.794328491 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.793846495 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793741298 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79512269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794535375 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.797347897 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.795834106 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795465165 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.798946443 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799694845 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.799163341 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79976676 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.795321842 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.795742193 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794825546 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798113099 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.79853407 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79493397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.798627008 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796463807 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799853508 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.797586354 seconds)
  done (took 41.256486958 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.798468176 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.79803688 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.800372061 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.795761194 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.799280775 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.794958742 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.797705089 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.799194373 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.800082484 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.800016991 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.797436873 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.799908339 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.806490918 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.806020018 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.801732726 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.799681736 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.944277838 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.799718667 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.801354029 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.801789803 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.796422114 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.805514372 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.796831287 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.799117987 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.798422291 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.798905009 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.801798441 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.799811432 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.800548649 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.80218478 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.804819398 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.801179203 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.801489992 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.803971624 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.800262761 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.803736967 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.804195177 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.801897322 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.797056106 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.80081493 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.811050442 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.823764316 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.79996225 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.80620827 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.799114485 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.802397228 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.802435982 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.809058832 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.798688606 seconds)
  done (took 90.143419845 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.801829295 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.799964757 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.798970118 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.802361607 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.80256707 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.801840279 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.802022849 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.803621731 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.799867965 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.800695035 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.803863764 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.798360109 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.798606251 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.800622696 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.801460734 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.799117009 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.798236415 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.798040618 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.80005933 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.798898909 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.801576949 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.80155614 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.80569184 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.805467055 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.801243784 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.801316538 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.79941767 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.802125108 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.799372025 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.798079577 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.800756408 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.801035319 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.803068197 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.799816509 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.801011781 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.802932373 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.802728394 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.799933695 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.801243276 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.799705363 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.801340936 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.802128331 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.802001744 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.802591967 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799812003 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.801282657 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.800049344 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.80036518 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.798232065 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.802909393 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.801804961 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.800846058 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.801929017 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.8002785 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.8028112 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.802783357 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.800490956 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.800155956 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.804309906 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.800954108 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.801230933 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.802392616 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.801064522 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.80451815 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.802440067 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.800640642 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.800397444 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.805240162 seconds)
  done (took 124.218207064 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804872378 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.805054251 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803837435 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804655358 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805481143 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.804798476 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804641244 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.803970144 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.804142423 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804188108 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.804297097 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.803721972 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.803806074 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.803665336 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.805091754 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.805072316 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.806385922 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806334413 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806185593 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806521522 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.806510176 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.805508332 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.806581056 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.806418259 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807413895 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806931717 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805448161 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.808110795 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805864149 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.806470532 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805745334 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.806152889 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.807005566 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.805019734 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.807068241 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.807886609 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807577903 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805196527 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.806043163 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.80700703 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.807150722 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807267215 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.807021062 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.806713618 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806621001 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.807157788 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.808223162 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.806511916 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.807755658 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.806363624 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.807593029 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806904417 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808332309 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.807741444 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.808957826 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.806690306 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80542678 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.807896097 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807901973 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.806690355 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809321118 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.807220571 seconds)
  done (took 113.723343802 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.807314963 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.807421858 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.8046684 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.804059272 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.807177905 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806866664 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.807357433 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.807652496 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.807873529 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.806557891 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808025999 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804513078 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804782133 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807091544 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806644084 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805267405 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805902118 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.805090531 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809462361 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804831612 seconds)
  done (took 37.866540488 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.806973071 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.807231418 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.805723833 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.806853415 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.809200151 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.806566235 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.807170447 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807818284 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80667122 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807644444 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.808516912 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.809390394 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805199677 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.805532352 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.807824296 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.805966113 seconds)
  done (took 30.653245962 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.805110781 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.809063079 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.810026454 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.808328366 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.804763615 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.806710486 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.807626379 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.808249707 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.80593259 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.809709314 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.808738409 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.80900934 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.808983576 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.808144529 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.807021019 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.808449065 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.806388937 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.804986049 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.810520606 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.809870166 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.809379773 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.807274378 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.809263334 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.811165716 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.807968848 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.808484177 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.808802767 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.80756602 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.809249598 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.808345025 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.807845338 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.807798175 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.806802965 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.808788635 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.809718611 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.807556333 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.811415896 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.810165927 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.81147896 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.811522987 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.809650343 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.808806636 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.811324955 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.810388501 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.807545569 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.810852794 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.808955912 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.809254209 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.810513021 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.809857355 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.811473061 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.810427688 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.810220701 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.811493213 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.810897715 seconds)
  done (took 101.231884976 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811732883 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.814213355 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.808412704 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811653636 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.81183839 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.80910733 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.810746712 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.809824389 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809617415 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.812809565 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.809982917 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.81370423 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809590036 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813071557 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.812314192 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811697 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.809266815 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.809298649 seconds)
  done (took 34.341858351 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.810353515 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.810205958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.813537412 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.809264721 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.81132745 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.812119915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80893504 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.8115059 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812792009 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.810558394 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810875261 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.814184605 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813195713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.814192842 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.811499723 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811703912 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.814000355 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815181087 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.8108943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809442377 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81311767 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813577249 seconds)
  done (took 41.607038846 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.812505743 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.811856334 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.829180038 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.836280631 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.836057567 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.851090046 seconds)
  done (took 12.721768983 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81096642 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813972711 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81143547 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813785404 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814247002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81138502 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81102791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812412102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813969585 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813632434 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812066914 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81391093 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813532256 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811605666 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81512265 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813383105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812096958 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814454172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816402383 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817388677 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813651357 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817407993 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813427148 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81507747 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813595569 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81586472 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815929783 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817232342 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814649941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817852178 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818518811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815060817 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818890995 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815539389 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819579678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817783303 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81704484 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818935024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819202757 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815260689 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818387517 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818484935 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818309399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815814029 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819390612 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816859071 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815857875 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814751038 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816590512 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818724672 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818888518 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817780098 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820742422 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821752807 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819663839 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819935051 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817221006 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816965452 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818415933 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817700545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817095573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81831488 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817566337 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816001004 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820569739 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81684025 seconds)
  done (took 121.611808664 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816360688 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817023402 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81686706 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818371222 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817526373 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816253116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817204597 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817217886 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818782611 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817005777 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821942396 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819759123 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820272215 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819554443 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821573208 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819833112 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819354702 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817530569 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814916315 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818462266 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8171049 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81572878 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814643765 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816772347 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817928339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820736246 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8188543 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818160999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81914384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818904775 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81961966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818146657 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817157322 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818117082 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818879656 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818280323 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819089168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819899978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819511622 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820749368 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818622865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823136834 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81987574 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819554145 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819415213 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818718935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81976946 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818948507 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820427245 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820812081 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819827873 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820234343 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820085963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820651907 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819371411 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818830959 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819384498 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819645062 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81974209 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82355132 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820679395 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819703197 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824503731 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820890133 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818346356 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819895118 seconds)
  done (took 121.81130032 seconds)
done (took 2480.1853665 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.895848824 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.832601234 seconds)
  done (took 15.480901754 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.986502483 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.935799306 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.821519362 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.83156154 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.820432137 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.844730486 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.843279276 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.820241878 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.821868933 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.819712166 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.820933061 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.006968757 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.817738296 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.820549907 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.821560019 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.913538771 seconds)
  done (took 51.519619344 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.822915255 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.82866014 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.839862098 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.833151686 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.832193296 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.841563475 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.857580279 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.827262713 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.859960245 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.837559957 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.893400675 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.834745339 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.824224119 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.87382721 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.838577746 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.840014684 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.913590626 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.897720279 seconds)
  done (took 35.049662221 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.903486288 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.829372738 seconds)
  done (took 10.49281978 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.821310497 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.822022507 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.830580985 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.834090341 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.819598797 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.81948938 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.835071695 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.83555254 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.827959668 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.856545131 seconds)
  done (took 70.077743172 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.829513574 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.82694292 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.824378224 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.823815983 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.817897238 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.8209651 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.825618993 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.823274626 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.507926871 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.860285424 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.833233454 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.832414406 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.826512266 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.825876901 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.824547485 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.851665154 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.955083974 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.826923704 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.82429471 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.83172488 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.825477986 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.903279953 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.841000082 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.828160763 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.857183238 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.512244825 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.834309665 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.832289217 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.964012236 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.825172162 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.825965381 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.827761196 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.830093856 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.21532406 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.12028677 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.827021572 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.833924687 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.834798647 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.824032338 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.961804135 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.828970565 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.834989219 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.822420436 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.116656977 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.917129334 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.870039763 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.164854729 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.830017974 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.829187106 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.857797455 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.831627284 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.830744694 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.841746106 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.343615884 seconds)
  done (took 130.396599895 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.825629467 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.11185135 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976448232 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.821836412 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09819513 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030976538 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.823383695 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872768052 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.822539813 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.026295664 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986407112 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939143458 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.823344809 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.824307871 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.822519717 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.819600348 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.986226465 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.892559205 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.822535378 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.820081087 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849918593 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036361928 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.954109194 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.827932108 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.849314828 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.042503941 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.953136641 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.934180606 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.107531111 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.82262887 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888802164 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.822451357 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.824454731 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.821171096 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.981693291 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921914119 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914352469 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.822576785 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822438626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.822347741 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.487026468 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023348525 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.923763135 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96780695 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.076210536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.028150621 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.476073481 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.823290883 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.465228459 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.986467826 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.040966481 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.03359618 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.948978348 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.826505371 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.176874418 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.823933335 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.824374834 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060585421 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050608272 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.924743425 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825527082 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.826599888 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820997143 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.068862986 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825722347 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921372579 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825450501 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.824205594 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.923626441 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931003374 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.053502782 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045425225 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859659391 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.113844959 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.298906192 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.042587793 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.893498163 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061550594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.827816667 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.823206999 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909738075 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.577968946 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.985853738 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.074247605 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.044543304 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860494177 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.434979178 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.825095162 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.021035384 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.011850515 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.021469499 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.071164925 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.977658672 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.057700855 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.827484694 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.827271405 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.085313421 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.96484583 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.828683492 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.186121236 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060511937 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.386384361 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.858605975 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124023587 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960795832 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.192417352 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.453889083 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.830024848 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.995453676 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.868916598 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.827903016 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.826341713 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.018439973 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.636657486 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827599696 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.337981535 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.894001853 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.829448833 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030333216 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.829849153 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036645359 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828694861 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063681397 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.819133192 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862122485 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.055205608 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.073530646 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.618390759 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076352578 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.074429678 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.947875248 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.051722294 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.427098377 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.830009269 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106029524 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.831543925 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.828403007 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.99596312 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.829092248 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006336933 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.831073475 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.058462986 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855124855 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986986884 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83124874 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062721468 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.865173737 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880981458 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.833955809 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960945336 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832885915 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713660381 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.987691584 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832061461 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.828823842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.450220064 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.829405725 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976196006 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.062803032 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856626574 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.900786407 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.362645173 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.83308566 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920438664 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858382174 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.322618996 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.830416841 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.98859615 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.800554197 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.270382968 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.829353754 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.070350377 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.015102295 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.832801341 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.830171423 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.572978192 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.540680143 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830487615 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.988381211 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.573106975 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.474685133 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036035816 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.834567014 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961138449 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.832604009 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.912953935 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179706715 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830317814 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.829544079 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.831082121 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.829150352 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.832032785 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09089747 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.864100377 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.355978209 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.970547011 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050019443 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.143896371 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.053995252 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87969582 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.833535718 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.080715176 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.835214366 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.897488615 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.834190264 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855047371 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069271386 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837439588 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063295217 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.091065004 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.826568738 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88359788 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.837631205 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833278487 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.833579211 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987817765 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927012798 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.839354303 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.835643884 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.945963229 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962252162 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026464041 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.423492349 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.006456459 seconds)
  done (took 889.533361818 seconds)
done (took 1204.30399356 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.841194836 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.833731352 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.819295491 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.836784953 seconds)
  done (took 29.101144161 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.84192459 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.840823574 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.844666225 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.843525449 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.843045637 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.841578582 seconds)
  done (took 12.826522177 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.892278611 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.834611379 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.836098814 seconds)
  done (took 21.334099388 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.909460514 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.251830661 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.952520299 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.284496425 seconds)
  done (took 10.169902415 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.841276472 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.840576251 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.84296247 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.843680148 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.844839478 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.845937098 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.842812024 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.84531313 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.844290079 seconds)
  done (took 18.364618505 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.204867123 seconds)
done (took 97.772516635 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.840601415 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.015980956 seconds)
    (3/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.869301981 seconds)
    (4/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.973554606 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.824665938 seconds)
    (6/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.020028006 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.067977443 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.075101216 seconds)
    (9/309) benchmarking ("sort", Float64, false)...
    done (took 5.620077725 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.924369311 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.966582697 seconds)
    (12/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.96814548 seconds)
    (13/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.400416932 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.034729631 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.73314272 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.429858187 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.878643585 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.161539747 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.924032505 seconds)
    (20/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.033786518 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.867760419 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.024056763 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.030450481 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.139260659 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.839119244 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.917774562 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.92546515 seconds)
    (28/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.318347036 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.244270405 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.073281271 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.802893852 seconds)
    (32/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.980875942 seconds)
    (33/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.04605264 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.395938249 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.206580711 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.866770635 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.432408259 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.345225544 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.731708763 seconds)
    (40/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.987127696 seconds)
    (41/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.155905031 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.639424548 seconds)
    (43/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.098731134 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.944917306 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.222050504 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.133466479 seconds)
    (47/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.850582342 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.138237658 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.227767553 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.162143881 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.201056517 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.120019536 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.838673392 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.841822178 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.904564314 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.865870575 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.755549924 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.513605735 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.87525867 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.86433591 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.949948472 seconds)
    (62/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.142919912 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.10048742 seconds)
    (64/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.823161437 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.734157494 seconds)
    (66/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.514044014 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.727629926 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.039867052 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.213863053 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.972094729 seconds)
    (71/309) benchmarking ("sort", Float32, false)...
    done (took 5.60242475 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.178422827 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.8680183 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.943121612 seconds)
    (75/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.897811586 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.431898083 seconds)
    (77/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.964893631 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.865885958 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.839451329 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.823067333 seconds)
    (81/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.990945263 seconds)
    (82/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.151858039 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.437190541 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.007807405 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.244014996 seconds)
    (86/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.922929989 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.177256378 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.219385561 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.828552584 seconds)
    (90/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.914108633 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.042054162 seconds)
    (92/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.866899572 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.211672363 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.868092554 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.543122536 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.142547214 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.35781508 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.831551253 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 9.466300025 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.941563361 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 8.315357409 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.918139181 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.680961072 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.013903969 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.909741718 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.762794781 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.028845692 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.114475104 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.414225379 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.866485379 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.486920277 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.448767985 seconds)
    (113/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.016375721 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.831384542 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.442034405 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.939072808 seconds)
    (117/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.913695081 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.831319177 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.881784396 seconds)
    (120/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.468679684 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.608729571 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.171541531 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.845869443 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.19100765 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.000369995 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.069824954 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.725740739 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.911417177 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.135463206 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.895242483 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.843967257 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.856822643 seconds)
    (133/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.469393042 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.481606535 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.419107572 seconds)
    (136/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.215902294 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 2.284881368 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.872132156 seconds)
    (139/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.734144966 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.41849009 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.208548429 seconds)
    (142/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.996252171 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.865179772 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.060044077 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.101748986 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.762192573 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.461294706 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.150415529 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.952590191 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.950490785 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.174115178 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.94917709 seconds)
    (153/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.022616536 seconds)
    (154/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.849236886 seconds)
    (155/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.917619167 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.229363557 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.688256938 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.074864603 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.874696683 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.979478032 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.813648874 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.993236344 seconds)
    (163/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.251323898 seconds)
    (164/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.864555663 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.867799892 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.944873826 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.926523197 seconds)
    (168/309) benchmarking ("sort", Int8, false)...
    done (took 4.841899152 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.192485435 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.911551021 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.113568725 seconds)
    (172/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.932997509 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.232504481 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.373588342 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.231044879 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.169503679 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.030136731 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.848807662 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.064478176 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.018052983 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.97944313 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.969621705 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.909430212 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.503564451 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.872254495 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.84631693 seconds)
    (187/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.365030733 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.928279051 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.831311487 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.935715346 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.771014541 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.876785502 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.652997341 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.953304722 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.892986609 seconds)
    (196/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.335674989 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.002748641 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.84859255 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.834414283 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.644463705 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.92191741 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.906374818 seconds)
    (203/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.855816839 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.848245437 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.956644885 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.954968051 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.932151136 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.130043911 seconds)
    (209/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.94252372 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.358462901 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.918011419 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.863553724 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.475821183 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.056414914 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.847050289 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.982711395 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.918461471 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.850815882 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.347040526 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.285205136 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.853201484 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.486071157 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.532867866 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.298854512 seconds)
    (225/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.938135302 seconds)
    (226/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.320711491 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.656879908 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.544611922 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.06474675 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.874876678 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.869718527 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 6.849360603 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.894296829 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.87238068 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.833549152 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.879161537 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.139752331 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.736424305 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.229947053 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.825820952 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.165113898 seconds)
    (242/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.774677234 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.123105268 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.85040639 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.0705157 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.505272136 seconds)
    (247/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.109404199 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.170221485 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.848214304 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.634237764 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.906399095 seconds)
    (252/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.931777796 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.504778798 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.02322625 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.922031469 seconds)
    (256/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.834522012 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.002518098 seconds)
    (258/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.964279824 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.945952716 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.947105688 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.877203601 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.927527968 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.29471165 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.912009647 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.957245956 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.053737249 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.359251011 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.855413578 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.231698634 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.333528364 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.342233246 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.856501591 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.002651436 seconds)
    (274/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.991098613 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.852858728 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.153764691 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.965713544 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.837114609 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.164256308 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.853064131 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.02009278 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.149954804 seconds)
    (283/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.854306181 seconds)
    (284/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.419034427 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.934213265 seconds)
    (286/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.961501929 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.877384983 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.394006612 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.098228942 seconds)
    (290/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.206818655 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.578776406 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.840979528 seconds)
    (293/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.142576829 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.226944734 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.899561098 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.184520207 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.952690124 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.053678902 seconds)
    (299/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.951636926 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.942658648 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.231534759 seconds)
    (302/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.984134184 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.880134342 seconds)
    (304/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.984366476 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.47653888 seconds)
    (306/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.212619099 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.3309234 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.857951901 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.559721293 seconds)
  done (took 1008.489199504 seconds)
done (took 1010.330572014 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.883267831 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881348219 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.862644608 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.886085665 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.975452128 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.898394764 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.875244564 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.865654202 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.910904854 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.91404027 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.864941852 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.89776605 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.867930652 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.864171542 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.863759487 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.879413501 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.172895785 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.890024034 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.883194404 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.871122407 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.881716696 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.864529928 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.915494182 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.899157386 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.866263403 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.867917212 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.869240522 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.887043749 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.976710323 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.868291595 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.866128455 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.87829294 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.173659645 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.886073659 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.858862292 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.884532896 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.876570114 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.876826283 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.870183594 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.897918676 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.310484367 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.870762423 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.869355196 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.867919755 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.867640668 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.869327774 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.867918453 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.871871175 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881334426 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881194831 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.307534522 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.886618405 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.869699132 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.867167964 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.878382303 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.869705636 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.87351199 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.884643515 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.886042034 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882815404 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.160787577 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.893656741 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.869191496 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.882834544 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.875306465 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.349753018 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.866561281 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.872431482 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.312893215 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.880296178 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.344715286 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.881396343 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.869441636 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.883847716 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.904763064 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.174095418 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.888218302 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.868696622 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.87872615 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.865401259 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.876859124 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883351559 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.871545315 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.871834701 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886444044 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.903515982 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.881427755 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.870669889 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.876296853 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.888221941 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.876777034 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.883519336 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.873454091 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.864692558 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.879023062 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.87103698 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.874660466 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.871208263 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.873787132 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.87835379 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.311126177 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892131539 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.86766196 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.86616119 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.868742903 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.884323368 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.312263379 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.876135698 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.890458331 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.920320965 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.872049491 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.16596209 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.89837691 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887250545 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.879258233 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.873381722 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.866109672 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.16722897 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.339037324 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.89016025 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.872725346 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.871180027 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898615614 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.874278344 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.867694929 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.178358434 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.898046184 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.88758919 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.994992684 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.88403018 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.902559207 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.870773618 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.875697232 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.909719983 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888391183 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.904526539 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.872340299 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888512925 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.888958271 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.869965408 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.887463877 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.882878198 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.874559765 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.879128665 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.869612849 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.906517368 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887891094 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886030125 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.895125662 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.994295509 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.871638178 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.167640618 seconds)
done (took 293.844186561 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.937990819 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.868998519 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.968544614 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.868905258 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.952716147 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.955842376 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.868457365 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.866314461 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.868733512 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.248753658 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.869427402 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.867058172 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.86314271 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.867463963 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.954245457 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.871125099 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.864874704 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213997961 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.871300002 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.94196236 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.866701505 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.867189679 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.867971548 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.255205613 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.872742768 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.866817988 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.942723388 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.872140287 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.219650858 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.867286457 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.86378824 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.219260996 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.961014209 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.888448579 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.881683725 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.876367233 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.954827158 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.874918515 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.952647796 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.951673964 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.971736626 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.912893872 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.869275045 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.867653226 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.874005862 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.87497218 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.869670577 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.900104634 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.865976222 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.868065901 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.215385887 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.882416683 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.879459155 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.870652325 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.870688453 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.891804987 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.869454282 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.871756057 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.961837651 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.872971098 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.937764537 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.25728747 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.250682484 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.873657319 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.868654279 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.8728246 seconds)
  done (took 184.431369479 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.937294147 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.946392689 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.939826407 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.875337429 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.922037799 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.944860293 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.879287573 seconds)
  done (took 15.245035317 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.880167841 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.875448469 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.92072718 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.926557753 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.87212542 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.025707327 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.876229882 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.889707742 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.8732292 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.925945094 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.873429223 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.875502593 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.8836139 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.872580093 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.923834551 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.887021551 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.990791201 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.876569956 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.875392376 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.026767181 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.873135767 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.88136307 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.93137775 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.887494803 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.875989522 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.88214086 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.466128192 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876185872 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.874500513 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.874586629 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.872467482 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.920216931 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.877115567 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.873110062 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.872160779 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.990056188 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.875926477 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.871147828 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.87703862 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.871862007 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.874993097 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.873796508 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.877470804 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.873111398 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.876633623 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.899141997 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.874837489 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.874869484 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.876577776 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.87491035 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.925515147 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.877789791 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.875456866 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.873853658 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.931257428 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.886660483 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.878060508 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.874797749 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.879752316 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.871523697 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.026714527 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.923099071 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.873522783 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.926270295 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87767121 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.879500129 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.874646887 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.878367267 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.97224886 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.876755479 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.927137393 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.873805427 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.037487654 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.897975551 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879157113 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.881300715 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.880534625 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876853516 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.877063465 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.883573035 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.874427778 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.87819132 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.883368215 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.874825908 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.873446508 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.991530811 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.985523369 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.87591433 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.891826897 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.885756993 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.877467248 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.933026828 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.87940922 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.875819238 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93428209 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.992841093 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.933510367 seconds)
  done (took 206.494554082 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.8810174 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.888402899 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.879912143 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.893703391 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.876750003 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.879287538 seconds)
  done (took 13.104192206 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.881155898 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.87960331 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.880145693 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.882178011 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.878468802 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.881685504 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.880860307 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.880452733 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.886749553 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.880319717 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.879021709 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.882030468 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.87978092 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.878450769 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.877713656 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.87884366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.31988175 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.875063546 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.876787706 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.879778399 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.021981513 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.8822301 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.880235707 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.880350091 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.884889701 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.880282441 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.886706829 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.879992997 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.878840647 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.885936791 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.882642463 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.880547954 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.880439446 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.884949073 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.883248724 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.879486534 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881648108 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.881919909 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.877057215 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.87824121 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.88177631 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.880349069 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.879570245 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.881534386 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.8818469 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.886314743 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.885244561 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.88800708 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.879481973 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.883805707 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.883155387 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.880108119 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.880990714 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.88070534 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.882280613 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88228324 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.888946157 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.879583934 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.879897109 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.880694718 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.884763712 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.88133638 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.880469511 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.885594865 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.886240745 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.881595058 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.882183376 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.885727981 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880651502 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.881705843 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.883192168 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.879545222 seconds)
  done (took 138.856845968 seconds)
done (took 559.944085413 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.110859772 seconds)
  done (took 8.916206338 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.015263994 seconds)
  done (took 8.909564881 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.391455708 seconds)
  done (took 10.20002405 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.877020431 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.888249687 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.88421331 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.872519053 seconds)
  done (took 29.340530265 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.902308677 seconds)
  done (took 8.709726158 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.888962888 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.872493757 seconds)
  done (took 15.601454944 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.963457119 seconds)
  done (took 8.771796289 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.932681893 seconds)
  done (took 8.749840784 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.890111323 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.889738998 seconds)
  done (took 15.600737767 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.860894748 seconds)
  done (took 8.669538884 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.383561667 seconds)
  done (took 11.200059106 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.884445621 seconds)
  done (took 8.706769152 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.964226149 seconds)
  done (took 8.771682041 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.945486406 seconds)
  done (took 9.752639467 seconds)
done (took 163.708468063 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.878482466 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.877273949 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.873379557 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.876464781 seconds)
  done (took 29.313298762 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.913882444 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.914216437 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.918160671 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.924799856 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.917428926 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.914756562 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.907583563 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.906880161 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.925761602 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.918012283 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.915897446 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.916262467 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.915139942 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.905383315 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.91702617 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.918732035 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.928497198 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.917790997 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.908381519 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.920547632 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.882856476 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.926978565 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.917707629 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.883037876 seconds)
  done (took 47.743474318 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.079037473 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.952830057 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.036015488 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.934806075 seconds)
  done (took 9.810668808 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.932649161 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.938038531 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.948872741 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.988751036 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.02676148 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.947109024 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.910049768 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.904836461 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.891069036 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.935350754 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.011384031 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.951258841 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.029764278 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.883581379 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.069597149 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.882468245 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.884845958 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.935673409 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.98569679 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.99974883 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.885175016 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.934546492 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.940618258 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.953441742 seconds)
  done (took 48.580994512 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.882379551 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.892950817 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.889096418 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.883352307 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.882196939 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.882337552 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.888924705 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.88247959 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.904143617 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.884761283 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.883661312 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.884429031 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.884611259 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.883445893 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.884315586 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.896143194 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.898122246 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.881763356 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.887810011 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.889053896 seconds)
  done (took 39.557617733 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.875118833 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.813067455 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.231523183 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.132648948 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.876158318 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.88156133 seconds)
  done (took 32.620532132 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.896048649 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.890363741 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.883883327 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.94123644 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.020494038 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.890449978 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.887370303 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.895869639 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.929202395 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.949731905 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.903816484 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.913480915 seconds)
  done (took 24.814467836 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.887499657 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.879087522 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.879415317 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.898776936 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.895164144 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.892340533 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.892438147 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.877638766 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.89647548 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.903269943 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.892734473 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.900231486 seconds)
  done (took 44.511563235 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972490438 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.926328784 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.934008237 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565068307 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258185372 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091354604 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396094972 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224315363 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.883790118 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154637638 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.946056584 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986450128 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137698173 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359934591 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.916120196 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.351235525 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177146713 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095365042 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907336067 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54826139 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944407577 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.050878265 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.636474634 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939049637 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093371628 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.015670516 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.145290596 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.884397249 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014291806 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91746533 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895943806 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883071229 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156182772 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25151049 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987498532 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894361909 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.50288764 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.599562346 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.87548872 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.697931984 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.587147794 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.002991349 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894077543 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88252902 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817900618 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.01305242 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261151101 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.8878701 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.593986419 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882455099 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896140779 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972624197 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.888562628 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.702655634 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802518617 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.884100186 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.880799117 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890159871 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452541465 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982464457 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.057537989 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.85897886 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.977573681 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649106156 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274617512 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.03230189 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.887842621 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888266123 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818861421 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.625923057 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939496388 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213388337 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.904912509 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535230175 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187158449 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.015358567 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827016767 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155300724 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398879715 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.858269815 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114694244 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885880729 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822493563 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.919860494 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.823395194 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14828814 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926309996 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.618103009 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923994124 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.225106635 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895012255 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903029248 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910744164 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112107391 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.772638677 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889004582 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.712271078 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032679359 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908496796 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.226130672 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822665311 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.888968856 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144213147 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.097511206 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.939980987 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.393320325 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040921047 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431865362 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.940437922 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.018537446 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933456028 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.153532225 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944693404 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987241901 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939986896 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887466391 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188775984 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.466598624 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.023934549 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.965011869 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016239294 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.217860801 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917093976 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951167066 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891587363 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887086965 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.657688655 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444033166 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.887188254 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.889993767 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94444119 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934892428 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.888286489 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836318416 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.517129839 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95438758 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.902319433 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112644671 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.439666291 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201333512 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823630789 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217796846 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978826566 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.109563627 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.563968914 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.955484629 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151961925 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.940876181 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.970478091 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934816527 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910134183 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987209213 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912240538 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.028334648 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183583275 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.894836656 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.892580235 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.654215782 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923188667 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89924584 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.893984296 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.641650164 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157834766 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913892946 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896698855 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.778839111 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.904106468 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957664626 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8947366 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903114189 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.429872474 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.599603059 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.896825836 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.481434253 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115108784 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900368378 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.621586024 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005039998 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.974150841 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161076823 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950597564 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.825725702 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.601111405 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.588989676 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891722621 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826430465 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.892418434 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90032311 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902439118 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.090625301 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162755625 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931701168 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.559389841 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.933837987 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902184979 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.896432751 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891758913 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.402804924 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.99404963 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06631498 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937223174 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037293508 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.907754428 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826903604 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895384912 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896168584 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892278062 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.892401526 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926659585 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.564450105 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273345097 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151195554 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.501332087 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905050057 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.635120026 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.948097224 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.950463676 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.742928455 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035071275 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.92443693 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913780175 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.904823582 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.644665881 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.589378875 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458910565 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204465505 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196032329 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324363074 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.077814142 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919505355 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235580985 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828249567 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.44948033 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953578502 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238907602 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840381954 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978502589 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.529108208 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230746431 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909644729 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122053287 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274628236 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.653653935 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035503838 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108352349 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934652052 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.037124316 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85737924 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.178851332 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036771941 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.573431218 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096925918 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23435747 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.596845825 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.018427857 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.894953531 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.580776338 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9811542 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.611273797 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.069167632 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.065830949 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875554165 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368930895 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903244368 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.122306007 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24626528 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.048667702 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.018071547 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833459837 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.907668365 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.90682557 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.898156763 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.899339836 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.763579526 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.152939682 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909543596 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831759972 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.986994898 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186645865 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.798826501 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.903813007 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899007064 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195545969 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419881628 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059915624 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.972907821 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.41912086 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905668592 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832109042 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832949067 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.590781527 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904988808 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872403673 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102588944 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.999114219 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806787567 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.949179747 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145703204 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156239889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.911725019 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165743819 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170974655 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.596798251 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925399648 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.000360591 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.600668681 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.005296441 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898426104 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134105338 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649773403 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.124554197 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.944276588 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.848726413 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.896189777 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111229857 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.90025982 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.842531225 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125580109 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.623071282 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.903149722 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215998163 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972329948 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.839411855 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943818325 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.992235024 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911885348 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980825186 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908791752 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.910549241 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.910206935 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948358749 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.843141805 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.022281545 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.912848045 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991587525 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.004677945 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.424376208 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.906164035 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176527039 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255908215 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.22542146 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95932508 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900456745 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906742638 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837902242 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050680064 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.126987647 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174578347 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.031051473 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.016864841 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930009152 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.609508054 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.083152481 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143151 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177245466 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.799226611 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391188738 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942036645 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.902715568 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913492874 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.113837573 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11018291 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201614004 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05193886 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.965854551 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268253785 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175894422 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.902531513 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904699952 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494554747 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.954070124 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.590369737 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.942278052 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.851842705 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17655043 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913731513 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284591619 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.92284357 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.059260473 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.41785402 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576505171 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195310086 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.885817428 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.960140784 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176063908 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288510298 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21374377 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971155832 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91358907 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.014070818 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051171909 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.777564332 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902158494 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903815452 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952087344 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.614184788 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.915345586 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180767007 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213229812 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.900629517 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.779808564 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928648429 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.912720339 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125865609 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165620221 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155152324 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912134109 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909644631 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.721069696 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174694795 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959550328 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835995064 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.906570135 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999676857 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150913074 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925185749 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.356505031 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.617324133 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173822485 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.90490356 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924524123 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.038850131 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263662577 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221787872 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.442432439 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109936959 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.500222943 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.470154713 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205998805 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.909988195 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.045708518 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209782627 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.908510955 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.956504073 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945601741 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.169188544 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214576908 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.974464177 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577020172 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.873851486 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.247619363 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46599975 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844334635 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91466876 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.968412361 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.90498975 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037658906 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916780904 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.787629147 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042460886 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.665751652 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.18836611 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.910003627 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.896738825 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.672619726 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.172816722 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939099642 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051538503 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91527534 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.608673055 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.268019605 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165024331 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.964706622 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.914207345 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.910062468 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907399392 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.894455995 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107954271 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.105596024 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182149984 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.992740443 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.944398039 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91077001 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.125636823 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118782109 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.83078714 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040686796 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962776788 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951207324 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.813269006 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.408929738 seconds)
  done (took 1685.669210429 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908028366 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.943425238 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.953555213 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.918691162 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950662343 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933541607 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.920683274 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.970089456 seconds)
  done (took 57.342899638 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.909410673 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.111780677 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.91904723 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.91042368 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.917696066 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.907901343 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.072519123 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.917586918 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.916242633 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.9173243 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.908161663 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.907644691 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.214730139 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.933697191 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.909663567 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.894708066 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.916167077 seconds)
  done (took 75.045785417 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.912174098 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.009432531 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.931888854 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.920443262 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.879384963 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.919055008 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.752683827 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.94210965 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.911038018 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.139364442 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.547854085 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.923924496 seconds)
  done (took 90.633138223 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.919258406 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.914428628 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.916007403 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.916232485 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.915931015 seconds)
  done (took 11.429255591 seconds)
done (took 2198.90838795 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.153104572 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.121529252 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.144985937 seconds)
  done (took 6.110341954 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.058068426 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.10499571 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.227390917 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.232695326 seconds)
  done (took 10.470240405 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.192297572 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.293460961 seconds)
  done (took 6.331230748 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.301122382 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.920853924 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.290093692 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.910698949 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.912030856 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.909749147 seconds)
  done (took 22.58258683 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.915399994 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.915301786 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.915466308 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.91809236 seconds)
  done (took 9.509072908 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.895831988 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.596662709 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.899187032 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.90977724 seconds)
  done (took 21.145023691 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.663997015 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.677391348 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.671522903 seconds)
  done (took 9.857366619 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.356858871 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.799400688 seconds)
  done (took 9.001560831 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.171910919 seconds)
  done (took 4.015624006 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.047058586 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.220919645 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.46980229 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.444826597 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.526690911 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.624483839 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.23541099 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.155218751 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.320448831 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.35553941 seconds)
  done (took 25.244820488 seconds)
done (took 139.777070256 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.294380251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.154039647 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.114149738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.253108636 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.335621381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.114017371 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.132758451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.233424227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.762308684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.758337682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.255633934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.318358518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.078062344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.149874391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.080128139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.149504477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.136205395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.316128874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.952378801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.153797352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.136269316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.894578682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.099576004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.908110852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.138196136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.114145363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.472042919 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.151953812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.105295767 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.483328419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.069007572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.300919052 seconds)
  done (took 174.460537696 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.683675176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.919098066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.912822384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.914489207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.252224496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.912384323 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.914586456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.913932161 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.001954785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.981430369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.919227673 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.243901467 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.923075445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.913161958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.920969258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.915059478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.153414658 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.789266331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.933571583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.933184745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.934116891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.190093205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.931441474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.213678543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.153683845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.933120587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.914620367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.932033625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.920200765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.929067318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929640476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914389042 seconds)
  done (took 208.801939073 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.917749671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.916091714 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.919794704 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.918533665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.922096529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.92283151 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.917781066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.914510133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.488477634 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.477603332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.924191158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.921853473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.345760531 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928784194 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.934611145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.918430022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.927588273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.926249813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.92845212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.933224695 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936277559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.687426428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.9410366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.673029153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.929141382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.929025219 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.919574676 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.930552853 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.934893217 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.935181199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.930689028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.920186662 seconds)
  done (took 222.544591757 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.115895021 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.926640793 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.927373856 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.863606305 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.928490668 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.925694498 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.922648472 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.123945247 seconds)
  done (took 19.60682358 seconds)
done (took 627.273887302 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.475034514 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.252140888 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.11149344 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.952301187 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.204936036 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.989701534 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.948664477 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.014581453 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.700695857 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.021404993 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.611997585 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.968286075 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.68544997 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.972338171 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.079139272 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.006364553 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.536977077 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.628255482 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.132568283 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.001765361 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.126170713 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.953411675 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.025885567 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.702359434 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.700979603 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.965664413 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.13847744 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.53573025 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.960134492 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.117474899 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.688573796 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.341487302 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.959910256 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.946978719 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.000189045 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.982702524 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.29954522 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.958312693 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.073359805 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.720101572 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.016796776 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.56750798 seconds)
  done (took 105.927550977 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.918201475 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.917959891 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.915144476 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.917392943 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.915602526 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.915571945 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.91564027 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.915844852 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.916049693 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.917037262 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.91596781 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.916701567 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.916567853 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.917770755 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.91776661 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.914681601 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.917936976 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.919870494 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.916053414 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.914401927 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.916782644 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.915767976 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.929775766 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.91623464 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.916327081 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.918587738 seconds)
  done (took 51.711424638 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.930563977 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.073338634 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.15868921 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.950517734 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.930298196 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.933550048 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.948660232 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.936578398 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.932950887 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.932554689 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.02742063 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.935897825 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950145958 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.155385122 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.946624082 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.930640248 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.929425121 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.930551107 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.080319728 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945468171 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.950786836 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.935565213 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.950353108 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.944185275 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.932496656 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.930345675 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.933088784 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.40820835 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.939899434 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.027598407 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.003351911 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.953150985 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.374698382 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.16407916 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.988626538 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.940064669 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.93138428 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.029071952 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.93846015 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.931862981 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.94934092 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.936729264 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.15409305 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.439525871 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.945215551 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.932463723 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.418511217 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.039179357 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.973216778 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94365645 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.160574931 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.948185067 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.933212204 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.931887318 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.969423615 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.942645922 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.932526167 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.300447762 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.943807727 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.94979801 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.938749972 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.934022748 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.087079551 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.940057717 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.076851656 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.942330242 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.939645483 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.93356559 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.158930562 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.949312672 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.441854007 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.946478708 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.933415977 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.026268045 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.082334975 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.445406162 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.945563805 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087889373 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.390616796 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.958316198 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.941165852 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.401368174 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.96218616 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.940988485 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.935681747 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.935181647 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.934395686 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.976206856 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.951144177 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.383420337 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.449214669 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.31482936 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.962112106 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.94930224 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.934988648 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.299378392 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.944818945 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.935076366 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.154439751 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.456578992 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.947199084 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.94352867 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.431557849 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.948468696 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.95308114 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.943120265 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.165261897 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.950601081 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.978531191 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.936312913 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.941065365 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.939127968 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.955313926 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.944831903 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.9361927 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.418822773 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.048624161 seconds)
  done (took 239.674844019 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.930732446 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.938778921 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.929120634 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.929146489 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.92796943 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.934436022 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.928731272 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.92919249 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.934855846 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.929146806 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.93101119 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.93129977 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.928943757 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.933025813 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.967208348 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.936138411 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.539945542 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.932211206 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.929998534 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.929439275 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.576955636 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.936567693 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.929672203 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.93482721 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.928742118 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.931652504 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.935256821 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.957574391 seconds)
  done (took 169.26630568 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.940045049 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.050994494 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.955826087 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.964703832 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.948498584 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.934234045 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.960237338 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.952118239 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.941550684 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.935734696 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.936064157 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.99926712 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.948538319 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.037679047 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.968260105 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.969532901 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.041934166 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.944824023 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.936075455 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.93685734 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.964163337 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.934159306 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.997651569 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.06543161 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.954131668 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.054217924 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.944489204 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.939229542 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.937835673 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.056677787 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.953998219 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.998752521 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.966530338 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.957662213 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.059881963 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.057018957 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.048483036 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.969994879 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.943772906 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.936155906 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.936681205 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.926527535 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.054776438 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.960994605 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.93962706 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046293514 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.959219897 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.9406187 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.948200278 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.938440351 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.952913739 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.958286699 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.005936891 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.070056489 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.975466081 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.964424423 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.964361028 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.214155753 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.947692187 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.039306181 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.935920742 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.058525889 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.96414799 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.927426376 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.93872812 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.944538922 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.968261426 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.973268549 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.045225438 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.950090012 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.03982756 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.976635641 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.946559864 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.939931206 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.941163871 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057114271 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.063521379 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.977532202 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.977044615 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.970411101 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.934610598 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.939553115 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.928826907 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.957316523 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.944980543 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.055394779 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.059991202 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.951730412 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.941184805 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.945105913 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.942309528 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.965745985 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.065571773 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.979648635 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.039410636 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.010262015 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.017243058 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.955371811 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.953250726 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.945569428 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.003025682 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.956083347 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.952953331 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.261110359 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.0110636 seconds)
  done (took 209.968810588 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.406477567 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.994629896 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.997684357 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.213325683 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.364044921 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.809475865 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.987646248 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.992664847 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.014298312 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.150083535 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.063444278 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.003636002 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.976368202 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.964166387 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.993647785 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.01122069 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.995287206 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.276767627 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.113120047 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.080169714 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.972694655 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.278357812 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.311888849 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.380606919 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.026362448 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.308929488 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.677990455 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.230197921 seconds)
  done (took 63.471121141 seconds)
done (took 841.873346248 seconds)
SAVING RESULT...
DONE!
