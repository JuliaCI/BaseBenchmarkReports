cset: moving following pidspec: 795
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.219605439 seconds)
loading group "string"... done (took 0.616001071 seconds)
loading group "linalg"... done (took 7.824949323 seconds)
loading group "parallel"... done (took 0.16289471 seconds)
loading group "find"... done (took 1.188099749 seconds)
loading group "tuple"... done (took 1.836859082 seconds)
loading group "dates"... done (took 1.293500481 seconds)
loading group "micro"... done (took 0.205405444 seconds)
loading group "io"... done (took 0.89848413 seconds)
loading group "scalar"... done (took 37.723002751 seconds)
loading group "sparse"... done (took 11.852031449 seconds)
loading group "broadcast"... done (took 0.912943564 seconds)
loading group "union"... done (took 13.0501676 seconds)
loading group "simd"... done (took 4.59070211 seconds)
loading group "random"... done (took 8.745669153 seconds)
loading group "problem"... done (took 1.820361863 seconds)
loading group "array"... done (took 20.585058482 seconds)
loading group "misc"... done (took 1.740513181 seconds)
loading group "sort"... done (took 3.22246327 seconds)
loading group "collection"... done (took 17.737296757 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526722434 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137476148 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141060126 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128699142 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.158931365 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.126934826 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132692001 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097702453 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.844549975 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158713017 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123366682 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.402273135 seconds)
done (took 5.365687346 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.184689133 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092605059 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092434159 seconds)
  done (took 1.246842708 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077932059 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.137393357 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08036935 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080046962 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.080017759 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080040178 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.079422894 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079517368 seconds)
  done (took 1.679198969 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085395636 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.08152324 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.078884734 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.080805358 seconds)
  done (took 1.390258635 seconds)
done (took 5.651847814 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.768467591 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.227294927 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19727951 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414002474 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.142730473 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187735991 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662301116 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327290652 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.198522671 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092343508 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.122916375 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.351219978 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137460937 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6557833 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093104001 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105594637 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15342382 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432089377 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083353807 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097279961 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105083214 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143670041 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.098107605 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089076246 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.163553901 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082670873 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154152125 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096090308 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081669363 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226220597 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18765907 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.671791321 seconds)
  done (took 10.650195365 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113421649 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.110646298 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.081898251 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137656562 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.113069327 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082665458 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087817079 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081143168 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.102012536 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.140776658 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.103217699 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.117439866 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07931331 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080519925 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093946739 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2251899 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.092343859 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094620135 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081146876 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091072482 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120216107 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.091492419 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092751426 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092256482 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.141931654 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193589801 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112982516 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112480865 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08073349 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09579881 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.127831265 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141004018 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.081886608 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.077333475 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.136640648 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111085754 seconds)
  done (took 5.022946734 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.971009244 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.156962022 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102727596 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141336784 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.078037379 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.119210615 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07919403 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094014498 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218775864 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.443750631 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.630872944 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.146478379 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126613602 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120390038 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081595364 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082083371 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081082452 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.497640109 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.112763414 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11482131 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093927576 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082950879 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08163573 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.077707068 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084186411 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076084041 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080913118 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.12248907 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.086413283 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.31383654 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13474726 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083754792 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.938033215 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.176803088 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081571231 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114816753 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203733916 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103112347 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.15126165 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08042826 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076593487 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.305016432 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078117592 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085101271 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079885025 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.097497015 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118205456 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130224087 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.080943633 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078872933 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179656238 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078061837 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095201969 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.088919983 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168192319 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078883916 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303175882 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101803908 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084275297 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078202498 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.175027142 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138958641 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083233712 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081484644 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082319733 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081695678 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375886004 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079603106 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.942649417 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084777597 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.093410175 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083834892 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086391111 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087595456 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087145299 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099809534 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077423706 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079321352 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086611388 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079556902 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078953335 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079616286 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094116589 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.103146018 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.406725546 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080083407 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08509716 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077697373 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101162497 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109455105 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07966337 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078997561 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113047337 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081186261 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07865914 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076701498 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081288704 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093729358 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083466139 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125109386 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.181086949 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.100021187 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113963382 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08272282 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112516908 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.090653643 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076736133 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084677086 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.474417841 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078467935 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085569637 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078750362 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081545201 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080037046 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090663067 seconds)
  done (took 23.126647811 seconds)
done (took 40.835881063 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.263148276 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08257295 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081094214 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081648523 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081497794 seconds)
  done (took 1.741166947 seconds)
done (took 2.875763097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.136695776 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110693077 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077320643 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109406743 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080091276 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112318945 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111982861 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.089148948 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111682141 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077688798 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109291967 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078007044 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07746599 seconds)
  done (took 2.430423654 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09387576 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094711705 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081207255 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093798436 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076167161 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093173529 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094336333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102810031 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097271736 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085332827 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077000574 seconds)
  done (took 2.113600405 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092433023 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09533567 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083093757 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094593143 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076188758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094826379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094117108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098917514 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095276293 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08713803 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077197947 seconds)
  done (took 2.111578446 seconds)
done (took 7.77699783 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.086913879 seconds)
  done (took 1.198638258 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.545963099 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.649188037 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089897953 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113176944 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.202298126 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124642521 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.258004099 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.097803977 seconds)
  done (took 8.363781991 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104235857 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093978612 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08380446 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082413585 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084122567 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084730433 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083660513 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082554217 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082567407 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082489967 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083397388 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080933082 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081870684 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083209224 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.081011201 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07966104 seconds)
  done (took 2.551103675 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106356032 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105811035 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.0841761 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085723555 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084400438 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.083018224 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085267187 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.084803311 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082418628 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.083430072 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08620734 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.084702919 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.082869269 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.075123502 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.084632493 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.086803585 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.081999769 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.085036998 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085822607 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085573555 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085673773 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.075122122 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082132961 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.08463506 seconds)
  done (took 3.273836377 seconds)
done (took 16.511957297 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115437476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079662483 seconds)
  done (took 1.315280445 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.089727496 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090263115 seconds)
  done (took 1.307502652 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09067056 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.075096612 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.097831956 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.086648785 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.076112864 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.075604759 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.096384366 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.075856118 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.075998758 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07599709 seconds)
  done (took 1.953454664 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.078083994 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085928662 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.079996042 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08978702 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.083262893 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.075051077 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081350695 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.077113373 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085598121 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.074032775 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08073783 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.093375212 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08077717 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.094713767 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.081482899 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.078681073 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.080542814 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.078339434 seconds)
  done (took 2.610000369 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076699486 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07662676 seconds)
  done (took 1.285237389 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.076857086 seconds)
    (2/7) benchmarking "second"...
    done (took 0.07413736 seconds)
    (3/7) benchmarking "month"...
    done (took 0.076775707 seconds)
    (4/7) benchmarking "year"...
    done (took 0.076859882 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.073985998 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.073135015 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.074337384 seconds)
  done (took 1.653563461 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410021345 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.128766233 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329119387 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082234568 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.091271407 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258354096 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07692059 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.081701579 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.081982678 seconds)
  done (took 2.709302233 seconds)
done (took 13.972370114 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092225216 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096964166 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.105431118 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37871622 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.103890753 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.078452866 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.125965016 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189652018 seconds)
done (took 2.31646848 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217684346 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.671840399 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.408672183 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212879284 seconds)
  done (took 2.429219358 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332582362 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097702987 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07177535 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079094873 seconds)
  done (took 1.724067317 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079235863 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08017482 seconds)
  done (took 1.300943937 seconds)
done (took 6.815718184 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078005582 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.100639343 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076612342 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.075087399 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076748615 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.075669987 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075391767 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.075471641 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077029247 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.190835364 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.076903482 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.077217162 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077075667 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074722806 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074988487 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.076942673 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078249045 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076752022 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076370046 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076384458 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078675971 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077087895 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076919064 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076593706 seconds)
  done (took 3.15029699 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.092277577 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.076914855 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081201375 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.080793305 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080034782 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.081776564 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081078187 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.077240209 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08129011 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079419035 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079483472 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079891677 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.079034347 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079607477 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079013026 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.079993625 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081105459 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077453309 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079104723 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079902132 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081015012 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07786059 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08265255 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083299283 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081617381 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082129567 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081541647 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079534965 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083394327 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081385372 seconds)
  done (took 3.571918168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081092585 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073966388 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.074749132 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084843972 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076279918 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076671533 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075196164 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.0763869 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077233344 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075496466 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077171521 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075375213 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075131826 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.076449362 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076150993 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079870499 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093259333 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.075466468 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075590672 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076008613 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.079640591 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078287526 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07572583 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075372099 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.074152025 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074499301 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.074443895 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073753914 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074620476 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.073946233 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07744874 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079546796 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.075516028 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083794622 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080024238 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.075227856 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080269259 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.075318765 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077134015 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.075435534 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075558754 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075832836 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07555746 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084411801 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075896284 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075998586 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.073605331 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.075406991 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074837863 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.07605412 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073415551 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.073701449 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.076022832 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076891635 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080344962 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.075834881 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.076910905 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075658957 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076640108 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076275019 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075483953 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075479067 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07904243 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077001806 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09303922 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084927968 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075759097 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077022518 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.075606129 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.077326005 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.075818293 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08937027 seconds)
  done (took 6.720760368 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097558395 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097106743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077858297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.077056598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072804976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074835368 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08121151 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074606947 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077805974 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09260341 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075239567 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0780668 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077201956 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079011289 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074999977 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077507877 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083381555 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07321281 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.075020944 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079575092 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077187662 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082382235 seconds)
  done (took 2.922160174 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156167828 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080714723 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113104503 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085512383 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081026138 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085945713 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080350171 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080667078 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080870137 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079067448 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081323095 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083176715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082937608 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081509663 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081049518 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081147285 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082636691 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081734311 seconds)
  done (took 2.734834717 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087938375 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.077645337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098686822 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079152191 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080202884 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081572569 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084230785 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087056923 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081899172 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.079523533 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086719511 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081323607 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081738263 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079424128 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081329634 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079490982 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082120338 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080164615 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086489163 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08427234 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084598741 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096412544 seconds)
  done (took 2.999699261 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090224702 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078972985 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091638285 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079714599 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.072828622 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.074523359 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.081161931 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.076827014 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.080527141 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.079204988 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076985159 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.074987253 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07955134 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077616427 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081569533 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079420929 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08070762 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080326042 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080511798 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07438132 seconds)
  done (took 2.750223357 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095275727 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079142053 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078662459 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084729846 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077693726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077413473 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084415824 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078054519 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078057484 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096078737 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078014063 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078281646 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084336117 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085250897 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078286672 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085479828 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084922659 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084828355 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078056447 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078348672 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09600852 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078444875 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08483411 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078138747 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078270024 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078499821 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078349798 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0823197 seconds)
  done (took 3.459329503 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077645136 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077470347 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.076624894 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076809036 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.076889147 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077327746 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076902995 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.07683822 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079008349 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077876223 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079652368 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07890411 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0797632 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078898252 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079460621 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078499777 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07870091 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077101742 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077450309 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077193849 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078622148 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079284712 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079146766 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076968707 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07646093 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079037373 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077822617 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076901147 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079324284 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077058305 seconds)
  done (took 3.502566283 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085581744 seconds)
    (2/2) benchmarking "in"...
    done (took 0.083534059 seconds)
  done (took 1.334141313 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07389173 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091027822 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074113319 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082766837 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080810284 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077818446 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.083991765 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081247452 seconds)
  done (took 1.804790626 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095519615 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08600844 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.077005351 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.086420505 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.086124401 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095067094 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135242591 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07675525 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086088624 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07772479 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.092901601 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079050738 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.087767211 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082892444 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088979026 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091822217 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.075971077 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.083124074 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07820604 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.075217582 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078156588 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08980807 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085692414 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.07247262 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080891028 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.1020961 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091641394 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.075952101 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083162113 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088231713 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085623795 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071145206 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07769406 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.078661509 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076602663 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.087102984 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095882509 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082566123 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.088825621 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07689221 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084417715 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.072078902 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.084833973 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087604306 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094178234 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.079055823 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.079117694 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074093999 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.07936328 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084421295 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074415938 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082577779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.073530678 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090406371 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086218436 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093371798 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.077420773 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083849314 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085016817 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085309576 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089852214 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08433582 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087342247 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.078286213 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09419068 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087691585 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090664505 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.073928932 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073037795 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.075343285 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089601464 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103831878 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.085437539 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.076999008 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077068214 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.074811772 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083132226 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076882717 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085289475 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08748125 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.076635163 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081595772 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088257679 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080447271 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081959087 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082993483 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.075153566 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.079229268 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077397759 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095561145 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.077429429 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07485629 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077203379 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090635258 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082385085 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.076262 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077376715 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08761075 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071527409 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.076450111 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07715853 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080928507 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087867162 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079641815 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079395467 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.087807673 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.082341871 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079527386 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081273842 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074236312 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077092668 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078449428 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087604101 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.071111278 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084283714 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080528645 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075258578 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.085904157 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073203936 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074358581 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.212265037 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089105868 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078520983 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076446369 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086235451 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.078939513 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083190313 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092397829 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.077103577 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.074301301 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.074321926 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086142783 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.077877517 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085906482 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082507547 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085261068 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073536138 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.076668442 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083223348 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090676248 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081446232 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084114515 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088249678 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084062341 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.076795937 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090540965 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084905154 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080319973 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088285526 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080718432 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.072055506 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078462526 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082559221 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.075354653 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083641356 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078259059 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082493226 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.076376561 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075239205 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081783591 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077088804 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078038166 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080653305 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.076473058 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090651657 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083029404 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.072397482 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074148374 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.083490994 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077112504 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.075625757 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.078230148 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08269723 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.076591391 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.074625536 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.076197883 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082078411 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084260688 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079717913 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077102479 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085410408 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092468119 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.075640458 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.082756999 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.075901583 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076861631 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.076389882 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090083491 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085776956 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080755031 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08261271 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073504137 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085090361 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087972933 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078165601 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.074141202 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07831771 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.079533541 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087576017 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.080084144 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.076854307 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074507093 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081156457 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078141235 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081834246 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.075608052 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078199588 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081423752 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.075301115 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.081843457 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076610518 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.089418742 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082597583 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.073004701 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079122877 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076000714 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087973553 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.074033804 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079296329 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080650539 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.078593651 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.077256112 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084310117 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072516098 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089833067 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089120828 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082090429 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.077490631 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.075728935 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086941373 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079896682 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082920024 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081435472 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083730039 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089686693 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077399722 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081518929 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091940615 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.075502604 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.070671057 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.083702579 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.076028653 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076146571 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.07659457 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.075909983 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.213140314 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084791805 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089180804 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074293963 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085486074 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078288952 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081597794 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.074919993 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087128464 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.084846901 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082413632 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090151953 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07928507 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.078810115 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085728283 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.077852938 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.078993537 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.078899961 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084588213 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07867367 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083938567 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08101801 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084169603 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080053129 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.07714927 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.083907176 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.078009951 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083837355 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086983068 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.077653522 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083605982 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084385305 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.078634912 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084131718 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.081281192 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080978079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08554861 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083598259 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082967053 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08418126 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.074131562 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090007642 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.077232808 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09078387 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083084971 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075505973 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084685018 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084595315 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083416424 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.078895797 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07897062 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083698569 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.077892312 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084644792 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08999838 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079404034 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094021356 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089764147 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083592546 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085168895 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082994113 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083814872 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080411481 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082318508 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.078783446 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083258382 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.078498498 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086982268 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085340028 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083233698 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084444307 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.079323504 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082843552 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.079398783 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073947389 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081149535 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080851769 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.078031995 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091580616 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.078874228 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08110306 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.077288128 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078209555 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.075511784 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073972509 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.083461809 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083942557 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.077660667 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087398797 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078731565 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081754538 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092561426 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07222843 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.074786099 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.074513867 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077204817 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087805868 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.076402792 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088787357 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.080703636 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078765127 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07384431 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.076807196 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.075307149 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071984862 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.074604859 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084251721 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.078263477 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075271625 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.075385967 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08273188 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075801999 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087107161 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.074783496 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.079126321 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.075522502 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.072740194 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077267176 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077448783 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081163374 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.075190319 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.076400662 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.072678166 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.074605897 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.078880602 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.080207849 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.074766103 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.212497654 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089236029 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079731678 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086436487 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081430921 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075292918 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085602488 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.079415938 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.079204571 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080206847 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086991876 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08842303 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079526372 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09282819 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.078300114 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084072134 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078359805 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.076424735 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.077723698 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.078126549 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.078329309 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080905709 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.079136602 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09136744 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.076350592 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084350489 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083036804 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082217931 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08840493 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.079719639 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084820973 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084022839 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07929974 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084474273 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091371314 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082028049 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085770446 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079241198 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083966842 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087798361 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080429604 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089363662 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083247648 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.077186163 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081904698 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.077481262 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076407379 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07675309 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076094526 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.086395178 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.076620168 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078999949 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079325891 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.074742554 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.080509753 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079422344 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088818396 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.082886479 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083192345 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.072417896 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074066966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077076037 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.077294426 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081791967 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.083130582 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085547984 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083081047 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079991364 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.076239139 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090453565 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085917018 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.083844106 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.077437982 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085541852 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.079346125 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084817912 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082219493 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083258589 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080078923 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085795894 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083940823 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080931995 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089054915 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085581926 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.079157022 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083565119 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082033528 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083093921 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.074460048 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.078725748 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084856596 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087121538 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084833501 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078368338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092367969 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.077132112 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081430681 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078956858 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075491086 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.084695846 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.072432516 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.081712456 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076892809 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077707948 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.072478369 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078388121 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.077216766 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082858554 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.078714604 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.072403169 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090385456 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090283462 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083537144 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076552654 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0745276 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.071533568 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.071621682 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.077801868 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076415936 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.080432545 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.088500709 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.077094437 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077188517 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07112254 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074638396 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081390017 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.081903805 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.203717551 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.073933845 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079792322 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083820622 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090704047 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077777391 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.079466677 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086063864 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085429022 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.077149197 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081065713 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075724482 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086006588 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095136671 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.078764606 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084023168 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088152923 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091725452 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.078457693 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.074661804 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07929112 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085116636 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084053343 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.079635307 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.079628057 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097723716 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085113661 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081101688 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.077578319 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084954313 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081739656 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089392517 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077238629 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.077412831 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084465377 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082430329 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084775774 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087945654 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089555128 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08378608 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08463361 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.0777521 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084067116 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.076117077 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080283465 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.079141208 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.076745336 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08049682 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.083842238 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078764241 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091442449 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091921928 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.078714282 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074151886 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078674392 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.079135809 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.073059027 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.077636651 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.075492842 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.075257318 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.075137442 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.075932661 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.082002964 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085410087 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08084877 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.07774285 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.077987192 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073493784 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08738427 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083725423 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082135875 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074706431 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.076913065 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.077471234 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.083868357 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079321398 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.076221679 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083148051 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084036463 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084060249 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.074727669 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090302827 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078357291 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085033939 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08105567 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078462905 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.078706883 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086188133 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082856142 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080759589 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08581901 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.082612128 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078029648 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.074484659 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.073826045 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.084977167 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.074634564 seconds)
  done (took 50.182443903 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109340814 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074021447 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072696469 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072562516 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08279912 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073841869 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073235071 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07430992 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074101085 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075930665 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073246171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073641019 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081276086 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088243064 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083356598 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077117385 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072975156 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074461697 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072921474 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074401996 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08114705 seconds)
  done (took 2.902625012 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.083419212 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.087201633 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085549113 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092215627 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081847621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080476565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085797251 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079792863 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090648867 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085775992 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089599545 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081088695 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.083106371 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.084119934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085820304 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08287365 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091133509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08471277 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.082430897 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088084889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082538521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088462276 seconds)
  done (took 3.11792101 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.077002553 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.075597925 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.082575327 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.073921606 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.077852311 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.073805041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.080889718 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.076698657 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.081469215 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08003503 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.079729663 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.079933957 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08387753 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.074096583 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.080529744 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076598056 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.119147934 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.080385973 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.076806744 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.077024286 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.072861275 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.083056162 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.072306995 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.072779705 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.078589344 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.079069335 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.077673761 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.07671039 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.077783077 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.080206641 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.078071965 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07491166 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.082044232 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.081504784 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.078256064 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077769076 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0758472 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.079141042 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.0721959 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.074471759 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.081217091 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.07230807 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.076683136 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.082470176 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.074164572 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.074036768 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081584956 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.075496605 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.072525488 seconds)
  done (took 5.09023314 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086944319 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.120367533 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.078300958 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101849534 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.089320034 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.082123494 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.080497043 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103584349 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.074253779 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.074946026 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.090986644 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.088994429 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.076292116 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.080230046 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.082209796 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.076366842 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077128287 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.075728352 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.079551165 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.075741316 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.079593338 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.082418339 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08921757 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.087621623 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.079458293 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.074895865 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.075518583 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.081256651 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.088843949 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.082067296 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.082154235 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.082485014 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.092547358 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.081134419 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07646954 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.077771974 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.091146026 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.07643963 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.077893126 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.074051513 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.077349394 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.079931044 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.082621752 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.091433249 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.076702653 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.08140205 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.07584435 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.073436634 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.087479364 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.077856685 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.082580014 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.088804802 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.079148176 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.076874111 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.079982608 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.089349768 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.076117367 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.075062234 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.078052671 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.087107847 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.073876043 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.078858757 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.088890368 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.077609168 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.082026047 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.089073957 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.080921032 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.079331171 seconds)
  done (took 6.972982946 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08529077 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104319045 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092278066 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092189168 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085934925 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.085830946 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.085920854 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086224651 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085503119 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08982579 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086336226 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123201651 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.081730076 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.088070147 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087393663 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088497816 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.088300731 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088238176 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087833501 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088311024 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.086692473 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092550967 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086135953 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091926339 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088722042 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081233131 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0854339 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085986727 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092972953 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085658771 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088621967 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.085344073 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085955619 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.092081939 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088905915 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.085330499 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.075801172 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085614624 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.087744928 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087917288 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083692887 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094907577 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087775142 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.083514848 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088676187 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086611384 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093043045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.089063451 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08837773 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089912143 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.085483743 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092121395 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086983579 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087198334 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093026903 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.095403571 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092341975 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092240158 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08613497 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092229663 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092252025 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.094741086 seconds)
  done (took 6.787735021 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091009381 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08351026 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.091992171 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.073398002 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077297698 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083183698 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074893203 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.074997429 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08321986 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083293443 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085886541 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082913696 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085588149 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085509693 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082827186 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08518985 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082976883 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083139461 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083691827 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082862631 seconds)
  done (took 2.928686856 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.086024594 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093293367 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.077888411 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082635859 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.079566099 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082594233 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.079935685 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079883152 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078649864 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080414824 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086763645 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086155748 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078546631 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082401804 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086094327 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082360968 seconds)
  done (took 2.580532767 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092432348 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.082927271 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.088673143 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.076828012 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077526138 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.073310168 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.076077502 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.072133038 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.072899089 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.088669994 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.076166306 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.08683241 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.076938012 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.075623021 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.074129292 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.081647208 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.073510863 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.074321566 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.075838151 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.087880254 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080480966 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.075465822 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.080736293 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.076173479 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.079085524 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.097520833 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.075411291 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077553426 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.074167295 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.076774967 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.079201459 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.080011685 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.073333903 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.074572699 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.075185724 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.073795845 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.076001774 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.094189596 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.08121127 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.076160343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.074304612 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.078449463 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07596171 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.076941322 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.072879802 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.076498668 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.073113078 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.078927889 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.074239628 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.079227405 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.076022458 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.078672406 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.076891567 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.083926138 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.078970752 seconds)
  done (took 5.574730344 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090164535 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079598175 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.071711752 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.074234411 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079335086 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.077979729 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079981078 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.077896961 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078668173 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07462112 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078794186 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079430199 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078002539 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080127489 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078524688 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080260625 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.072272874 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0784038 seconds)
  done (took 2.699043886 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08197564 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077204992 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.083906424 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076962748 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.076762704 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079027293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072660364 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.074739855 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07514635 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07735786 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077452319 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.079350166 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075148996 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.078627987 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077074343 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07702838 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.078709152 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074721736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077467344 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072637863 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078968677 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074427555 seconds)
  done (took 2.974184055 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.105089461 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.094581597 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.148113415 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.093524209 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.099518843 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.085647714 seconds)
  done (took 1.90453116 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099609415 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106920976 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07715873 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079661494 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084785038 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080712432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080520284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080977145 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087683245 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085784814 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080760215 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0899782 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087434507 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08758818 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085104753 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085869429 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08102511 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080913117 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077287645 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092540065 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081188237 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087890299 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081172134 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080795926 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081161994 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087863758 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087556291 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085971901 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080928417 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087977489 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087634312 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083478046 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089960169 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086422077 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080186301 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087961606 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081429674 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092749667 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085404502 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087261372 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080516882 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086794208 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088219154 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085379798 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087988084 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080926726 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084977269 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080855747 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080738153 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093977271 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085583204 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087396686 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085671111 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088085322 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087740629 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093737282 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08586825 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08765075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085335786 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086144394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087339867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085889009 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087548064 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086083155 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085400222 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088107494 seconds)
  done (took 6.943751781 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113032808 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077933688 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081382366 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085593302 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087702715 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08120461 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081655892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081024978 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081568015 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078217958 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115819834 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081673673 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087630682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087657122 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081469105 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08088712 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081165402 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087787859 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078139515 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094338754 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081175909 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087267868 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087710681 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08826454 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085911877 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08590116 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081694951 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081293827 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08114157 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08086977 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084717235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080830118 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087189765 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077846379 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088048273 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081320125 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080790944 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084953885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080841059 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085422056 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087656803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092289286 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08136879 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080930746 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086555835 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080914726 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081344313 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077907776 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080931795 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078062727 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085928275 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086294318 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087155355 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089817202 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083534671 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083126529 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083560961 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083683043 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083544841 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087395371 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090173171 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082933059 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096559778 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08326318 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083239865 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089742331 seconds)
  done (took 6.909863908 seconds)
done (took 143.665063703 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.227902075 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201243461 seconds)
  done (took 1.698061175 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.085981072 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.112688248 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095760501 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.14873752 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083070366 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.117873068 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118219276 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.093447009 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08308327 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.083042317 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083263538 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086061415 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149558613 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083349342 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083783564 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086320069 seconds)
  done (took 2.878715779 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.114871722 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172325722 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.118880767 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.081583568 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115941632 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08897603 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081805864 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097201516 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088337963 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.083564885 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089686936 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0872188 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082843224 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087465981 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087730993 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089555165 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.082875372 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089074292 seconds)
  done (took 3.029896378 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114990974 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.107809751 seconds)
  done (took 1.516163603 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.168808739 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.145402368 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.21381797 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35381469 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16691506 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.1621259 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.154871451 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.151948502 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.125686352 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.148534169 seconds)
  done (took 3.081453003 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.113745226 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164651571 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291950143 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.131773639 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087558437 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.106475958 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.131221522 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.09426105 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.095921869 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.095436282 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.095863971 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090785108 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.113591781 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.088349964 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.085690027 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089980968 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.116809588 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.08479425 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.085506217 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.090785119 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116848223 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.081746653 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.088788479 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.084397126 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.093208791 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.093539411 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08324075 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.082608364 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.09010434 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.085155407 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091130663 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.10578945 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.092795337 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.119069653 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.086345531 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.120844675 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.090175905 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.088435648 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.085558716 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088421177 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.092395613 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09232219 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.090548054 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.090038283 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083560118 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.090290466 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.083351587 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.082275315 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092554984 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.08334534 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092404312 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091628238 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.11900142 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.083431214 seconds)
  done (took 6.703727046 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.118268782 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.117645549 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.082894207 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.123933167 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115068095 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082958583 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.117030386 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109740629 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.118852726 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.083073618 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.082168984 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.08354302 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091598679 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.09412936 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.126504766 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.118742163 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085140951 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.082437656 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119152547 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.118169149 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.081466629 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115434961 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11119552 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.120292728 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.080992931 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082250652 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080922187 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.082516466 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.088343411 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089085107 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.081462887 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.091077489 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.096314628 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.089699143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.081015135 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.080839292 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.081044736 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.090474194 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.091785733 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.090783189 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.088936044 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080607909 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.080905546 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.082176459 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.081994292 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.080295612 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.089539559 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.091046824 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.089747305 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081449607 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.082579162 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.081537733 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082465691 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090809055 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.088642492 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.09160148 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.091246365 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.081421882 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081539249 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.083956418 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.092114502 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091536971 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090614179 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.082750937 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.091191735 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0840909 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.092320295 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.095635752 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.081434776 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.082921303 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082051456 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081139489 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.082339124 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.088626087 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.088875691 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082697511 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.081298274 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081526887 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.091036811 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088706693 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080897523 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.088533677 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.080373887 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.081166636 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.082411871 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.082417551 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08859907 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.090867295 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082411605 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.081283373 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.080822633 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.081157297 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.080125971 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.088528921 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.089646854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.089164052 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08887012 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.081130726 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.088253861 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087613085 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080576108 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.087533 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.079263306 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080737166 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080164822 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.086819599 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.086168481 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088212406 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.079587927 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.212063387 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.090276714 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093309767 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.082554993 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.089372475 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.092326239 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.090059875 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.080704142 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092610946 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081950385 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.091294092 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081427357 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.091450381 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081495251 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0898898 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081515348 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.080483248 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.081937076 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.090410395 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082783606 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082087407 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084650804 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084589888 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.092011359 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096121105 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082835545 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.089771886 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.089242566 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.082759723 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.089613248 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.081205073 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.090612929 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081705322 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085010259 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08305228 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095832078 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084284922 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.083638856 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.083788406 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.094600009 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081686914 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091962231 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088774319 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081010346 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.092874183 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091771735 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.090627428 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092994065 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.083927505 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.08160219 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.083655467 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.084113936 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.090286857 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.09050473 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.082618794 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081067975 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088575932 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.090594438 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.081086795 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089310059 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.089459447 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.089427577 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.081312811 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.081616847 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091912195 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.092253504 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.08971047 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.089782107 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.089193693 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.081488898 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089035817 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.089731158 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081028172 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095382429 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081973845 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.093752286 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.091305583 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088695521 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.090086252 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.09160159 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.091196198 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.091420308 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.093691085 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081005385 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.081216114 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.09057551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.081267653 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081228664 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.089148532 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.082738558 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.082607241 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.093719402 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081871396 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.091171982 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.080554005 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.090129399 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.079967872 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081901979 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093585785 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.080691789 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.081632563 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088219877 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.082560375 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087035546 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.089851017 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087311369 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.079680668 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080960341 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.088616085 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.088416695 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.080055547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.214777735 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084139373 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.092426248 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.092595725 seconds)
  done (took 21.312394813 seconds)
done (took 41.529398258 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212750979 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16031136 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.172054214 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12534971 seconds)
  done (took 2.060462932 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119847114 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110020097 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.10007145 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.0800849 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108814291 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.081007291 seconds)
  done (took 1.926614007 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286358242 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201667485 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183658461 seconds)
  done (took 1.996815048 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216354538 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199577478 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443120243 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279413191 seconds)
  done (took 2.556733992 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.151080332 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095880921 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.07822817 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.094775667 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136885078 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164283554 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.107059359 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131759205 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.090071579 seconds)
  done (took 2.429080597 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.156006686 seconds)
done (took 12.461098545 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.137880667 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.28600068 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.232875378 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106939951 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086248784 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.080154847 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.20878689 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.103614283 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.251611127 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.08733588 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.088572735 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.081907239 seconds)
    (13/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.116412492 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.206316233 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.222880583 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097387695 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.201600128 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066686637 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.105778833 seconds)
    (20/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.227161069 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147543784 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088634702 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.226747566 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.250900325 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.064260954 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.340009367 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.085072825 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.094754692 seconds)
    (29/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.153430353 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.107581247 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.208198858 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103380934 seconds)
    (33/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153765525 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.205106545 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088213204 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.10715571 seconds)
    (37/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13199663 seconds)
    (38/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.168690157 seconds)
    (39/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.087840864 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.134517045 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.103607542 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.093544453 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087657016 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098445186 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105849959 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192431686 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.102793696 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.096675517 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078211238 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.081960464 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.161448796 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.210556372 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086210076 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.15865441 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10293374 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087338016 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089229348 seconds)
    (58/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.124307432 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.221705329 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081581035 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.231487369 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094631618 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143555453 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 0.079551884 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138268336 seconds)
    (66/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178855427 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173938911 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062679073 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103436618 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092006244 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074903563 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.205951205 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088634874 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.078023647 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.083817047 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.085908945 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.087622015 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.074573037 seconds)
    (79/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097700191 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.164874356 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.159139486 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.086191325 seconds)
    (83/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.092306708 seconds)
    (84/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.083701255 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101278086 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124730136 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.328116423 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192054225 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091671208 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191476532 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104022115 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.161695732 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130498042 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096519143 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087907003 seconds)
    (96/309) benchmarking ("sort", Int8, false)...
    done (took 0.160302702 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166775457 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.202036338 seconds)
    (99/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066138361 seconds)
    (100/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.135722595 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.141428293 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167201786 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088581309 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066211137 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066408861 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.083259843 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093077716 seconds)
    (108/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.121836159 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089055151 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15207768 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.097816347 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083027068 seconds)
    (113/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.122401987 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066257986 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067874101 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105683242 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.084362428 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08147086 seconds)
    (119/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.0759612 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079484851 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085067929 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.165824645 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.099667928 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065050727 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084862361 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.085417877 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122623908 seconds)
    (128/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.184011853 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066387366 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.082226607 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.172606195 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.080239817 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079960441 seconds)
    (134/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076172755 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087096094 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.086771272 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079938648 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.085411847 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.086822962 seconds)
    (140/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.084802147 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.103279222 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083492321 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12174236 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.09143531 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066211679 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080672987 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084702959 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.085588171 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166546006 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.101848886 seconds)
    (151/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.130118789 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.118857876 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.078941185 seconds)
    (154/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091181493 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.078199754 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129988935 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.103477664 seconds)
    (158/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.118350865 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.166220235 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.063800953 seconds)
    (161/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.074079722 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.084841599 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077446715 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111075323 seconds)
    (165/309) benchmarking ("sort", Float64, false)...
    done (took 0.140989729 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.211061417 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064632461 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18740349 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151187225 seconds)
    (170/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.100469138 seconds)
    (171/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086567457 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.1539113 seconds)
    (173/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087353568 seconds)
    (174/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.080116272 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063492818 seconds)
    (176/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.082825131 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.099392534 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150172596 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.129876693 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156162498 seconds)
    (181/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063856326 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.079154866 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077824578 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087958352 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064083192 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.064968604 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.080765853 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.08594205 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.064932429 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082612431 seconds)
    (191/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077475651 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079640374 seconds)
    (193/309) benchmarking ("sort", Float32, false)...
    done (took 0.142879704 seconds)
    (194/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06540157 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.103874459 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163331273 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.108740785 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082185217 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.062616496 seconds)
    (200/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082038241 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18192209 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063047611 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.235074445 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.109463303 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092031321 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08622167 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.1021671 seconds)
    (208/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.103576845 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080388937 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086639557 seconds)
    (211/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079728136 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.086031846 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065897883 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.0765951 seconds)
    (215/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064277515 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075078464 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080067685 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079042631 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085674903 seconds)
    (220/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064809275 seconds)
    (221/309) benchmarking ("sort", BigInt, false)...
    done (took 0.19636153 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079218505 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064352502 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.086349098 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.083678246 seconds)
    (226/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063480868 seconds)
    (227/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.075915919 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149868341 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.075545016 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.079079523 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.100426262 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.084187726 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.084376516 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.078782604 seconds)
    (235/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075490068 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06368411 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064387089 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.085007671 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.087168014 seconds)
    (240/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078301386 seconds)
    (241/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.167390519 seconds)
    (242/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.116806327 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.079216526 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.086702396 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114953672 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110078514 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063432596 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075922604 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.085266739 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.075464753 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.080395626 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076282762 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183981168 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.189131934 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.079317428 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107508028 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079997129 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079512364 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079337308 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179813074 seconds)
    (261/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.084885718 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.091071048 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063889626 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.085696215 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064895069 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.083048913 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.078950919 seconds)
    (268/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06418908 seconds)
    (269/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065371512 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.099676382 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07857556 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088679449 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079233599 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103834456 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080066653 seconds)
    (276/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.079831869 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140509401 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122898479 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086468552 seconds)
    (280/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064380589 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06325556 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063679082 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078259279 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09040098 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.080955923 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.063703293 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.10483325 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065852582 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078543762 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06580175 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.102323778 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.08636055 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065785972 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064107041 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064218284 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083805524 seconds)
    (297/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.080061317 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.082987559 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.083882227 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.082896955 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063540996 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063531244 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.063793584 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130154073 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.077803184 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063340293 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078946706 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077962047 seconds)
    (309/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063755603 seconds)
  done (took 34.879173259 seconds)
done (took 36.219726872 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095105726 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107462243 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08636604 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.10211129 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.093015764 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.088459304 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.084125784 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.089130437 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.090838014 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09258484 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09172074 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067270693 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.087169008 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.087122244 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.086085338 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106491039 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.091949309 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08633107 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.085918862 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.077096311 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086796783 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.078789976 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.078698525 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06741759 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.089665831 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.08355995 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.088182456 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.087110352 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.079182032 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.079223293 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.081773888 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.087060794 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.079140088 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.090824947 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.0862405 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08697949 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.088608915 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.088828227 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.081080011 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081271355 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.090084191 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.080921313 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088264237 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.086769697 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.085243341 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085012464 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089232605 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.090909052 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108816817 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083806996 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.087876126 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.088645384 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09031381 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.084358542 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.081690662 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.086107167 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.082479514 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106394632 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.086769533 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083030383 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.087253828 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.085274806 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.082982898 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.085915035 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086002029 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.089077886 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.088430688 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.083151995 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.088009711 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.083241874 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.078310565 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086245117 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080832348 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.078074364 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.089005326 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093232489 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.075883763 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.083188271 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.08559316 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086562873 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.076355098 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083274404 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.078383246 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.082989266 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.082722691 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067345443 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081548082 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.085394428 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.076452117 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086891704 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.085068287 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.085743357 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.078033164 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.088813886 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.076666913 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.082310013 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.078935936 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.078879701 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.078536575 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081999165 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.078359553 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082794449 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.086723329 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.078089711 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.082590542 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.090395319 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.078175958 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.0856422 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.075643855 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.07609636 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.089479474 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.087985565 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.078381625 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.082711199 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.076035948 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.083381331 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.076671597 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.078718777 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.077743204 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.077867552 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.08196972 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.07831779 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082421137 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083512946 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.089663371 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.077195393 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.079658013 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.081322269 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.077029711 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.081303254 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.077360341 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.077677588 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.077230581 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.072923424 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.081084194 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.077218931 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.082289117 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.081285674 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.084492155 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.076379533 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.084565425 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.080291488 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.08124329 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.080388983 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.074065848 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.070358729 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081461723 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081700803 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07654109 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.076804796 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.076283818 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.076404771 seconds)
done (took 14.165656191 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084442332 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144535294 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.106697801 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.105450878 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.097573628 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.080388233 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.087318172 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106588747 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.080294375 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.111587767 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.099338633 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.097475808 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122761899 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.077232039 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.079168886 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.08124709 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.079520611 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.092775387 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107153336 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.101858004 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123268546 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.077165361 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.100759853 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.100961925 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.098849861 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113283383 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.080574554 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.081205743 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.083216264 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103367896 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102698338 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.082589511 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.080469065 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.106042828 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102113946 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.093003012 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.079711853 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.092346438 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.079697063 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.078836526 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.08063067 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10637762 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092273181 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.092378405 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.081407348 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.087724667 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.079221145 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.093856189 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100444737 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08940532 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.096821009 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.108621346 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.080380415 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.094753963 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.076936216 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095059979 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.087594057 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.079723829 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.079947317 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.084764883 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.07981466 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0826296 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.092441367 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.089649626 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.082980949 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.09393391 seconds)
  done (took 7.510309531 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.096609376 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.105436316 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.095327447 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.098272935 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.07892577 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.079363635 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.080012957 seconds)
  done (took 2.073840898 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.079779288 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.098679382 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.101920382 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104369679 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.093802475 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.105931891 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089297882 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082664695 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105178589 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083654435 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100674612 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110943452 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.084065256 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.093740564 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102479117 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.079529711 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102887169 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.079624363 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.080454486 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102193792 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.083507673 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.106465836 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.087081539 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.080188742 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091174644 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.080276847 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124451571 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.081630899 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0802686 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.081311323 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.079781412 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.117877373 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090251682 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.087395477 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.079034705 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094206182 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.091873609 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081559298 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088868698 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.087876151 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.091642307 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.078099288 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.079037737 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.079843865 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.082135721 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.089503361 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.078671845 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.082362596 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.081323979 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.097522511 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.081000657 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092971985 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08367377 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.086492454 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.083846594 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086947705 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090617097 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.080989172 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.097889536 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.080172319 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094877918 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09547272 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.091440938 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094218926 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079819321 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090432294 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.091791966 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.080729096 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.081889709 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.081321408 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094243382 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.076968176 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.081676076 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.089405333 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079514035 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.101673086 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.101809143 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079790309 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.092988863 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.080650003 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.078793184 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080079214 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.101814834 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.083271311 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.078887014 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.083761429 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.083363286 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.081693884 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.078917079 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.083084005 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.076311037 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085608292 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.081445106 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.081441479 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082300265 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.094551328 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.082128503 seconds)
  done (took 9.981956325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.082263301 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.080619114 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.082200746 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.080729599 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.080804319 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08054679 seconds)
  done (took 1.947321785 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103681347 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.079722054 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.090834892 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.082065849 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.114005398 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.096771106 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.09671434 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090748013 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.094170896 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.090419327 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.095780199 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09807033 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.101522115 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.082879079 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.095705519 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.082508628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.0967769 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.085610367 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.089412924 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084065786 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.097729614 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.083082837 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08354991 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.09785288 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.086132028 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.082200633 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091162887 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.089492814 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.088958946 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.090632552 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.082943442 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.08579485 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.087503347 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.090216885 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.09666743 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.087301839 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081730822 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.087916578 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082417171 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.088050826 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.096809794 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.083088309 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.084127034 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.086901746 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.089825558 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.087043952 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.087241762 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091026604 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.095557574 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.08822081 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.087857605 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.081899471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.08521169 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.087505254 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.087712252 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089898122 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.087667576 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.095841056 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.082816883 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.087407926 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.080177502 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.085712048 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089803055 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.086178386 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08873436 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.088113784 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.088175885 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082997326 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.083360077 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.08180656 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.087672896 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.080116857 seconds)
  done (took 7.829153178 seconds)
done (took 30.812231191 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.524861097 seconds)
  done (took 1.941966872 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619535953 seconds)
  done (took 2.063894971 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.526834214 seconds)
  done (took 7.966489908 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.375390466 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46248711 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.731988539 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.145694317 seconds)
  done (took 3.193894931 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.737463483 seconds)
  done (took 2.188609085 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24048809 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236721821 seconds)
  done (took 1.937418201 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.401420357 seconds)
  done (took 1.848744327 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.054935075 seconds)
  done (took 2.503365218 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.249043887 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176280159 seconds)
  done (took 1.874858818 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.437319995 seconds)
  done (took 1.884537152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.183813385 seconds)
  done (took 5.633275028 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228278259 seconds)
  done (took 1.70861052 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.254610699 seconds)
  done (took 1.702541231 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.733812364 seconds)
  done (took 3.181555941 seconds)
done (took 41.089075747 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096100193 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098691244 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.09762827 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094016774 seconds)
  done (took 1.81744035 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.087510646 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.083628719 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.08779001 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.08364029 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.087406727 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.083486922 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.085209234 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.086314472 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.083739076 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.084342451 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.083658797 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.084231465 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08667711 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.08513708 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.08360394 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.087195094 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.087692254 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.083997926 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.087206122 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.083773611 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.081885431 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.086559352 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.086939288 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.083203399 seconds)
  done (took 3.495060962 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09112058 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.086669846 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.087983379 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.085170785 seconds)
  done (took 1.807820892 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.088948046 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100631732 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.099665784 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.089505071 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.101083279 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.09630463 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.080557277 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.080246528 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.081908363 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.089317512 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.079604153 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10547794 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.098256809 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.089675198 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.091229822 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.076588955 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.078965567 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.097710162 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.089711592 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.089984094 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.082095234 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.090470879 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.079593734 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.099180671 seconds)
  done (took 3.609294378 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.097730735 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110774013 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.091308844 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.101344443 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.102570897 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.077413227 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101126714 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.103036083 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135833646 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.077673364 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.083267085 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.077752962 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.086019453 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.077446153 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.091506897 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.120538095 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.121893697 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.080769211 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.108802721 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.077511851 seconds)
  done (took 3.387069671 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08534566 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.082182975 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.083105551 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.079120578 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.090269777 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.085882259 seconds)
  done (took 1.970097803 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.081913249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.081350791 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.080397998 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.080767234 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.085278235 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.081308024 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.079333034 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.081303925 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.080707237 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.080714317 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.080496716 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.079574079 seconds)
  done (took 2.432854765 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192755978 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.081567942 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.083577196 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.079426895 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.083465377 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.079894912 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.094009669 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.081370144 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.105901739 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.080055214 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.080195522 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.082122483 seconds)
  done (took 2.585762933 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211035212 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086608366 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243190535 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157673209 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11838504 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123040348 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123894624 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123081037 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147294188 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111400355 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170592669 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173991332 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117361542 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146022866 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101135159 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.11282809 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160183665 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174864349 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115224447 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170022707 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151556907 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135608979 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154811738 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112558937 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114605884 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12753433 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.082401009 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090245669 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180198306 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140043987 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156478963 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120360347 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100735134 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187239556 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172427888 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149965061 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155148951 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094570822 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.114039531 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141564295 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207746854 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099601826 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170016418 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120030722 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089659298 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137168295 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123696182 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.269948814 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114312159 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102295521 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152487745 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18990669 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141779588 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097006337 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131665968 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121543995 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120766172 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126180679 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188775903 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165098833 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136633239 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.083529695 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120023836 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15593691 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140197359 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.116821615 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.132212534 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104381031 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138637351 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162333396 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131265375 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146605831 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.124216673 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09845209 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13028356 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145051702 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136186724 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179565533 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133257702 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.084855647 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131296645 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109212582 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091509531 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.153661878 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087072054 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182618837 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111977336 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.115482199 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137957701 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119471219 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119755666 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164223858 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146837751 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113387772 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.079802167 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115288888 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129060269 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148539198 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096619045 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116665086 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119156655 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.086592264 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287172912 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.087219382 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132781788 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.089157104 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132610358 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137696015 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.088892643 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131980672 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11462808 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.112475724 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139355013 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163753216 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099423248 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092263562 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169560118 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130184647 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111568019 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149651525 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160786222 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.114214348 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108447615 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152488547 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179235892 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101671395 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168300466 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114222731 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095373281 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09888188 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132305514 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123033111 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131766749 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092273428 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.128120561 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175205154 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.086944768 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10705063 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143584972 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092409581 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091561675 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112115985 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113596325 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.106946457 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.108813859 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.111962501 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14384425 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132056701 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11749068 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133407821 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108409782 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171181016 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098600073 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.112241726 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113175115 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.081423947 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138077809 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157949345 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08867625 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165537708 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127996753 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121980485 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125190822 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091732334 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142603443 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087976135 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.079626932 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14241488 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116144302 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115705266 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148987718 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119500345 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126977603 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122130568 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132778798 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132631879 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130249011 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110445953 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095059723 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118034936 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126272927 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.080783045 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094330889 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086963839 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108694038 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098179278 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090948534 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140614591 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121299863 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113009771 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116437513 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101754328 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144224482 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083094292 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126257271 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120369072 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100400642 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145374296 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146733952 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132167439 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104872296 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133784018 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.079516719 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082811491 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092643683 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122725313 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090336389 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090334458 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114943513 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144510962 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127914358 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134009739 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123472697 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119557972 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151717718 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07942683 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122436372 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137888253 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121564244 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107143852 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.362025309 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.114174482 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153499564 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119292325 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194696675 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126702982 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139271858 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167451952 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.116337843 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093024851 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117050905 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141165266 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114885499 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149031611 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112494528 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10117448 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120276286 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.092368006 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110394195 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137927599 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129217802 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148495875 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122678586 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143348207 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090310515 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124769114 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133946828 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131329092 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.078247678 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129116297 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171386881 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106558279 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128272205 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158210593 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091037663 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.146826634 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178697038 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155186081 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096573905 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118191267 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128932009 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132945756 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127831251 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149108101 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115194845 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147078434 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120556502 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.095707795 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097945498 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106467342 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114224073 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104849194 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.11039236 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119956398 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104949562 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138764005 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11022002 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272816604 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127747675 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.110183997 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.103602681 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107641072 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180079739 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127392589 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181504324 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.110798866 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146260056 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170640765 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087242019 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090754692 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.089927613 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148434826 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095821251 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139160016 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.122081348 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12524068 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132721861 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14627318 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107109148 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.081344985 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118828199 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141383886 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131636985 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108029084 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111806574 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165957403 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108992743 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090216109 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122116354 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124816219 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1137884 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175048435 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.074580439 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11793719 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087729296 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090760932 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132915699 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160379841 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.092477224 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106683942 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130277437 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118430539 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132582653 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107547229 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119681928 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137927676 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153274111 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135752357 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.099905127 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120831925 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134929035 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159245586 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110487317 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.106826931 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178351636 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307784761 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162151866 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.096193448 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123665086 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123856114 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118501766 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143201511 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094634387 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169003893 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092895023 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141829919 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111624363 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099046295 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136425705 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.122239875 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100005998 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151329817 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126516196 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09355562 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089366987 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125059058 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1278962 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114486679 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.086591899 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147086081 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.085354632 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141371883 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178252398 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093497802 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116223565 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106182135 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091624757 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114455737 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112385562 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097541655 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.107198362 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175607961 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.096582134 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152417553 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140739225 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120530656 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143782682 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11265908 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.649585436 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.088288862 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155768394 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123905778 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177949156 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109190716 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12656039 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119410201 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128118463 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147076358 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110389899 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184564422 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286904597 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.124974082 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090464396 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111617356 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112386822 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.097647293 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117649692 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122503654 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123118014 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.102402498 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123748287 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127899315 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.093436721 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106150863 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159964787 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124999439 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152320272 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148528121 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095556041 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127683249 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144403389 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091293034 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12711584 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162002043 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115853075 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108930168 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.092119872 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109350555 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177666274 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.085426443 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165727433 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169231039 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12013352 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123150008 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119112382 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138912717 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114021472 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130112021 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101608904 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117007799 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123064202 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092930052 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.088250416 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115380268 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120514629 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.107980045 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106192938 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.108126766 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155535178 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.083486853 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108603253 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123150188 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14967123 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178803478 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.098912748 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093867285 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127222067 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122953848 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119617694 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127797734 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.089132807 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091374532 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.089346284 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.094049356 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112569272 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11898286 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123690312 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115777616 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164703068 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.092304436 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227855775 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103640281 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111602067 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.081861292 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08706573 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104075384 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104167427 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110860018 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116602868 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17127304 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102807927 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097649925 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097774622 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.084494736 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091913813 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128336016 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113984802 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122645405 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107852558 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.074253178 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112024856 seconds)
  done (took 62.52442986 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.138305402 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.114111579 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.113121963 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.163032774 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137220778 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21789288 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.169154631 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.207562815 seconds)
  done (took 2.938800703 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.084031895 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.110528994 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.118339893 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.097125629 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.082156353 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.08317865 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233687945 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.094291751 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.08141062 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.110031187 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.091413556 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.082632463 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417334381 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07965358 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.08121248 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074952591 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.080506982 seconds)
  done (took 3.596258891 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.381395093 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.930744682 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35055502 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.088546537 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.602153646 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.104412466 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.617273522 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191267833 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097791499 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.883081259 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.375377522 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.188148175 seconds)
  done (took 24.416594445 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.095440549 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.089985132 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.102198204 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.102029748 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09180662 seconds)
  done (took 2.087541047 seconds)
done (took 118.172676833 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.093592838 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427161744 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066707878 seconds)
  done (took 2.12746004 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.100345009 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0985745 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.098987293 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.097067839 seconds)
  done (took 2.004048879 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.087477502 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.089713973 seconds)
  done (took 1.780585504 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234541647 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.184384419 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.109465584 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.096181548 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.090808021 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.095098456 seconds)
  done (took 1.895337633 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.084698699 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.085821043 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.083783417 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.087124363 seconds)
  done (took 1.950216575 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.087387893 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064916602 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06691479 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069622065 seconds)
  done (took 1.899527895 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.098030409 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.09382613 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.090354123 seconds)
  done (took 1.895301745 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.11349012 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.102400553 seconds)
  done (took 1.828893741 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.092089647 seconds)
  done (took 1.70107429 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.105526136 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.108989611 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.14314438 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.126760165 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151526751 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.127367129 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.098022414 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.099532925 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.092302985 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.099266523 seconds)
  done (took 2.761474497 seconds)
done (took 22.072111472 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.091375409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.014235115 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.37381512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103240136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.683012562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.369841465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.804536263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.105464958 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154896578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.083451392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.098312875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.66111789 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.798317403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.971816739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.783316536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.979786916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.667080065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.083455148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.081917045 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.081826441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.790753475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.081656948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.081971983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.082389245 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.664108397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.386327232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.082718874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.978783227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.082765463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.084541535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.370026672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.083009307 seconds)
  done (took 14.350201924 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084565477 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.132369194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.086517211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097785169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.084886517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.084333663 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.086052345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08274061 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132043712 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08249509 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.098784525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.082722607 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.086627407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.083046194 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.102235835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.082666683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.083570998 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.084055207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.08534332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.082664293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.101352689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.083313234 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.082813241 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.083518811 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.082836122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.095244462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.08297794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.082419745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.083017489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.085037352 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.085838515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.083677741 seconds)
  done (took 4.484817085 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126502621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136399811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.087363089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117567825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123535287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.083851536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.157165042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.106742426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140005237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.082831403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.099375287 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.083908862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117286283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.083584869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.102820239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.082881554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.084428194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.084009117 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.083287553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.083062277 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.102098049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.083139467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.082580496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.083711425 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.083031893 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.096300817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.083889075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0828697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.082542486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.084998097 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.086490142 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.083109254 seconds)
  done (took 4.730995448 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.084096336 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.086612111 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.093272812 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.094710715 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.08076725 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.083209257 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.084546106 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.081448452 seconds)
  done (took 2.319285998 seconds)
done (took 27.502534539 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.090533928 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.080726738 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.085871116 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100239427 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.087030645 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.091694422 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07925496 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.087842826 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.085883461 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.085801647 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.086924722 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.081685303 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.083977395 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.079481838 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.08629059 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.080639662 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.093566429 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.084523937 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.092540514 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.093744407 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.082489421 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.084978333 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.087697429 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.092248394 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.092498114 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.092029654 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.088740497 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.084317354 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.080523571 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.082483236 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.088364218 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.095750162 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082811177 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.09214418 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.0792014 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.079310445 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.083148442 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.081463654 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.09222169 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.087394806 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.08129369 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.087653169 seconds)
  done (took 5.239744408 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.098323529 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.103150027 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.096512764 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.074601295 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.080676253 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078301611 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.101080203 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073223205 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07315804 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09986938 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068961982 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.073105882 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075460528 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067771608 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07252244 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070383628 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075606829 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068204478 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072245735 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073087926 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.100387196 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067810751 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088568136 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076167237 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069226389 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074879841 seconds)
  done (took 3.708218648 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.086666438 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.098693535 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.104549464 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152386778 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.121674733 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.092485328 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.094342822 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103948657 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108283991 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.081508424 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.085925903 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.104183206 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104572871 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.087011182 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.081352259 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.096202537 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.09588049 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.082898473 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.087958385 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108339624 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102319255 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099142792 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.107288241 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098928608 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.080650486 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083541473 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.085675655 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097129844 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.083340958 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.091809122 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.08468751 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.084888492 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08274305 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.091460717 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.08413933 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.081154653 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.104809227 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09281577 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.093382165 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.082054372 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.090310584 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.082432837 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.106109448 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.138601683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.080639396 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.085825109 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.085409247 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.093117817 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.081050406 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107441782 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09467613 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.082866677 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.082288697 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.082011689 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.080826017 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083970871 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.08330023 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.084075892 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.091753992 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.087422226 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.102351634 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.086160747 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.09859637 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.081018119 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.0915627 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.080803603 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.082748657 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.080722851 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.108820273 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083042059 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.124010229 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.082984065 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.08089797 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.092652783 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.091940156 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087818042 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.081436831 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.098820074 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093205799 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.085610868 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.089646631 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.085008674 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.085561632 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.109405189 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.081704669 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.081346858 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.080367781 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.085276161 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.085400764 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.082471096 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.093409605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.081354196 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.084989754 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.099206503 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.081189828 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.082178795 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.08516889 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.083877336 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.081070735 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091712987 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.085607171 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.082849106 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.091574039 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.082068814 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.08451636 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.094024514 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.088066399 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.080523187 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.083376696 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.085406849 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.083201114 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.082532184 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.084870173 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.083127948 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.087832007 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.087857901 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.087128015 seconds)
  done (took 12.230108557 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.172435667 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.164718195 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.087802291 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.159643996 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.093583656 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.094888367 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.163341598 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10895136 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.081833845 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.082875094 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.082624509 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.120590242 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.117120512 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.126783799 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.093358328 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.083067881 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.103397097 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.125296903 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160521564 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155095235 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.103796133 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.089673588 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.084819019 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.083692572 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.083858881 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.091356219 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.098615294 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.091109987 seconds)
  done (took 4.779038808 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.091555931 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114612892 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.085491615 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.103949602 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.101731148 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.080339663 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.08385568 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.083755491 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.097737055 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.090204554 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.08044498 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.087581114 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.086288981 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.083208847 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.082481994 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.086397164 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.089868497 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.081849989 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.084323365 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.085375275 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.092145783 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102834281 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.086039081 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.084211425 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.085302724 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.082135295 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075039138 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.094460817 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.083141089 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.107017543 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.077905838 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.085297074 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.096305493 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.08262587 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.082320886 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.082561549 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.079931772 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.080368328 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.083902869 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.078788243 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.078855485 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070468232 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.081229116 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.090422447 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.093668581 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.068912681 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.08440315 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.085105592 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.084455756 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.077734183 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.084569038 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.084371018 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.084510365 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.088449312 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.083924156 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.084853528 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.083126268 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088659177 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.087315993 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.081273321 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.07672766 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.078548824 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.084029622 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076233152 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.094122027 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.084426841 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07863985 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.080411348 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.083522623 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.09401142 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.081352989 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.084571788 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.078185438 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.081939561 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.084556536 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.084211597 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.082746748 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.078789833 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.081724661 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.082200299 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067599057 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.081788721 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066574082 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.085181116 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.078289824 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.078733648 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.082347812 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.084171184 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.09160951 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.084354262 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.085591357 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.082548829 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0805296 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.085008557 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072374262 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.08488868 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.092407287 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.093440535 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.080026428 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.078159674 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.094643257 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.084732878 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07923907 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069901837 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.086589799 seconds)
  done (took 10.530752292 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.10462135 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.081240751 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.097791004 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.103865022 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.099720126 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.087035826 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.091374418 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.081521145 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.097063346 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.085975437 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.088581664 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.080554778 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.091924222 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.090268335 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.081915249 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.091456189 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.084315132 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.098982301 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.095754753 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.080969489 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.089925276 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.093662459 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.102474228 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.095187337 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.094475025 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.095711583 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.102448834 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.090189823 seconds)
  done (took 4.257614524 seconds)
done (took 42.372514598 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.732963521 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.967321117 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.712181002 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.983467801 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.771081873 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.928224078 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.827244324 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.728205776 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.916030162 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.750856779 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.037223861 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.828823041 seconds)
done (took 64.959003916 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.738017714 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.856194714 seconds)
    (2/2) benchmarking "String"...
    done (took 1.960600424 seconds)
  done (took 5.452892664 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.017433147 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.597893841 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.978043749 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.708259517 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.715073066 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.138436196 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.508750539 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.166750615 seconds)
  done (took 30.450210035 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.92178189 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.940773339 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.416220354 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.447956663 seconds)
  done (took 15.406273271 seconds)
done (took 62.789906782 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.721553172 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.760044595 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.712679295 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.692549521 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.802705677 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.730287783 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.836328622 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.944289201 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.710583177 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.707361853 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.712391832 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.14085472 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.714362979 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.813758816 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.712281243 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.713525107 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.783237184 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.170225576 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.871470906 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.725485888 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.724109197 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.766868338 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.715081074 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.714658296 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.721498874 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.713996157 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.11368432 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.715842935 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.548080654 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.716651659 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.757699446 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.044453799 seconds)
  done (took 202.866179045 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.712101083 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.770005154 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.846008569 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.723776981 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.107373287 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.906691568 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.842484084 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.249649603 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.717194471 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.741181268 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.813213846 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.713748881 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.835387899 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.712863404 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.739129565 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.713701642 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.922728913 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.856960411 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.747734641 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.867481153 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.712546682 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.661427906 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.632401748 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.803118888 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.716290545 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.723573313 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.740890105 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.720402479 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.908304644 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.888040139 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.756195445 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.749379956 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.924742456 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.586307844 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.717274859 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.730300423 seconds)
  done (took 167.151456188 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.929066256 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.715602482 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.713759065 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.713582291 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.719669503 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.713552621 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.842218358 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836264113 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.423304196 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.865237627 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.77307544 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.714853038 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574504319 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.717508612 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785218696 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.728028725 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.714898746 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.729266669 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.740901348 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.713527772 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.714849921 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843034498 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.725941079 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.713660039 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.7252747 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.715323034 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.719640882 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.017534993 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.714915816 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.816937271 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718658068 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720728521 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.02860953 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.716584263 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716286715 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620330608 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 15.164296613 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801859098 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.7173679 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.721284762 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.714653451 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.933300503 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.715714659 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.716197765 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.716276413 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.718643212 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905006437 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.719928642 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.844779505 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.716862704 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191306355 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.71703178 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718302012 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.427804171 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.305168202 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.719611008 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.718865797 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.716021729 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715931566 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.722327867 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.450060287 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.790909036 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.718303135 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.719486743 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.722537542 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.717052884 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.862441095 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.720653314 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.342007087 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.775043578 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.966995479 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.844824762 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716936354 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786527117 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813601007 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.717765096 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.716404219 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.716534503 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.717667964 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.717194625 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.798369283 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.717553978 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.84168742 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.717893489 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727958754 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.71915988 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.77350133 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.786703506 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.717718978 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614129974 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.720056196 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.717844766 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.025529669 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.787173985 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.719002212 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.717892287 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719843366 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.842443253 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.841452769 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.425019847 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.720369179 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.472037371 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.857589151 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.718480293 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.920180581 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.721237131 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.718645667 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.802018109 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727229141 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.720323294 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.75529741 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.720514404 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.780451919 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.718602196 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.033426446 seconds)
  done (took 399.531057889 seconds)
done (took 773.173456193 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.334964609 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.295948175 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.400074202 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.32308542 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.291044172 seconds)
  done (took 13.289795502 seconds)
done (took 14.935602426 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.804455619 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.808694145 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744316125 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.808517203 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740536942 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.808713326 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.791886299 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.745104562 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.774392806 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.746855314 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.77874829 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.746973899 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731501662 seconds)
  done (took 24.675510031 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.949739562 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.136679733 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.788894991 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.951340031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765030002 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.959323039 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.87879879 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868687318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.866379597 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.735206017 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731340958 seconds)
  done (took 22.278476038 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.953361872 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.958286264 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.79202841 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.96177633 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76629633 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.963040397 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.88481102 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.872044109 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.867683639 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.734370287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730726419 seconds)
  done (took 22.130466242 seconds)
done (took 70.7301523 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.727053708 seconds)
  done (took 3.37416066 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.752973191 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.923129027 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.733977359 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.729338356 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.726636501 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.727848732 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.728865922 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.726934175 seconds)
  done (took 15.698155421 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.723311401 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.726648781 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.725435775 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.724286012 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.725895983 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.726812686 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.725545551 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.7233243 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.723677563 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.723980017 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.725966752 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.723858129 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.726274993 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.727193717 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.724860024 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.724268206 seconds)
  done (took 29.247948354 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.726032695 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.725069853 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.724163393 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.725321312 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.724845882 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.725702797 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.724648756 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.724905186 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.725593924 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.725215926 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.72521315 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.724472128 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.724442599 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.724133948 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.725090062 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.725516594 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.724237759 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.725329319 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.728479662 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.724871481 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.724996543 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.724799053 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.724755589 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.725017891 seconds)
  done (took 43.052786272 seconds)
done (took 93.021061351 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 5.469905139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.350206927 seconds)
  done (took 11.46790468 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.72674482 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.72755792 seconds)
  done (took 5.106379519 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.72779467 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.727747787 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.728460704 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.72770317 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.727237938 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.728499585 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.730033648 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.728055263 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.728448893 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.729089646 seconds)
  done (took 18.931389292 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.728752071 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.728857969 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.72632554 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.728518746 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.727866314 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.725845733 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.728412072 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.727753276 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.728747347 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.725694532 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.728883753 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.727478471 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.728180706 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.727472755 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.728016324 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.726547286 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.726796169 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.727127793 seconds)
  done (took 32.746021984 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.729063703 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.729166885 seconds)
  done (took 5.107359345 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.727091889 seconds)
    (2/7) benchmarking "second"...
    done (took 1.727192675 seconds)
    (3/7) benchmarking "month"...
    done (took 1.727196531 seconds)
    (4/7) benchmarking "year"...
    done (took 1.727537378 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.72626982 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.726616768 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.7275698 seconds)
  done (took 13.73949742 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.730520658 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.864147638 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.932014684 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.598072245 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.730562454 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.733785176 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.8802973 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.733806294 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.734581414 seconds)
  done (took 19.587389493 seconds)
done (took 108.334697565 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.63647928 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.729735179 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.139253975 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.788424871 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.782524093 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.065445622 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.742665009 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.933654918 seconds)
done (took 42.469350737 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.741973999 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.464612603 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.495763349 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.751132496 seconds)
  done (took 15.362825759 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.714527583 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.027248851 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.729812452 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.569412931 seconds)
  done (took 21.751946222 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.096476648 seconds)
    (2/2) benchmarking "read"...
    done (took 2.073052597 seconds)
  done (took 5.823930084 seconds)
done (took 51.333628377 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730642413 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.731415643 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.73086334 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.728728169 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.731234892 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.728072315 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.728707221 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.728126096 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.73120896 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.731258596 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.732065011 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.73099037 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730541599 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728850526 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728999871 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.731480815 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731838721 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.728801461 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729607006 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729515006 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73172114 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.73023473 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.729395014 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.729025277 seconds)
  done (took 43.17467164 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.731591824 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.731034899 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.732347983 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.732959371 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.730878658 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.733391312 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.73168848 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.729793861 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.733650275 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.732761169 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730632687 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.730038721 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.731433794 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.730626506 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732979031 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.730093613 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.732708167 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730428628 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732421456 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.730878241 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.732622309 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730553582 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.731482907 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732465657 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.732101454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731008371 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.732540176 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.731999586 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.732712169 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.730911161 seconds)
  done (took 53.604054706 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.739378034 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.741578623 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.733794532 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.732997647 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.733474197 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.733540061 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.73354139 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.73667812 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.73380907 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.732882158 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.733502001 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.73463744 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.733702302 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.733750889 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.733924809 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.734447371 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.733919451 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.733203092 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.734138238 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.733686099 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.733844673 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.734462696 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.734041337 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.733719235 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.734544445 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.734497685 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.734462653 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.733996164 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.734524191 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.735486761 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.735192163 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.735048264 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.734424395 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.735576031 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.735082968 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.73618863 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.74083671 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.743910943 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.736291766 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.735249651 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.735960897 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.735347411 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.736194221 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.73550428 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.735751585 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.735624264 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.73563623 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.736446763 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.734404099 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.735252263 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.735601319 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.735446416 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.73625052 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.73573218 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.736131882 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.735083766 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.735644818 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.736509255 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.735440366 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.736674695 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.736289546 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.736343435 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.736815348 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.735651878 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.736704625 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.736008472 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.736205956 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.73619519 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.736303781 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.736135984 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.736771348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.737189205 seconds)
  done (took 126.608972964 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.736803703 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.735794054 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.734967575 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735093307 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735175162 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.736243572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.734771279 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736981598 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734981541 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.737935704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737003479 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.736009662 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734875732 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.738486969 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736957131 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.736011407 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.738293399 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735436292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.738349054 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.738052529 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737891147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.736057188 seconds)
  done (took 39.859450885 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738366476 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739634818 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.736274609 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.738418957 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.736078952 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.737653702 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.737355853 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.737260438 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737570875 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73582103 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735836505 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738114545 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.735872825 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736016494 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735948571 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.736345538 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738454543 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.736185069 seconds)
  done (took 32.926299415 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.735671196 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.736378025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.737605445 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735780043 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.736689778 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.738601763 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737073971 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.739779107 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.739031064 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.737208905 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.738541982 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738698521 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.739766853 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736805616 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738940883 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.737059096 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.739930213 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737339183 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74008363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737298483 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.737694756 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.739863292 seconds)
  done (took 39.895456821 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739768527 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.740595882 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.738377643 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.73760556 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.737617907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.739370835 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.740026306 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.737922046 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.739799566 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.739021389 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737894851 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.740117593 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.738449485 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.740146286 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.738286802 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737930959 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.741597137 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738679644 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740790621 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.738553938 seconds)
  done (took 36.443013029 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740853781 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741422805 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.742330599 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741240238 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74210553 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.741451947 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741111455 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.742413198 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741651335 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.742696974 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.741315612 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.742522213 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741864249 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.742323831 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.742084455 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741407945 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.742875931 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742052582 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.741703596 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742215161 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741801396 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743131477 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.742438464 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742291814 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.742510731 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742975499 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74240268 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.742785227 seconds)
  done (took 50.440394577 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74119548 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.741705372 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.739618859 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.739838096 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.740203279 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.738476363 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.739542428 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.739894388 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.742612097 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739480367 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.743408521 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.742603356 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742550454 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.743111721 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.74212321 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.743043827 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743419362 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.740634561 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740183512 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740566507 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.742751685 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74325266 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.743344263 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741357592 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740956312 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.742435451 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741609083 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741667634 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742525146 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.741641597 seconds)
  done (took 53.908202272 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.7658425 seconds)
    (2/2) benchmarking "in"...
    done (took 1.761718834 seconds)
  done (took 5.191628902 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.741358949 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743358908 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.744264343 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.740886495 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740788314 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.743579739 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.74317413 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741054456 seconds)
  done (took 15.60202002 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.746256883 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.744994454 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.74376069 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.744148104 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.744507372 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.745980192 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753011474 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.745068228 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.747341107 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.745841939 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.753799446 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.754153252 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.749750375 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747466812 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.746904787 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.748763508 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.744040981 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.744914819 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.745045971 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.744738513 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744696447 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75068499 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750524153 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.74271971 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.748549386 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.758541558 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.751694496 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.746287879 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.747107928 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.752150045 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.747740049 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.745443587 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.746584852 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.744684542 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.746085479 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.746477652 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756887515 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748911626 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.75466675 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746970457 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746810801 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.744078249 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.749773831 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.749843654 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.749907571 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.746610879 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.746039145 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.744808905 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.747660558 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.753346832 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.752618658 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747874882 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.74383066 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.754036823 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.750924223 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756118978 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.748065848 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.753022864 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.759411128 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.759981551 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.762591693 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.75852664 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.751223358 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.748327714 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.760639217 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.774138196 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.756919046 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.746471859 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.745109931 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.747149133 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.757121804 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.76343232 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.75990033 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.748269377 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748125621 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.747535627 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.750925573 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.748350401 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757289159 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.754334425 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.748808088 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748735709 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.76130379 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774992817 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.749610754 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.7483036 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.748964397 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.749646378 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.751064089 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763354187 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.75072312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.748752781 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.750504306 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.750513582 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.751155058 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.75019544 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.749688272 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751006539 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.74660467 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.749571049 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74984392 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755748782 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.760923887 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.75112685 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.749318318 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.757667692 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.749447809 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.750135051 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.758272897 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749539013 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.750552988 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.751931733 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.758839381 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.747714539 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.75613083 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.759970368 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.750199209 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.754324115 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.750194555 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.749933718 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763043635 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.780059853 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.750080926 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.749684693 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.757942165 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.763022101 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750142068 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.75593768 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.7505374 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.748624162 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.748450035 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.754953222 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.74996223 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.753306602 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7505007 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752702249 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.751091687 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.750466244 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.750900689 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.754077361 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.752772825 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.753177732 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.754737407 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.756444187 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.75301312 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.755434085 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.760746872 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.752811615 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.756252745 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.754949966 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.749467153 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751872693 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.755023546 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.752581635 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.753062347 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.752535556 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.753888592 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.75188615 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.751715909 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.751614207 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.75202984 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.754374081 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759354868 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.753346507 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.75773755 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.753264504 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.749847658 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.75244586 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.752456866 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.753656249 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.752880909 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.753010005 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.759324705 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.761364965 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.752846888 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.752880251 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.758489325 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753333745 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.752575326 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754043913 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.758539675 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.763464286 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.753345331 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.761750128 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.753418274 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75477194 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.753359587 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.755436884 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.754859129 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.753917282 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.760471179 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.761357329 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768761036 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765141338 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.756192353 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.758459631 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.757031542 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.757895708 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.760387707 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.753903873 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.754101523 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754407165 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756576155 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754034901 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.757766564 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.755236995 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.754503669 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.755449558 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.753851284 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.75515128 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754643651 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.757548076 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.75702878 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.752512823 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755625023 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.755496311 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.757138289 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.753630256 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.755184376 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.755789297 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.755253341 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.757816709 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.764603124 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.752913298 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.759178479 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758687406 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.757399566 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.755396684 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.755193107 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759606266 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.75779055 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764204901 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.758432643 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.758406683 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765614261 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.75814268 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.756428213 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.761325558 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.755819687 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.755390105 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.761393306 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.764711806 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.755697104 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.756309695 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.756578089 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757828639 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755378 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.764599528 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.754009282 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.756587396 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.757439223 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.758593344 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.754693115 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.760770117 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.759209897 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.758793136 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.762419524 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757016522 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.756999724 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759777566 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.756691989 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.757411033 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.756932069 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.764323792 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.765680459 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.763804159 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.758385207 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.76069355 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.760634582 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.761939755 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.759368431 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.759703551 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.759402623 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772589714 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.767107209 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766840617 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.762529753 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.757387567 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766143616 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.761001779 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.763317751 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759760832 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.759672551 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.759761779 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.759209899 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.754997366 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.760342614 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.757548362 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.761565594 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.762315511 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.761802876 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.758258993 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.759426713 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.75842 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.759603909 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.757991857 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.75953 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.758432771 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.762382283 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.762629287 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.759360225 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.760185016 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767838271 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.76052004 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.762135005 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.760489444 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.760908818 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.759122242 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.764902977 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.759158279 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.765316033 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.768735965 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.765821173 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.771657405 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.763914565 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772300079 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.760279719 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.76593166 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.769211177 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.757250661 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.759270111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.760242235 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.759440848 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768770715 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.760884649 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.761540997 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.765078797 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.760707192 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.760893527 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.759790593 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.760826974 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.759803358 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.760838017 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.770534327 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.76451178 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.76638263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765417711 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.759121062 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.7601439 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.761309149 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.761015755 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767161087 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.761228207 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.763416291 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.762242352 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.762129833 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.760533193 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.760899503 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.761820481 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.75856784 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.761165276 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770819526 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.763509391 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.765675682 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.761471127 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.771617481 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.762258385 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.771092494 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.76318685 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.765798812 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.762194222 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.761525407 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.76389071 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.762880354 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.764344778 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.762001176 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.764046154 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.766009365 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.761558291 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.766275228 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.765028503 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.762517523 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.764429695 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.775804332 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787340808 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.766031698 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766930156 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.762141613 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.766664373 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.767907587 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.763591674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.763846394 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.769453631 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.777121351 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.771540036 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.765138988 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.763306088 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.765814793 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.763956726 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.762520963 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.763902421 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.764238451 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.76456889 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.76505706 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.76445492 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.770527346 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.763575961 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.766289897 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767444512 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.765630856 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.777434895 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.764995652 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.766317237 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764446908 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.762758716 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.766021091 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.765757413 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.764751104 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765939237 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763824445 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.768324992 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.775192568 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.772186704 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.769467506 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.766002255 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.765069033 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.766453032 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.766692909 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.765278445 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.765427588 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764882315 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.767938679 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.763900191 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.766780691 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.764725237 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.764887563 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.766705087 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765593694 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.771244393 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.775822281 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767998592 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.762778052 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.765759601 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.766436161 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.766959552 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.767347955 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.776533971 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.772495134 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.780000996 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.776918961 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.76953774 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.769351166 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771714621 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.776019733 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.765955325 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.76979737 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.766185093 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.769200101 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.767855051 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.772648467 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.767079848 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.775756641 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.768243461 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.767915374 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.77748514 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.770485323 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.766916326 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.770034344 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.773045018 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.768257943 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.76393969 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.766110209 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.76827027 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775902717 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.770322043 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768023445 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.770774511 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.766961671 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.770497746 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.771053682 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766813003 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.769656769 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.765056301 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.77120439 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767938482 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.766969088 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.765248215 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.767686472 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.768565101 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.774009372 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.776562428 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.766304675 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.772262353 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.769702914 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.769094469 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76842967 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767680889 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.767593611 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.765106504 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.76826484 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.768261687 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.769574345 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.773790877 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.7692503 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.770093393 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.771201761 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769697688 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.77477597 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.782091769 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.776228772 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.766241422 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.770238144 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.769906871 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.774533152 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.76885438 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.770532148 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.771110907 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.771645921 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.768296297 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768963314 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.769316703 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.775598516 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787269107 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.769952043 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.771067741 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.772032781 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775618862 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.769494329 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.766879356 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.768940082 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.773977902 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.775446611 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.778308043 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.770729666 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.778554196 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.771627106 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.772626611 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.773860502 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.777865829 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.779347369 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.7756584 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.770206237 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.769830396 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.77732546 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.789134582 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.770918994 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783548167 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80300303 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.771857393 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.771703239 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.769866487 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.771621916 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.769933357 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.773367752 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.771588392 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.769877033 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772389876 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.771726042 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.773662539 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.779617494 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.775194926 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.771713679 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.77146413 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.772211 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.773996426 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.770178635 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.772638653 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.7709397 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.772955005 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.771948753 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.77211508 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.773731244 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.78604623 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.783290372 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.771522057 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.772632053 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.769852744 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.778044928 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.778287305 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78560154 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.78010036 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.772522598 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.771680026 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.775829998 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771841218 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.769804438 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.774289911 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.774218121 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773743992 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.77177343 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.787127478 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781948063 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.779654744 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.773630362 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.772528735 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.77244484 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775271356 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773242926 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.773460085 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.775991678 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.77578574 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77772121 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.773449725 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.773127122 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.779175093 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.782807753 seconds)
  done (took 1051.781202012 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.771477867 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771230445 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.771423164 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771772842 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771496527 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771060855 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770537637 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771735333 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.771537857 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.77090361 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.771603613 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771926476 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.771328136 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771606136 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77172835 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771065599 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771471298 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772312205 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771430567 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772194556 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.772662676 seconds)
  done (took 38.895286617 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.774241444 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.772317519 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.772680636 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.774909108 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773129962 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.774248992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.772356909 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774053911 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.774187476 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772472115 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.773914736 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775576841 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.772572732 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.77189805 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773971337 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775519829 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.774353967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773392103 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.774528301 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.772667856 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774847379 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773708267 seconds)
  done (took 40.714845019 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.774638773 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.775658769 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.776213546 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.773302147 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.775949978 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.772768618 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.776137586 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.775390761 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.775969329 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.777356957 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.775864207 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.778833054 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.785688485 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.782142846 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.780041149 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.776286991 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.925071702 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.775923926 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.775952171 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.775940154 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.775091965 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.78423945 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.77340898 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.774347718 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.77602747 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.776855991 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.773878325 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.775433075 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.775535824 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.777455171 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.780027441 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.775314364 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.776344724 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.779246911 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.774941635 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.776206967 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.779473881 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.774503191 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.77150829 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.773854754 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.787821641 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.797002163 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.775461235 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.783339635 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.774414935 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.773911363 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.780163428 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.782392499 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.772803578 seconds)
  done (took 88.932003588 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.773650206 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.774280836 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.772098315 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.775197445 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.76935839 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.769838623 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.769547765 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.76936977 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.76705411 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.768682402 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.766865811 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.764207442 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.764203623 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.76694541 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.765839341 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.764562204 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.762996229 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.763258659 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.763167195 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.763124867 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.763665093 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.765017145 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.766497251 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.764208635 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.764979308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.763223761 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.76366004 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.767389646 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.764048437 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.763848342 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.76559094 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.766205506 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.765891348 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.764782878 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.76236962 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.76493967 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.765040271 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.762695002 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.765327573 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.763283078 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.765553012 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.765538476 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.766427284 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.76621173 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.764178549 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.764400861 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.764024741 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.763869266 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.764924341 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.76696413 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.766338796 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.764594138 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.766213027 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.764431436 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.767215343 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.766455642 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.764157694 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.764242144 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.76677504 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.765129979 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.764861002 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.766228647 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.764773473 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.765998395 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.766122789 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.764382612 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.765705304 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.765898368 seconds)
  done (took 121.773805085 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.766633061 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.766807364 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768106935 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766916944 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.766939469 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.767554966 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767797934 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.76687209 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.767971062 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.767338442 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76683412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.767462846 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.767523281 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.766859445 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.768072574 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768394883 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.767656622 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.767525074 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.766779069 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768636559 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.76899287 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.767731875 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.768141564 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.768990406 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.767965305 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768620633 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.768107307 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.767664462 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.767927913 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.768184652 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.767719692 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.768502698 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.767265449 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.76745011 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.769034505 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.767321179 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.769182135 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766976444 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.766563145 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.766596727 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.766600769 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.766314103 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.766484743 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.764414 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.765694936 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.764614189 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.764853808 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.765083711 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.761446178 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761253451 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.760171118 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760468686 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761004545 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.761644394 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.760562141 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.760451764 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760554572 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76001144 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760186094 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.760850896 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.760533533 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.760801021 seconds)
  done (took 111.169382327 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760170868 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760100929 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.758604239 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.756936585 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.759593899 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.757811333 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.758898724 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.76015127 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.759675234 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.7598586 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760437457 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758371342 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759159221 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76139546 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.758008953 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759429066 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758788404 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.758235621 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7607841 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758237766 seconds)
  done (took 36.86401961 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.759283306 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.75954089 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.75700723 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757156122 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.75928558 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.75713539 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.759300208 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759190814 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757583559 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759804507 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75990812 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.760783985 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758213505 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757616319 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.760119836 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.757437778 seconds)
  done (took 29.817196197 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.758023 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.760453321 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.760279777 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.76031144 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.75828221 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.758895421 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.760931385 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.759083462 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.75799805 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.761295094 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.760142391 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.761441034 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.761788721 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.760287843 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.758860292 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.761442153 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.757172755 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.757520334 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.75979339 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.761225747 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.758819835 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.758475135 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.760299463 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.759759189 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.756770748 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.757968924 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.75858636 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.755743292 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.756084503 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.759673168 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.755968681 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.755717883 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.756962579 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.75519719 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.757371338 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.756009998 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.758055631 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.757445718 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.758164655 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.756962894 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.75746593 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.756344796 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.75792541 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.758027028 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.754780119 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.756092977 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.755186406 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.754137816 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.754353646 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.755321242 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.754909886 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.756832333 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.756148834 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.756195808 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.75542562 seconds)
  done (took 98.365717963 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753486184 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.754762862 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.75115121 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.753991276 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.754334912 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.752516413 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.753120744 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.751101252 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750741273 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.753012001 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.752948304 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.752916286 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750918955 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.753256478 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.751388383 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753112807 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.750877924 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.750865856 seconds)
  done (took 33.219486642 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.751044236 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.7512704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.753551227 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.75542958 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.750668802 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752801636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750229634 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.752768369 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753418171 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.750768814 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750867556 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.752860842 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753234615 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.7551714 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.751910556 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75046165 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.752672991 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752558432 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.750789595 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749544824 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.754382649 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752925809 seconds)
  done (took 40.22174077 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.756501594 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.753584152 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.769813708 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.773561116 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.775521505 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.785775579 seconds)
  done (took 12.286899091 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750040065 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753914377 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.750814425 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75224066 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752224988 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750405819 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750382473 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750872058 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751867174 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749866289 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75173771 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752695352 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752059252 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750160389 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751640265 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751583606 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749983463 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749433716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749877479 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751116619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748949429 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751846057 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749698273 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749311823 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750141843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749373625 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751019106 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749122657 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749706132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750772253 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752292686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749324838 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751787265 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749154969 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751862218 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751806232 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749791531 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751116037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751067342 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749983093 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.751403448 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752564896 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751299446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749036094 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751606372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750420186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748975731 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749436686 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7489256 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750956797 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749833947 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748974298 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750456293 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750763846 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749830791 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750595918 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748379967 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748569758 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751866297 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749177102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748438771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750443414 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747792046 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749026753 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750699429 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748329416 seconds)
  done (took 117.201635553 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747921669 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748104668 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747722347 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750424926 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749101663 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748108736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74799872 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74822204 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748621761 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74921168 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750215758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747869422 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747773526 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748922939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74843583 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747789324 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748157992 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748716252 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748342621 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750017087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749888663 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748207204 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74772288 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747845926 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748843425 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749776053 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749176546 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748255698 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7479882 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748520516 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748449462 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749153808 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747656348 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.74799623 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747765352 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748025293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748343017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74911704 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747595989 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749743864 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748946098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750325938 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747821872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749325667 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74770484 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747382027 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748887762 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747630729 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747617957 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750170478 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748964903 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746961407 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748057152 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747542559 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749306319 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747402465 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747263818 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747511716 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748033598 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74971935 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748601123 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746505793 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748856033 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746681529 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746813297 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.746624169 seconds)
  done (took 117.064604456 seconds)
done (took 2437.617093027 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.827573866 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.776654588 seconds)
  done (took 15.270841452 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.912164106 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.867058728 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.750951932 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.763962443 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.75027931 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.769083517 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.759201809 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.750358354 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.749654813 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.751905811 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.747946751 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.934650072 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.772396374 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.749461902 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.749740174 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.842009566 seconds)
  done (took 50.292567449 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.753581186 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.752613898 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.765198237 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.754976155 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.753678393 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.765653131 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.788573293 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.756584746 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.786870297 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.768317073 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.822360423 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.764983571 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.752568425 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.802228131 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.767715708 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.768196867 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.850485933 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.831519473 seconds)
  done (took 33.672682402 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.833834361 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.762389577 seconds)
  done (took 10.270746581 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.743315715 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.772118307 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.807765688 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.748346482 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.747447319 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.781235359 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.791356113 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.796623724 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.756501135 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.783407439 seconds)
  done (took 69.40058441 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.75786448 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.753285777 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.752997392 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.75092594 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.744837504 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.753171743 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.750298625 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.747469115 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.421039858 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.791342773 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.762580058 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.757121691 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.753381381 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.754217586 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.749080051 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.776488723 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.896122978 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.749321491 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.748874904 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.760123926 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.752877645 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.814019354 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.770221052 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.756422535 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.786441819 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.429023721 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.766747012 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.759059702 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.892492639 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.75055122 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.753716434 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.754286517 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.756983927 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.116644154 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.099996812 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.756796047 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.767287558 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.762075526 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.750125765 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.89325986 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.753849922 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.760051163 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.331075919 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.075473431 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.833898079 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.798088933 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.119162237 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.77524152 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.755026812 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.7854679 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.760942786 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.755712084 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.767643376 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.228042936 seconds)
  done (took 125.988490998 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.749888303 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.11093697 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926120709 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.75213548 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035831956 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974198472 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.749802155 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.799213815 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.752564391 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.020905716 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003681214 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85916355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.748382325 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.745557568 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.749848933 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.746718393 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.919548063 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.824839253 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.749572971 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.747727955 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.783622309 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.021416012 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.889651022 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.751174839 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.777003713 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.962970263 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.885753365 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.855974547 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.55387346 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.746435668 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814660208 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.75057412 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.746603197 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.748350823 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.910624638 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.845840618 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836909998 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.751004648 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.746301568 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.746677176 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.415860045 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964099414 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.849084541 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.894084648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.011846529 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.976191798 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.651462651 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.748421641 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.58382136 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.930381134 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.979816912 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.02538342 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.886405033 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.750813947 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.203784818 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.748322005 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.7470347 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.002667666 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.98367355 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.850841135 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.753420116 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.749202418 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.749137187 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.995075143 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.751860843 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.849034483 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.752461073 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.750303552 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.849758054 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851817359 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.991531797 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980483834 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.784932202 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.315978547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.498706998 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033933675 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.819437485 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003866286 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.752159912 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.749255487 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833082019 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.792374267 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.006811722 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.001420174 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.028630673 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793191465 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.567864388 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.748749502 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.004238604 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001620256 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.03120049 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004975984 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.993001975 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.177925142 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.752319991 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.7511526 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.329649204 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.891364974 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.754603987 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.10797509 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983946458 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.348647773 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.781951176 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.058811033 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.898643462 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.754340568 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.388202009 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.753058554 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.003947813 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.799344044 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.753567334 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.751691203 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.006168682 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.804814234 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.751998114 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.587549233 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.819234505 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.755726037 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.02403602 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.755454345 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045921792 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.756176228 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987378923 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.246148426 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.786129925 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.944245166 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.006158278 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.754391341 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.999338918 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998731017 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.885295171 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993878202 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.517016358 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.754818223 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040522751 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.755311411 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.752403584 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.925021451 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.752969949 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.909185638 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.754251328 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069377125 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779554046 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991294643 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.755390845 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.058112371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.789296612 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.807064974 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.756904022 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.884759571 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.753546374 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.609550487 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.927860993 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.753426671 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.753290605 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.494140101 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.755122244 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905330195 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.985047171 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779741427 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832286139 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.524999821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.752757076 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.842525932 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.780948326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.153016226 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.754329261 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.008313356 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.756648549 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.754114358 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.753745585 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.994835293 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.959103618 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.755234702 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.753615561 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.728500588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.753675953 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.753434285 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.939159644 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.172947289 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.753692497 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959645836 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.757135921 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.898877519 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.757799762 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.046894783 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.105297542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.755747371 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.754641109 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.753372926 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.758775908 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.753375557 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.395873321 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.788992708 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.283131352 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.896551997 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050418666 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.073930776 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.028667742 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.806201931 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.757919913 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.013605055 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.757803551 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.823757546 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.757376768 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.779144596 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987216354 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.757227707 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.019823426 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.065026024 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.791621819 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.807105582 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.757296204 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.756512207 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.756288908 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.92562814 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.845046676 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.758132727 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.756402066 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.8819168 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.894603085 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.966738391 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.75677467 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.252597951 seconds)
  done (took 881.21601372 seconds)
done (took 1187.782655496 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.756931003 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.755907845 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.745507154 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.763942087 seconds)
  done (took 28.703361358 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.764904696 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.761673404 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.7625538 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.761108786 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.763195942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.761593089 seconds)
  done (took 12.255843668 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.766977376 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.7582857 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.75948052 seconds)
  done (took 20.967052912 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.835379144 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.149461419 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.902129459 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.182314546 seconds)
  done (took 9.751377324 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.763342308 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.764280784 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.763670159 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.766258361 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.767125859 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.766452397 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.765004138 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.76560733 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.767212424 seconds)
  done (took 17.572128985 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.79631668 seconds)
done (took 94.726664107 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.484706198 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.768883581 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.943220286 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.842993865 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.903251896 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.909945127 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.985390721 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.181806514 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.759431797 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.870767577 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.86082406 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.85385927 seconds)
    (13/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.455002856 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.758898354 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.178087448 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.777401158 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.652658302 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.089779218 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.680689101 seconds)
    (20/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.061593466 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.954104618 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.948177794 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.038516569 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.822018599 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.286913965 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.124521421 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.799135519 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.613141361 seconds)
    (29/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.950169899 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.792836462 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.756090535 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.082444873 seconds)
    (33/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.220751835 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.776193957 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.867535734 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.774514945 seconds)
    (37/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.892384316 seconds)
    (38/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.054766454 seconds)
    (39/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.858004042 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.957718162 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.68115959 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.775919726 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.984328337 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.022887637 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.777125685 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.166782524 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.897818356 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.689394931 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.859598042 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.771732825 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.040566756 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.204217014 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.955939465 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 2.254131689 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.702530102 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.975497853 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.778388375 seconds)
    (58/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.342256883 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.23866639 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.762426879 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.846256064 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.650075254 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.896454878 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 5.604175624 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.803440142 seconds)
    (66/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.009018525 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.071657616 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.883471294 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.77552684 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.10492996 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.853076693 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.0355183 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.776521287 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 3.574934186 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.797201091 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.789050486 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.772689542 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.369101395 seconds)
    (79/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.806807989 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.874591185 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.777892742 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.786811634 seconds)
    (83/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.454030212 seconds)
    (84/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.908460315 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.205908657 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.76075511 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.36758901 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.978730834 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.79640049 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.773544694 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.095893888 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.761045461 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.892582441 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.345573969 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.236896354 seconds)
    (96/309) benchmarking ("sort", Int8, false)...
    done (took 4.687970091 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.931775033 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.101878304 seconds)
    (99/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.922680832 seconds)
    (100/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.158093175 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.68188039 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.884013937 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.872322759 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.152574119 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.07724988 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.779089019 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866398374 seconds)
    (108/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.8585801 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.907778963 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.774243096 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.608203311 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.780865426 seconds)
    (113/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.066733022 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.763757816 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.797442422 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.640146336 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.796592068 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.861110832 seconds)
    (119/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.002183007 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.783686495 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.001158511 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.856535792 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.799520284 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.760483273 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.107354886 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.800641236 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.759487342 seconds)
    (128/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.599664561 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.611749994 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.148334574 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.233864683 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.779273043 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.85555837 seconds)
    (134/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.076073482 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.917605289 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.806518673 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.774274279 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.532891868 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.887845249 seconds)
    (140/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.798830425 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.81447278 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.012820455 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.870625673 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.909516335 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.124464098 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.204259318 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.1334571 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.812863493 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.647640187 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.920638357 seconds)
    (151/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.868812357 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.882522614 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.215871873 seconds)
    (154/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.280890087 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.212250478 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.891396899 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.603816742 seconds)
    (158/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.91174112 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.880730655 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.983384154 seconds)
    (161/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.216397357 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.916714536 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.793912371 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.775665002 seconds)
    (165/309) benchmarking ("sort", Float64, false)...
    done (took 7.185205955 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.227264197 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.960092451 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.77880633 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.778885211 seconds)
    (170/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.795214781 seconds)
    (171/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.850984217 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.77554687 seconds)
    (173/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.791712105 seconds)
    (174/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.861338996 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.864191269 seconds)
    (176/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.215506933 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.694304557 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.781553321 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.798044593 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.777019886 seconds)
    (181/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.162319957 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.141962405 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.867812906 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.777376479 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.157683832 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.98096173 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.441988023 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.8045605 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.653298628 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.779974176 seconds)
    (191/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.503183135 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.990665718 seconds)
    (193/309) benchmarking ("sort", Float32, false)...
    done (took 5.66455983 seconds)
    (194/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.131258223 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.598950571 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.885187915 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.891217325 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.947099668 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.091359706 seconds)
    (200/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.092068196 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.783985996 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.192483814 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.493851469 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.889202552 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.099267806 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.846538776 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.690000477 seconds)
    (208/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.812685625 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.935589464 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.118000464 seconds)
    (211/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.791028123 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.794740549 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.762666853 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.40048532 seconds)
    (215/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.55198239 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.924139144 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.769549926 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.482752998 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.995744091 seconds)
    (220/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.103788215 seconds)
    (221/309) benchmarking ("sort", BigInt, false)...
    done (took 6.784664331 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.783640125 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.236845553 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.662795429 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.99863302 seconds)
    (226/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.01748019 seconds)
    (227/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.768077959 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.830864134 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.773454687 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.162817451 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.82684615 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.830216934 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.805175352 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.091119576 seconds)
    (235/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.908330624 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.170275396 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.770016229 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.075145783 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.829189023 seconds)
    (240/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.86247899 seconds)
    (241/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.158123681 seconds)
    (242/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.872310882 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.218223708 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.804472553 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.922532991 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.765651801 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.185501398 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.007939618 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.812663403 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.91126403 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.875753875 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.921519381 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.780579572 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.100955398 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.125529534 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.796071864 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.78871872 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.560221396 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.053561387 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.785123027 seconds)
    (261/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.808423161 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.915282269 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.014433505 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.147167016 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.764937592 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.892802816 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.050338034 seconds)
    (268/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.155400903 seconds)
    (269/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.767790311 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.325402293 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.939097365 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.78841285 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.087322848 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.455820645 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.793414758 seconds)
    (276/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.96515537 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.906505297 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.924571704 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.780669845 seconds)
    (280/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.325030207 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.969593692 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.026555035 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.005870672 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.292866444 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.925469104 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.226806419 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.489741319 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.881876495 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.868393731 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.969342527 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.929235395 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.623103531 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.155528981 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.770955827 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.826967257 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.797434504 seconds)
    (297/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.799864028 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.814041255 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.807194389 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.803995515 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.101527288 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.116393129 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.734996911 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.91163286 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.000424729 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.069171992 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.785569649 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.562252342 seconds)
    (309/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.133283195 seconds)
  done (took 982.35561303 seconds)
done (took 984.328330719 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.817636994 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811272663 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.792208598 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.812863999 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.916843873 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.820434786 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.803972322 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.794071225 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.818183831 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.820063615 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.790424932 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.818996948 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.794912062 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.793214781 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.790988157 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.809008454 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.10999527 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.82581566 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.810619929 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.80211252 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.810347889 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.79179383 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.82154045 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.820989426 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.795351179 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.794900201 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.796530763 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.813747112 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.917186968 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.797100788 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.794831965 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.805865539 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.109096355 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.824655404 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.789589976 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.814069895 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.804554696 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.802447351 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.797239446 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.826721774 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.199573951 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.834765763 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.795453179 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.793888985 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.794757226 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.797950974 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.795737357 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.801167574 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.810382053 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.814018105 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.195660708 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.856098598 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.804483104 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.798579915 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.809096439 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.800172698 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.805626133 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.816999448 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.820172093 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.817342312 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.101104161 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.834861291 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.801966243 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.816316395 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.80816491 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.231553738 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.83853939 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.802359249 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.20340277 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.84673875 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.232074794 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.851426276 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.800055153 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.814323671 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.831301486 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.116710199 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.829257346 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.799578461 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.807903414 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.797626567 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.809627946 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.815312268 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.805529378 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.7995467 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.816099849 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.828437085 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.811326964 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.802165444 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.809173086 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.820720317 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.80907114 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.811548695 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.803172624 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.796835496 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.810058008 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.807759578 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.804100574 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.803289916 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.805944136 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.812462782 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.202635361 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863948298 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.797964319 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.79853618 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.801780059 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.815889351 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.203166864 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.845465871 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.823775175 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.829070372 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.805237079 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.102324474 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.837932772 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820562283 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.811567319 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.804578326 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.797370068 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.103603832 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.230645295 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.861652469 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.804068489 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.800359756 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.820345699 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.805120216 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.797966623 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.120319325 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.835713404 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.818866052 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.924376827 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.81267688 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.8353522 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.80005497 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.805501927 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.834512635 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.819777514 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.834865916 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.806961679 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.819665968 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.820554564 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.799916645 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.815612248 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.814514068 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.805543342 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.810190516 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.79799019 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.83586503 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.817903593 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.819199441 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.823646644 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.925631532 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.800911565 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.104909264 seconds)
done (took 283.155349823 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.878862708 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.797352941 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.905219429 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.80073891 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.889161401 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.893781581 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.799112574 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.799070851 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.798213248 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.191406933 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.799513364 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.799433288 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.798389852 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.799570416 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.889309948 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.801679762 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.79953055 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.154041501 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.802921293 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.882680284 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.801648877 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.79982841 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.801314291 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.20375445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.796027147 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.802082825 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.883461436 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.802315298 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.16300082 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.800318374 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.796967807 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.163042166 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.902345594 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.82148122 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.811768495 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.809571915 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.891360055 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.806739456 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.888351466 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.887768083 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.907284568 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.84217955 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.799476347 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.800270767 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.805966624 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.803419185 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.800552013 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.832666546 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.805434418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.800486271 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.161450081 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.812497636 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.801860823 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.800829071 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.80078947 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.834026413 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.801115618 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.805082629 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.902805059 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.805040569 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.870398225 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.260852758 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.195315773 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.803814068 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.803556564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.802015804 seconds)
  done (took 180.090588748 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.875384612 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.876919751 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.871189354 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.809908357 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.853282768 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.874439776 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.809340184 seconds)
  done (took 14.689793471 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.811271353 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.803727652 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.859661874 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.859925382 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.804828073 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.970475014 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.80471823 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.817893371 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.801745508 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.859967995 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.806822082 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.80580438 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.812040645 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.800384346 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.860279889 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.817833192 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.923556315 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.8072005 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.804504473 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.956514018 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.803658353 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.812127095 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.84049742 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.816507989 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.804510903 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.812041171 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.435020669 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.804688284 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.802758499 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.806574343 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.802745298 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.856944823 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.805265322 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.799982716 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.802742134 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.926574609 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.805330246 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.803457195 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.805061964 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.802327548 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.804755362 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.806044634 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.806524508 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.80280096 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.805652512 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.830173782 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.805931261 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.80667809 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.806141725 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.806399786 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.841464731 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.805563286 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.803932403 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.804741743 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.864103472 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.813057474 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.807534131 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.803818659 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.807473866 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803389566 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.95823741 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.861127104 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.806498821 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.86224429 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.807245457 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.807474291 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.80727426 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.806124437 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.9043322 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.806270387 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.86036116 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.80447413 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.974667741 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.83041982 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.808087251 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.810136652 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.81138886 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.80691229 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.807692185 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.815432954 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.804884764 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.809184038 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.814442993 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.806194248 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.805216087 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.944581941 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.921269635 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.805409229 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.821279429 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.815995929 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.805026446 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.843395245 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.807385936 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.805976376 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.86828878 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.927227453 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.866435872 seconds)
  done (took 199.726378275 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.814136891 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.818159529 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.811081962 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.826887423 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.81026687 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.809354644 seconds)
  done (took 12.614641964 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.812307888 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.810336823 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.809356821 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.809284981 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.809147859 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.810952498 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.809652099 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.811675142 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.812815642 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.809714241 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.809219547 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.812386262 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.811046941 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.810244033 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.810158652 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.808783786 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.811996257 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.806091167 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.808857922 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.809179354 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.965432996 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.810596025 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.81002043 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.815185172 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.813810873 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.809275498 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823452906 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.811265923 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.810008307 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.819530373 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.813999378 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.810773411 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.81547636 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.816981898 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.814417452 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.815600853 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.813787333 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.811824558 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.809881002 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.811282289 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.812446085 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.811371065 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.812098923 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.816349294 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.814527292 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.82047079 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.817220639 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.821564897 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.812059426 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.815144904 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.814039913 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.810587915 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.81283233 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.814533052 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.819409402 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820304983 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.817372087 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.812327845 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.812122513 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.817386522 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.813692603 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.812361146 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.814552231 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.816232052 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.809390801 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.815513208 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.81799541 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.816316865 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.812996232 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.812234879 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.814149928 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.811182602 seconds)
  done (took 133.423566753 seconds)
done (took 542.281381461 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.101977534 seconds)
  done (took 8.829757772 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.916878916 seconds)
  done (took 8.701466117 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.309653972 seconds)
  done (took 10.041410471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.834666194 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.854254667 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.822430651 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.807305098 seconds)
  done (took 29.074573115 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.133332723 seconds)
  done (took 8.862186987 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.829855521 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.806203098 seconds)
  done (took 15.397304534 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.835303559 seconds)
  done (took 8.56444034 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.892883992 seconds)
  done (took 8.643522182 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.811215161 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.820967004 seconds)
  done (took 15.385995426 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.792534286 seconds)
  done (took 8.521086937 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.91538197 seconds)
  done (took 9.740089203 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.827833161 seconds)
  done (took 8.62542347 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.827713542 seconds)
  done (took 8.556692986 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.854969886 seconds)
  done (took 8.582758746 seconds)
done (took 159.255204374 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.811527081 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.808478864 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.808087367 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.809485863 seconds)
  done (took 28.966493826 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.846293065 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.846813092 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.847386399 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.858533856 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.84932653 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.846497547 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.838423113 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.838923312 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.858066421 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.851464818 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.849615495 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.852529013 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.845946851 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.839986406 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.851083405 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.848866496 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.856711798 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.848575742 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.839209565 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.851010505 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.814388631 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.857843763 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.850192749 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.815023425 seconds)
  done (took 46.031842971 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.035475195 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.885092111 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.983632342 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.867047845 seconds)
  done (took 9.501003714 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.867009916 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.867276163 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.878835 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.925683593 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.99413051 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.87720454 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.84106331 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.835294491 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.821962342 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.867474491 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.957288106 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.862216326 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.022265265 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.814750971 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.064013535 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.8148482 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.815835997 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.866746105 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.921744148 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.98443918 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.816376301 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.869021017 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.870343195 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.863872924 seconds)
  done (took 47.050975226 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.814275724 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.822606012 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.820955187 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.815032016 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.814814532 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.814733533 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.821194646 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.817297997 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.832588807 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.815974564 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.814647589 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.813838441 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.81514173 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.816549663 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.815221282 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.823202054 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.82439732 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.815618509 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.821826977 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.821247604 seconds)
  done (took 38.103549725 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.810233978 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.662848064 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.162467157 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.066811438 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.812269578 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.810834125 seconds)
  done (took 31.058680787 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.832073034 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.823552138 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.81924924 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.876428703 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.960043653 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.824434682 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.816933347 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.830409974 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.86805649 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.883345232 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.839200917 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.848996663 seconds)
  done (took 23.956446747 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.815900563 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.818321825 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.816190096 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.83241762 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.829187319 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.82563832 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.826218796 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.812610347 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.832295965 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.838452328 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.825820379 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.829961427 seconds)
  done (took 43.640666636 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892737507 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.699966018 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281660588 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207501263 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814930452 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02183434 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.813156771 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902891011 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.814917059 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085795393 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.203693851 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026066753 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065203941 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.556240891 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.818722941 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.292144475 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122544626 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033921716 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841061002 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566814302 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941491892 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.174305314 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.587727106 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.930675059 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024163943 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.814721358 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.074928543 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.813924798 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866295198 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822643151 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821561957 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.815217674 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088733095 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945559717 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950707757 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822355243 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.226718717 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.816025937 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.806118362 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.566622992 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.392513895 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937012928 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8230835 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815033213 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.747642214 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.192167576 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915613496 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.819666555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.516551825 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.815316631 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824998153 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892525336 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.818481511 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.81474252 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44496 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.817613434 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.813655145 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822078613 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526631988 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883369545 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287709217 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.756108604 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.92011101 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576919646 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283268099 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.976262676 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.81874851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820133702 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748236319 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.57397465 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936089644 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.142159807 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.845137495 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294267643 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119196659 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.255356271 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877236941 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090954034 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.605868029 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.757795225 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047330244 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334406007 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748308883 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.771293669 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748407656 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032697166 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853691611 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.701115319 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85958753 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.904071041 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.827374159 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834458117 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832088301 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039033224 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.657050473 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816767126 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.136906953 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090226519 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838103434 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.909183368 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750549775 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.821090057 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071197909 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.026984859 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.946563486 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.311873715 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915481496 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762389864 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.835980775 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.577902826 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.83475377 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.095552194 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884308493 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882074289 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944597893 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.81795038 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067760573 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784725587 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.921670822 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.203833746 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066041002 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.151763051 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845005203 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962554645 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831400485 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.818292339 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.683716038 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917809416 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.819520443 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.818171164 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.181989308 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.83354203 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.820031745 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752197553 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.442716755 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.205304995 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.469127401 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040638515 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.779535665 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101894611 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751678341 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146532571 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.952356813 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.040441983 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.467635774 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.902693975 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074693972 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945566586 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.968317914 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83537396 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836093091 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958789663 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84065511 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.255678335 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.077897461 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.822768828 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.823517833 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.673959568 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918375887 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823733089 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.824216905 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.35234741 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102062335 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.853238042 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.824429272 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.707305509 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.833645377 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965006815 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825931632 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.829719203 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.425380799 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257325349 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.828359564 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.493192668 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050430159 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830060887 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.603206572 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007583821 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.840534777 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100071157 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889518981 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.755032565 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.523768605 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.528321527 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822475217 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755072859 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.824790309 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829676814 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830994996 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.129202505 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104097506 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87505154 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.581740931 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.933245869 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832374353 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.826567797 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822039282 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.394306502 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90286206 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310439219 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.834526366 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959105066 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.834811352 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.756482645 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.825249247 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826778757 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.82246572 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.822872929 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896901455 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.601542177 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036175238 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078511849 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.222563327 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836771494 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.60796075 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.945792226 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.897086369 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.144551499 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318872462 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.832334859 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89341846 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.833006254 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.585540522 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921691492 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.534922237 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122018309 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150872755 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180478037 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.319178232 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368765091 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915254394 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755028843 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.824530584 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888562123 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.919328493 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767832018 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844625639 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.473805733 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187268995 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838167206 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056536406 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120523807 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.23039278 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96657244 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035227278 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894885698 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.458699606 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869643768 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.672757085 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847928263 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.310488379 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033963916 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914097748 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.154655424 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.946339501 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.826681182 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171174959 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867264394 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.826437525 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.825777031 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.072917676 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.321853896 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059358996 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.828840062 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.827135365 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186636359 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.89332766 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.94957314 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759644555 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836541335 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.835466403 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.826088218 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.839071357 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.686631731 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.07872307 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835644057 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758177462 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.842195931 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198705012 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.810150405 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.832005013 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827280772 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077755149 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.503454267 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981748367 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.13443083 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.452992248 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833258023 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.759540323 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759490043 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.53444994 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.828231702 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.799641096 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041336173 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.938495299 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.453611389 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.064692862 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156213937 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.080450055 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.842010502 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105280047 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122460149 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.247450112 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851575579 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.927465964 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.163638599 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.93639659 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371122007 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.061295302 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363639092 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052353929 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294345346 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.18516521 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.828285277 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040107695 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371384267 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.230991719 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009489585 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.540296173 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.844644846 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197575871 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903176329 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.233158317 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921534805 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.933275582 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840583294 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973337104 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836700445 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.839018859 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.838841913 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841614447 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.234908892 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.95012087 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.842694211 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906935286 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908603011 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.461551157 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.839808112 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107630821 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189141101 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171900738 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897333467 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830173049 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834186445 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761484135 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967203086 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830585855 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103428406 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.964112951 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.974780694 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85515387 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.17916833 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.971990289 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141033989 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104382043 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831306772 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461110132 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917597915 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.831656059 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840069148 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.038996899 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052309832 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133321715 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.12548292 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.847636782 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023971816 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105214823 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.832128885 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.833279232 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150722493 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.848331682 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236415223 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.867661679 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.236507552 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100205123 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842027944 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964385462 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.841077688 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.021208611 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.283959282 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620750576 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192377848 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.925746698 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.84198763 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113135228 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170332929 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147600513 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978285654 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842704591 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.690908585 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97443509 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.709471146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37692824 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83401321 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05927594 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.545022284 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.841676919 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113698279 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147405794 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.831291949 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.736710964 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875143448 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.84133989 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053784153 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052963127 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083735275 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843258363 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.834955759 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.834337271 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116709446 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903173221 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766817592 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.837280983 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882641769 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.066207828 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86644763 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.358596557 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.536959474 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116653365 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.752465204 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857477505 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.079800569 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.216206547 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177700236 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.418345188 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058651326 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861283052 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.677054038 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209700051 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.838767062 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.080221128 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2104908 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.837921534 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.319478938 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944464837 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.114023043 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165837569 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.85083631 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689056035 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.875990249 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057744942 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201561864 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771392864 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841021786 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.869346923 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.835283649 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.959578334 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845843244 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.770844329 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.124757494 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.657140157 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195142686 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.8402637 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.90646771 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.209467567 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.216437204 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942285895 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858726446 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842719782 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.534279197 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.144937304 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088299729 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.327891431 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.906716574 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.839328216 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837040205 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761871706 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836780526 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.145910941 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121771097 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.169813991 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.945335505 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841309832 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.05050642 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045957673 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.245034498 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981627714 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.847136116 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946701288 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 5.237560189 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.837950907 seconds)
  done (took 1699.614353912 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.844931358 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.866326123 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.849012577 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.898674012 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.859749684 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93828468 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.88728123 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904949107 seconds)
  done (took 56.806390357 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.837065283 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.000369255 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.845963994 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.837873508 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.848311244 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.849859296 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.005963336 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.850551414 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.847302488 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.847654349 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.839372855 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.838508984 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.103909068 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.863219603 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.842341724 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.824315608 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.847173599 seconds)
  done (took 73.694688866 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.843954949 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.296871836 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.877667612 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.837687777 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.957986163 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.838672325 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.217061416 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.876437567 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.840570401 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.212895642 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.133529562 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.917434764 seconds)
  done (took 87.609933284 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.845802556 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.844546806 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.84572856 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.846611539 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.845794069 seconds)
  done (took 10.987659582 seconds)
done (took 2198.773702439 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.052359939 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.025702145 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.065415926 seconds)
  done (took 5.850684617 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.981151491 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.029510182 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.146440399 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.438814797 seconds)
  done (took 10.353269303 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.132684703 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.217402505 seconds)
  done (took 6.104547923 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.193744168 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.864314109 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.214889072 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.838087485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.837716567 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.841726385 seconds)
  done (took 22.277678719 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.837452117 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.840216608 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.838029355 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.843191747 seconds)
  done (took 9.1121619 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.819827019 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.538416017 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.82240888 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.836011122 seconds)
  done (took 20.771414596 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.58441686 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.962099099 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.527167346 seconds)
  done (took 8.828782992 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.994232913 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.69175353 seconds)
  done (took 6.44064789 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.999184222 seconds)
  done (took 3.754709733 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.865817968 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.110047689 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.337775198 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.819981174 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.490539903 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.081581268 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.193321562 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.073950068 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.286784478 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.323543286 seconds)
  done (took 25.339274442 seconds)
done (took 133.918154629 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.567096695 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.179172794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.038765251 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.03035274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.076132462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.038353414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.246871654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.992933624 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.867926647 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.854087294 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.00462676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.074156299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.190127444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.171535968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.199648354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.176767673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.072621576 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.423192171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.879046452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.012910155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.2614721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.842408638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.850568156 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.860542216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.074123787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.993055503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.321925914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.180304407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.02853247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.334280657 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.996069021 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.166559602 seconds)
  done (took 168.764534622 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.839710602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.728197192 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.841406127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.459138058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.602214935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.841193083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.843153866 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.457502751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.442912899 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.427355739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.498843088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.600242058 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.84396852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840387604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.840375483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.817119465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.61653641 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.840768834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.840842945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.840880941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.8415709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.41616698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.3420669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.436704316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.61422028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.842433434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.841034078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.840873632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.842153793 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.842137365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.841377248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.840744973 seconds)
  done (took 208.365474239 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.841281335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.841547726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.844212617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.842736906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.841259009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.843681737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.843321857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.84091091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.841295358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.843047417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.842555368 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.842142394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.843855152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.842091211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.844871092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.843846334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.843117624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.844217826 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.846080494 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.843228411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.844090637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.842853995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.845807542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.846518212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.84739438 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.843704918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.843411068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.8422732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.842833669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.844212874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.846698908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.842427075 seconds)
  done (took 220.753413976 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.09994818 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.847470362 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.848258235 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.825703976 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.848732178 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.847795191 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.78218723 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.095432588 seconds)
  done (took 18.962915201 seconds)
done (took 618.61338768 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.298380376 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.153130766 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.009220679 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.874367921 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.214328708 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.92058512 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.869682975 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.939423887 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.483730163 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.943296377 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.535657726 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.892634754 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.626009676 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.899413903 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.973382561 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.929260575 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.462929569 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.562128674 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.0285124 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.037681617 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.028635363 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.780403399 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.954512231 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.538773626 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.647775825 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.838280128 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.928325735 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.465121286 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.8815646 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.008244275 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.602520593 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.182781141 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.883733252 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.867955044 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.923849518 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.901996066 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.137710393 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.882628492 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.976638155 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.588144721 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.036471845 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.402593522 seconds)
  done (took 101.875941702 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.838026838 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.836204314 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.835471257 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.835897505 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.837110938 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.836400355 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.836612182 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.837066983 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.836435799 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.837810299 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.837686559 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.837321654 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.83653629 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.837827169 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.836925548 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.838222133 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.837488893 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.837000874 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.837840138 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.837724495 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.836723672 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.837946118 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.851683238 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.838075683 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.837883501 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.836767678 seconds)
  done (took 49.555292315 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.850856589 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.020517518 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.113817982 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.875458074 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.852453805 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.854619443 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.871440575 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.85692062 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.853644066 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.854365778 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.957315812 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.858680299 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.872541292 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.114000311 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.872301579 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.852629396 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.852171517 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.852784015 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.027404543 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.870475827 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.874595405 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.858578564 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.8740641 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.867709056 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.855276258 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.853674065 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.856354052 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.294763008 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.863151342 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.957013342 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.913553476 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.878714332 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.228508108 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.124767649 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.911802146 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.862214448 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.857218058 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.961250973 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.860211515 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.854706528 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.871230625 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.85894179 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.111995003 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.328491385 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.870627692 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.852927317 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.3047019 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.970275059 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.897010199 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.866132917 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.116182242 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.875057958 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.854409581 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.855588358 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.892244286 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.861211971 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.854586413 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.149794231 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.867695609 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.872966909 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.861564614 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.856127658 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.033659898 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.864597271 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.020571278 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.865817212 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.861110856 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.856715217 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.116403858 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.874330608 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.33360199 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.871298282 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.854910274 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.958533148 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.025628897 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.33290559 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.87055974 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.031985186 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.247784224 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.881070974 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.863559858 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.284967309 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.885501972 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.864161258 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.85740991 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.857818446 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.855479934 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.897812679 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.872109776 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.244105154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.340230374 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.169092721 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.884179473 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.871441961 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.857263769 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.151685841 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.865586743 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.856195455 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.108642595 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.345415305 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.872983894 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.863659624 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.317852595 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.873913029 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.875817267 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.866123378 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.120823281 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.875813966 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.89881386 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.856614447 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.863992584 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.860273809 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.875766691 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.865895425 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.856959445 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.311623197 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.982891617 seconds)
  done (took 230.235526595 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.855350353 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.85814409 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.85315119 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.856832998 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.851226866 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.857401777 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.8513592 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.851207425 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.85862898 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.8510994 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.851222648 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.854456318 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.85478249 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.859326971 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.863286104 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.859273915 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.445978279 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.85372509 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.854012469 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.853960203 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.501810271 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.862382404 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.853202258 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.853274369 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.854483758 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.85269924 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.85600112 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.858754692 seconds)
  done (took 166.961898782 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.859242507 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.975277995 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.877374224 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.890669461 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.866490136 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.855987026 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.882163402 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.876218187 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.865215067 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.856507381 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.857432978 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.919939143 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.871394942 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.956818182 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.891444287 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.890011307 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.964189437 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.865794564 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.856365293 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.857699537 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.889022744 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.851997398 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.919943092 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.988930824 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.878234387 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.976786967 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.863757817 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.859623387 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.859003853 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977949639 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.874763756 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.918590436 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.892325368 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.877103796 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.980865477 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.979504773 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.964922372 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.888923782 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.864345381 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.857066104 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.85884137 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.845087939 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.976434303 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.878960948 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.86210632 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.962767112 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.878961502 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.859856491 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.870582854 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.857914322 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.874430228 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.882689591 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.927611951 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.995990142 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.894572766 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.883840415 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.885400963 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.143841944 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.867353867 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.960933455 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.851367653 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.978733034 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.882288567 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.846927175 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.861647543 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.865602333 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.890152194 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.892929875 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.96609085 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.869324035 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.961651144 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.896657392 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.867681595 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.860522226 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.862502261 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.980245789 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.980494433 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.896014178 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.89941692 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.893151598 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.854849804 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.862062763 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.847172117 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.881230321 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.864403182 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.977855526 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.982374525 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.869272899 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.863501791 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.862306932 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.862806973 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.888655364 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.988721948 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.899150675 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.954137574 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.930813557 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.937701137 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.877410947 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.875409542 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.867921934 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.925238307 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.878904986 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.872747323 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.192982677 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.931567803 seconds)
  done (took 201.597038599 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.270908636 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.913033572 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.919116331 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.174246787 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.212338734 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.796787754 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.91252856 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.912860968 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.939098352 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.103111953 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.987572022 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.930835583 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.901550874 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.887046387 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.912131165 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.935000937 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.921518414 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.264812941 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.011056752 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.054810972 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.900070262 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.228061752 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.189407497 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.32305264 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.946719866 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.293473716 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.488951553 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.044074759 seconds)
  done (took 61.158873946 seconds)
done (took 813.148170324 seconds)
SAVING RESULT...
DONE!
