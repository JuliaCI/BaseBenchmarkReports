cset: moving following pidspec: 25373
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.19303444 seconds)
loading group "string"... done (took 0.604787451 seconds)
loading group "linalg"... done (took 7.300118666 seconds)
loading group "parallel"... done (took 0.150418463 seconds)
loading group "find"... done (took 1.052193724 seconds)
loading group "tuple"... done (took 1.748451761 seconds)
loading group "dates"... done (took 1.146198617 seconds)
loading group "micro"... done (took 0.218952741 seconds)
loading group "io"... done (took 0.867341465 seconds)
loading group "scalar"... done (took 34.606900795 seconds)
loading group "sparse"... done (took 10.979421491 seconds)
loading group "broadcast"... done (took 0.877507214 seconds)
loading group "union"... done (took 11.86620127 seconds)
loading group "simd"... done (took 4.33981558 seconds)
loading group "random"... done (took 8.226484565 seconds)
loading group "problem"... done (took 1.763881207 seconds)
loading group "array"... done (took 18.959364294 seconds)
loading group "misc"... done (took 1.691509011 seconds)
loading group "sort"... done (took 2.961748934 seconds)
loading group "collection"... done (took 16.392360189 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.504050527 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127476522 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131716429 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11918252 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147637493 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118475856 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124058418 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086894398 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.860366323 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147865773 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113690744 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.389175519 seconds)
done (took 5.233706478 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176475107 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083995188 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084612479 seconds)
  done (took 1.229222849 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067093051 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124634177 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068609847 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068938621 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068783663 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068732561 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069009596 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06861832 seconds)
  done (took 1.598435204 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074703563 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070055252 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068364465 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069938047 seconds)
  done (took 1.345036021 seconds)
done (took 5.486961121 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.740448484 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207615363 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184315179 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.381771324 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129183662 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.168695542 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647665156 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316475029 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183686342 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079185179 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107827604 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3357363 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12006335 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646095602 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07747167 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091244057 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138294409 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442210683 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069279666 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084068104 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091203855 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130308522 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087421356 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075491467 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147794286 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06976281 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134397864 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082514373 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068165284 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.210195054 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174448952 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658186397 seconds)
  done (took 10.175422528 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101398032 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099302006 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071042523 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126542004 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098772361 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071791401 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076882104 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070173174 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090708499 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129362895 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092181889 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105870766 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067564212 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071673086 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084405432 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209113167 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08136377 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082821776 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071820141 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080199911 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108944063 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079481857 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081032052 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080983182 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130371606 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182332209 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099228761 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099379978 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06865325 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083126449 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117057502 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128267947 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068292725 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068608864 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125729456 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098796276 seconds)
  done (took 4.603633061 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.936095475 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137714524 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088852504 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.129822898 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067675918 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106654113 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068078005 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082321047 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204763628 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.357438025 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.568220347 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.128822232 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112356937 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103859517 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069369349 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070219257 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068799662 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.430977247 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099204106 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103636966 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081159937 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07095396 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069784506 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066265417 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068713185 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065559143 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069306321 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.111395201 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075291639 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.323074021 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119237164 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072133021 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.911524052 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164057334 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068658563 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.239851741 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171031033 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093505619 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139854496 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070976505 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068122212 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155497629 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066704696 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072655096 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067745759 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086436823 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106080904 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119130509 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07050166 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068359536 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16570998 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067303868 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080342617 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.085914599 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155447684 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069224355 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281114851 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089189368 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072000687 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067302501 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.171704503 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122216528 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070361154 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070673516 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071438603 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070390849 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368854927 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068205374 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.987667173 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071294027 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078231752 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071677564 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073814018 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074203985 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074374902 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087238347 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067121319 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068607141 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074433313 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067046838 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068022239 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068387771 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085569728 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35709917 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067934615 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172033519 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068031711 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089407106 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098809552 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068972855 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067642902 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102381932 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069962603 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068337216 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068697024 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06648576 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085482622 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071624612 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114873216 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067563083 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0923564 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.08441467 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097203679 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070742811 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100458522 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079879981 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06967313 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.406055617 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067277105 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069843743 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067400396 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066757308 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06852642 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069477891 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079695683 seconds)
  done (took 21.508620079 seconds)
done (took 38.286034961 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237377592 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073639 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.072877125 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073096798 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073119774 seconds)
  done (took 1.675275119 seconds)
done (took 2.808337759 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119241236 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098726823 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066583208 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099107416 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066004759 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103026999 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099836504 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077925358 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099052753 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066665911 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097854595 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066672108 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066886705 seconds)
  done (took 2.273046481 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085140053 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086309601 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072737367 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085020062 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066251501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084953744 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083685234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091244332 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086207938 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07483823 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066237261 seconds)
  done (took 2.009377079 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084550545 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086725591 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07195967 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08424916 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066790502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083783482 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083930981 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087318804 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08401096 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076174751 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066648514 seconds)
  done (took 1.998435479 seconds)
done (took 7.400608763 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078458796 seconds)
  done (took 1.191991167 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.515791725 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.586458462 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081051805 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.105688045 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183186674 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111166328 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240559166 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083621027 seconds)
  done (took 8.174376306 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101387338 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072555042 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071190738 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073292707 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072023368 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073388615 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073216466 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073451635 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071252247 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071932059 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07221493 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070950689 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071481293 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071918685 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072553617 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072090297 seconds)
  done (took 2.372409483 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091625014 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090785052 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07473498 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076554995 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07429385 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073640207 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075655327 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074815483 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072326611 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074190981 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076588212 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074533819 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073081516 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065909368 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076054757 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077225609 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072266571 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075168517 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076343874 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076002327 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076809216 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065966391 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073966681 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076061843 seconds)
  done (took 3.024094854 seconds)
done (took 15.885389521 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105082478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06988807 seconds)
  done (took 1.294044357 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08038769 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0810094 seconds)
  done (took 1.289984652 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080784309 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066158459 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087410244 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077334979 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067006468 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066406291 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.0861987 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066660902 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067024237 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066553949 seconds)
  done (took 1.860729656 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068122116 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077023015 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071374068 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080270731 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073727898 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06568778 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071918796 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068614202 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076608434 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064960185 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072214468 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083836093 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071390314 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085500635 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07170194 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070163286 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071546854 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06891118 seconds)
  done (took 2.44521855 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066186927 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067408617 seconds)
  done (took 1.26718739 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068011989 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064810772 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067885727 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068363603 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064774097 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064518131 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064993552 seconds)
  done (took 1.594938311 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.376340458 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115667823 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294405644 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073383569 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082652101 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244653318 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068522189 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072874465 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073190002 seconds)
  done (took 2.568631626 seconds)
done (took 13.455893745 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080711328 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088561313 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095733945 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364789199 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093875876 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069637889 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11532847 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176598447 seconds)
done (took 2.229352662 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208941011 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.643201999 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.391885615 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.200146699 seconds)
  done (took 2.371660321 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321108686 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089250871 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063586636 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070435325 seconds)
  done (took 1.68964986 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068345152 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07116134 seconds)
  done (took 1.282542185 seconds)
done (took 6.696343915 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085994565 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068072602 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068534827 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.180344166 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067642751 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065882106 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066623858 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0680982 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068294039 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068051889 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066692448 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068123899 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067803305 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067946493 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066370416 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066237911 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067737691 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065934324 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066175486 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065943954 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066309253 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068232009 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066372173 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066495545 seconds)
  done (took 2.914570871 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082665794 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068732993 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072730966 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072114572 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070104495 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072146647 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071780013 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06811429 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072072139 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070183768 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070097103 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070124678 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069666092 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070433233 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069796657 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070260688 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071942044 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068354327 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06991138 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070534183 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072073638 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068412987 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070518462 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072208761 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071348198 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070759383 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070875643 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068890366 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072479049 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070257342 seconds)
  done (took 3.28555304 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071586894 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064665923 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065532728 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072501594 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064943255 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065218322 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065075737 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065824062 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065864741 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065001045 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066018567 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06454997 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064929698 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065373482 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065179338 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069089893 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080784298 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064849776 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064832983 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065191673 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068714856 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067613879 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065452808 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064591744 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064811109 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06448053 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065416788 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064653429 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065408954 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064662311 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068852041 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068892774 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064982124 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072112833 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068697941 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064557654 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06958702 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064859556 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065333277 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064279937 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064797211 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064856089 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064909458 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073030963 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065039516 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0661626 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065042375 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06581968 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065583289 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066824295 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065072148 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064958454 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066801739 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066322016 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069902653 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064863087 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065753164 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064858798 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065584273 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064629601 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064485243 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064430978 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068422232 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065765855 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081165718 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073756863 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065360885 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066044223 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065466449 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067976318 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066396142 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08038731 seconds)
  done (took 5.969613332 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090130153 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088680929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067778565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067780066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064133917 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066272575 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071297725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066026727 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068264235 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082969076 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06571299 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068052814 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068372502 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069747 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065702456 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067863125 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073700395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064030397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065624171 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069842106 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065678079 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071183878 seconds)
  done (took 2.716976867 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14613569 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071496849 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103529626 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076510793 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072137375 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076028057 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071541547 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071876125 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07153937 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070073956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069815728 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071125112 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072273725 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069906113 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069816333 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069668954 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07147764 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069922243 seconds)
  done (took 2.553847466 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078607579 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069228379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087918813 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067952824 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06868987 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070294589 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072444581 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075181193 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070017944 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068444564 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075417137 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069873214 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070039564 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068346971 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07036416 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068555354 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070335826 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068678715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075538331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072458592 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072377323 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076001269 seconds)
  done (took 2.746572943 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08092309 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070114797 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08229913 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069953048 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063506302 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066361421 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071419377 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068445368 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071540135 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069657521 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068175679 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065759496 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070140477 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068268183 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070611341 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06862506 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069548813 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06811105 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069638444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063552728 seconds)
  done (took 2.557230525 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086129265 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069347349 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069838571 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07595803 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069187676 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069144634 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07555768 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068687835 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069124947 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087397663 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068891976 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069053595 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075348059 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075924341 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069249269 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075639046 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075101884 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07538745 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069391678 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069277952 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08705127 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068989882 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07529349 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068759851 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069068335 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069933896 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068824969 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072844472 seconds)
  done (took 3.206395243 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068596663 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067672378 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066665415 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066183326 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066211761 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066027673 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06584109 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066448536 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068293421 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06674667 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068546903 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068584294 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068196946 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06815235 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068139625 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06824294 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067801079 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066337788 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066056253 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066479767 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06800643 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067670859 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068006162 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06615859 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066210358 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068289606 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065992566 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066275901 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068474216 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066284817 seconds)
  done (took 3.182136472 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075966185 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07508492 seconds)
  done (took 1.31812254 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064498079 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081026366 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06472465 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073057865 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07155218 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068368363 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074593473 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071243161 seconds)
  done (took 1.731894328 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083251312 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077055693 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068117578 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077345259 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077186244 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084317413 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12160417 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067686359 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074454136 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066421149 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080118439 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067280455 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074759936 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06875855 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07400782 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075184082 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065435163 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072102769 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069608782 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065560076 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068293316 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076616114 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071292565 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063679811 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069533492 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089583815 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078759266 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067412823 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071404441 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075748943 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074394826 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062929787 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067384522 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068593398 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065643125 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076443593 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08203237 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071288238 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076802038 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068214165 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075761119 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063258681 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072631269 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074956745 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079306166 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067726734 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068004266 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063648151 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066376834 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070803772 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063456259 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069043691 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063133629 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075302367 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071754665 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078479021 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066320777 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069706789 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071099957 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071363237 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075080965 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070231786 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071577925 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067436883 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078554808 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073573813 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075334481 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063208776 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062489304 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065997183 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077190102 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090371048 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074346385 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06807099 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06854169 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065633895 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071669731 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068328192 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072951307 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07467833 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066854724 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071561326 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075137702 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068484804 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071128712 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073302166 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065928596 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069529103 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066310048 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083030323 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069111054 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065261182 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065822884 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077361878 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071212024 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066147726 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065491526 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073817766 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061238328 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066124582 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066999153 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068100051 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075588766 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069835931 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0703622 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075259619 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07300415 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067725203 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068995475 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063514488 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.194058301 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069565221 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077094045 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064396748 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071768729 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070308195 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068668245 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077242877 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066422783 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067676752 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076074138 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075144858 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066458289 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065178137 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071095944 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06810472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070252132 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077031332 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066933835 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064433363 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063481636 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071880747 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067019075 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072462557 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07156589 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071452956 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063711893 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065662295 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072020302 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076164476 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068453248 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069366377 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07345642 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06940191 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066981599 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074604985 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071191749 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067803549 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07378215 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069038881 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063115138 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069515688 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070900442 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066894915 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072189442 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069667328 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070503607 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067645373 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06610487 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073658891 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067917754 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067543697 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068515472 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066564223 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078112552 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070257637 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063145193 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065244989 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074141832 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066548935 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0664451 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067432704 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070226478 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068898783 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066108116 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066724866 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070425555 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075126615 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069960914 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067690643 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073070176 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080195993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066739958 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070856913 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06689584 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067929184 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06825693 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077202982 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074119816 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071676597 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070435479 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064845447 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072577773 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075182087 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067023667 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065311071 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067971505 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070576944 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073815831 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070511307 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067067615 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06550516 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068729505 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069185709 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070581339 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066356082 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067471789 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071806155 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065511108 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071925708 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066362787 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076624679 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069968542 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062135424 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067723903 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064809202 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073434398 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061975349 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065533499 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066736671 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066480282 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06515468 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068940396 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061390667 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204264256 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077975588 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070542046 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069024376 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067446175 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076359746 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070331601 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072655461 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073071208 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074001661 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07915999 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067465197 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072226448 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08072774 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067672995 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062869885 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073204067 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065714721 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067062225 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066481208 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065926892 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071403313 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074558698 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074625238 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062460939 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071174718 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065685577 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067351081 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063519136 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072172176 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071107619 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069364795 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075196887 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06785328 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067338261 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071156591 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066925363 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067829455 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067762721 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071009358 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067322586 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069470398 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067401973 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070337272 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067265412 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06545598 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070714656 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067648329 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068932197 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072629593 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066836061 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068424591 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070072797 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068494755 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068963911 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068923593 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067888421 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070953971 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069125408 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068537071 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070264171 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063214239 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075178655 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066650433 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075846274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069005546 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064833672 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072947248 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070656751 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071805044 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067900713 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067967931 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069823275 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066934214 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070660183 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075110484 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066869744 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078776861 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07478939 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069617948 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071131792 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068926325 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06975836 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067301441 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068819959 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067660668 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068553433 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066985125 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072119659 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070322705 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068652254 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070211652 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067633407 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06860191 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067813802 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062667576 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067582174 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067914559 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067226748 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076279851 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067459962 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067549508 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065603879 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067108842 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065343535 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063945588 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0720589 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072537302 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066189873 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072685142 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066378317 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068292616 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076580642 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061230938 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064329766 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.197277748 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068046477 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076819464 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06871407 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078157512 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069299711 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068405448 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065315853 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068087631 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06754568 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063288382 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065920166 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071552038 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067514118 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066778383 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067193782 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070750731 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067869447 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075786969 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066803307 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069440932 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067271545 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064673125 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067939858 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068193123 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070393031 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067898319 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066475574 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065060468 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066927227 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06900007 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069684417 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067149644 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069346352 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075038777 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067075582 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070919631 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069279562 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062853956 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070542978 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066667122 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067733099 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067749618 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071506527 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073820844 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067613618 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076768685 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066646943 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06897418 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067545693 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06534851 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06694902 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067130521 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067060354 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067586974 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068727647 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076269948 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065871062 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071335742 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06915668 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069138481 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074353164 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067856636 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071481949 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072539898 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068748966 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06979959 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076218128 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071340756 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071148367 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067911151 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069767888 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074032827 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067576621 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074880088 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069023234 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06802453 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070137894 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066463602 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066933007 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067197428 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066930519 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074232457 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068228578 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067426095 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068320635 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065592195 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069335194 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069958247 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076134163 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070188805 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071693721 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063594563 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064651315 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067364253 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065996298 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06924702 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070350072 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073100547 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070175803 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069125497 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066164658 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076546604 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072949626 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070886225 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066433598 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07061492 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067088014 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069329031 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068177574 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06759647 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067120736 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070878076 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068853195 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066698464 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072400082 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070511747 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.199549698 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07171868 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070761168 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070350773 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064357159 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068530316 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071144256 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072951826 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071079319 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068411188 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078439461 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066423861 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068869784 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070213678 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066769745 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072458756 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063463111 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070238911 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068385299 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068689242 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063971336 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067393383 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066858411 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07059496 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06829985 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063581023 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078566644 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077217454 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070789455 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066825582 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066186307 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063285196 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063270044 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067870623 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069119814 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070104414 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078646862 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067586355 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067660842 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06375685 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067480094 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072200614 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071080726 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065337956 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063711282 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067112665 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070509723 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074042431 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065897805 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066770042 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070902047 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070064557 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065435831 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070089188 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064849511 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072173351 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080128117 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067577284 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069499125 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074460457 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075664109 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067616867 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063502247 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067528358 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071298687 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068853528 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068597158 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068403691 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082257272 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071254812 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067689885 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06666114 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070869058 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070495673 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076535938 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068242331 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068260306 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072815406 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070365049 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074277522 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07148156 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074359836 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07084898 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071064564 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066943853 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068880439 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065476912 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067163353 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068312023 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067100155 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070930028 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072933658 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067724887 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078038726 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076478598 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069269104 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064435223 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067930969 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06806536 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063712641 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067746876 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065482981 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066048035 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065573994 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065863069 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068922267 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071353738 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068167937 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066766934 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066265063 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061659154 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070192287 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069185206 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068715903 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063918699 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065931567 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.199532788 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074498212 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071546151 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067832362 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071864739 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071278751 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07033545 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064069966 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075551899 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066976268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070900926 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068236163 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067913503 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068587011 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071227497 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072310792 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069375161 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070561869 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071607972 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069409607 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065564248 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06485395 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073859873 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066021052 seconds)
  done (took 43.413632932 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097918185 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064667993 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06359138 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063407408 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073322213 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064978571 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063652925 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064785711 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064572466 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066564281 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063759002 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063769529 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071486315 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078190873 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073878208 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06813345 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064098991 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064571414 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063734777 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064528372 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071415332 seconds)
  done (took 2.687271728 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073270782 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078252572 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076343244 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082814022 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072163042 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070188462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076294324 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070959827 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078260537 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073737155 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078340256 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070784181 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073676546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073856715 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073767439 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071050923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078443853 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072283407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070895947 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075881643 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071222399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076000964 seconds)
  done (took 2.881482154 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067550187 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065968854 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069877294 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062815296 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066816874 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062819701 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069021182 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065257669 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068998817 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066938694 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067087592 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066686198 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069092692 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06303098 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067754833 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064867996 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106783346 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069922373 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067808603 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067855805 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06309988 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.077644889 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063140501 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063898233 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067158582 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07055788 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067931701 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065179595 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066915438 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066520407 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067238379 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065353157 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069860123 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068141774 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067491785 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067058406 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066959765 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069607049 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063525125 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065494804 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068399955 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063818376 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067292569 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068926063 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06510541 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064975057 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069485377 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067151455 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063180337 seconds)
  done (took 4.566422047 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077559241 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106481082 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069763951 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08780304 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079930216 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072680616 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071598038 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087806767 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065312331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065919492 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081119365 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079220955 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067095685 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070639932 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073294414 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06686569 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067631154 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066173863 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07075194 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066983381 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070916402 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073421241 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080247733 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079217199 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070896217 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065816585 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067237187 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070725927 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078308894 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070899436 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071276597 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071427404 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080692937 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070400651 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066414808 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068384271 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081348395 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067592283 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0689302 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065039538 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068657922 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071030362 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073162048 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081454153 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067055247 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071304344 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067264084 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064701727 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078040678 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068847179 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073330206 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079132872 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069726197 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067334911 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070992129 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079978704 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067068426 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065901063 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069553653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07786996 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065029651 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069917398 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078770775 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068039216 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072678576 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079246231 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071650879 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070250882 seconds)
  done (took 6.309377407 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077379159 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094070251 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082384217 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083328835 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076739569 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076617643 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076666235 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076604315 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076639512 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080315358 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092234135 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112575771 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.080981685 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07816689 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075950051 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076414365 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076513872 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076414127 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076349651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076808909 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076538317 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08211786 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076309816 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082792694 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079070251 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072145107 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076044296 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076216201 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082481601 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076278744 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079861994 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07693778 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075827322 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082387705 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079328687 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076338395 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066379162 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075890515 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076083786 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076205662 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072000255 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082255531 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076112198 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072065375 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076982065 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075782011 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08212961 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079250612 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078560967 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079438536 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07623229 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082565521 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075943005 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07592486 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082206682 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085839144 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082156713 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082153236 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076573381 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082718116 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082381346 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085175002 seconds)
  done (took 6.189637967 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081260913 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073321286 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082129865 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063296347 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067783199 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073458078 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065602307 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065001302 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073589836 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073557007 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075779345 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073326931 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07553745 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075807583 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072980574 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075869053 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073793856 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073276285 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074011281 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073587318 seconds)
  done (took 2.755907343 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076016496 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084387466 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06899435 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073086071 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070388219 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072924548 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070420787 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070579403 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069305865 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070543274 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076816267 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076575032 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069176151 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072999704 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076182153 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0727882 seconds)
  done (took 2.449556999 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083426521 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073418581 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078601495 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066610989 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068320266 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06384312 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066474906 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063580441 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064140191 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07853306 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066901805 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076942524 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066572475 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065725459 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064256149 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073011978 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063903407 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065178111 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066806859 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077871936 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071372567 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065713764 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070625589 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066482639 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07007969 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071383449 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066619925 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068350866 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064553922 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067065303 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070348736 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071258092 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064240646 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06548213 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065835718 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06457394 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066590265 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067221682 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072498301 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067640037 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065495395 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069797277 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066907014 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067849955 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063908984 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067580023 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06417854 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070051357 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065336682 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070553529 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066776748 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069366919 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067414445 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074202644 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069240344 seconds)
  done (took 5.048503028 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080010654 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070600613 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062991114 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06614316 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070767575 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069062871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070893756 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068669917 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069141494 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065043399 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069245757 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070423369 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069003593 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07048514 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069065583 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07039688 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06318021 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068706499 seconds)
  done (took 2.536253002 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07316625 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067827714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073654112 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068108129 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067966866 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06934391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063570876 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065694832 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065841111 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067998682 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068156658 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069936927 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065951783 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069969627 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068916962 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068235085 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069905781 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066003476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068051519 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063419505 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069608506 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065399665 seconds)
  done (took 2.779790921 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093682295 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083802609 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136532016 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080272901 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086639587 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073537923 seconds)
  done (took 1.8392548 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09042764 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097812098 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068686752 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070509053 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076353852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071742348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071749528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072262803 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077854285 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076317269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071946363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081024835 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07857737 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078083505 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076194369 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076050842 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071818878 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071964233 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068947554 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082651572 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072042529 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078782155 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072539505 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071830845 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072096227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078441935 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078139405 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076457181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071862698 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078678837 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076449522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072644906 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079089584 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076706726 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070766163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078820439 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072478281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083587194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076459095 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07876837 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070487326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076431523 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078614108 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075823962 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078637917 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072133495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075910875 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071636803 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072486699 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084831989 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077033741 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078243651 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075931323 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078598373 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078068676 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084311652 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076481915 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078227008 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076134819 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076760078 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078120932 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076055776 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078171055 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076531979 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076818464 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078066015 seconds)
  done (took 6.336232662 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102811966 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068759119 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073166953 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077139149 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07784386 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072192368 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072244264 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071486056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072041313 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069115231 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105468326 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072063613 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078823722 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078327639 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071962005 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072053679 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071916107 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078375599 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068912743 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084634095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072102068 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07820382 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077983868 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078575808 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076606944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076325093 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071890668 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072445177 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071961381 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072004704 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076007117 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072454382 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078299606 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069864771 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078232693 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071847393 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072474981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076204777 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07190495 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076227288 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078289024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082861257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072000458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071960922 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076582387 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071881872 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072090337 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069579089 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071900226 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068976632 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076782241 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076586862 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076993583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078753997 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072021002 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072093179 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072260456 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072140142 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072072375 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076122474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078194388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071843472 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084584726 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071890265 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072220064 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078271419 seconds)
  done (took 6.277426962 seconds)
done (took 129.398540571 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198243179 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173840675 seconds)
  done (took 1.646835193 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070086991 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09650512 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077245846 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129773767 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06830034 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102464666 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100513208 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078313521 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067837837 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067947635 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068346668 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070335046 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133487116 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068326612 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067531542 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069874325 seconds)
  done (took 2.629020052 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097121345 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.153797206 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099496264 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067040832 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096935496 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073085138 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067004896 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080288749 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071827337 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067213825 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072935411 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071407036 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067144491 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071371126 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071820865 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073310335 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067075757 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073471896 seconds)
  done (took 2.736772213 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096485959 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091342105 seconds)
  done (took 1.483080488 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156079293 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13453995 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201498658 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330905982 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153305676 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146879638 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143153357 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141819019 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113500163 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137175757 seconds)
  done (took 2.950736093 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100221681 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147292447 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.260800912 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115914286 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07459442 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091631753 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117233803 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080949724 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080097859 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080340127 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079887343 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077171958 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099984993 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074547078 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07593063 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077252733 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102471956 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075613796 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076326058 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076614544 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100768902 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068357756 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074728879 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075256146 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077551276 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078032313 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067845924 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068637839 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076208122 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076360222 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077226155 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091003335 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077387046 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102161523 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072507996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104120522 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077171926 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075171704 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07684845 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074065334 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078194778 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0789478 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074602581 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076906782 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067723264 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077049389 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067937073 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068180238 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077791617 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068457993 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078057902 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07716807 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102284849 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068456621 seconds)
  done (took 5.936520673 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106369404 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106452348 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071570559 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111514784 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103860303 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070585659 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104916446 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097950813 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107450066 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072075203 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070459668 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071347336 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079770819 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081283216 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11615473 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106542067 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073673869 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070791791 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1073616 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106681126 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070245488 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101318734 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096976022 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105797102 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069280861 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071014978 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069959399 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071434119 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076108955 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077733022 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069791073 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079162723 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08313842 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077176863 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068841346 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069650796 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069582886 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078595735 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079391315 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07853631 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076616172 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069123781 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070035135 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070842817 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070575936 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069143897 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077570333 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079024082 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07757513 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069752473 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07108833 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069945353 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07067087 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078920437 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077196154 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079321483 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079255285 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069855806 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070041927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073006161 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080229011 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079088378 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078814366 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070884175 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079382507 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072561951 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081135364 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083419741 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070627099 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071497323 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070197561 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069634662 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070673349 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076335395 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076229308 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070441746 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069208431 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069530036 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078527157 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077025134 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069940509 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076310767 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06866216 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069622544 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070850629 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070988681 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076379893 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079341849 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071182087 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069680146 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069585786 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069239308 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067808922 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074616649 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076860365 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076768141 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077317554 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069260998 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076151317 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075843923 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.204986195 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079721621 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071519223 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072465135 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072134891 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078258814 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077922451 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079683812 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070828295 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071117923 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078394538 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080191839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07038622 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076818589 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079517815 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078168263 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069547674 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080529779 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070629176 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079328821 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070125319 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079820276 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070079077 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078084712 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070425415 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068815281 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069706723 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078560248 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070968424 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070192937 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0712172 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070644057 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077373119 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081524216 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072526663 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078001903 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076826464 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071609716 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077705966 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070067575 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078293577 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06978256 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071021524 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069054505 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080913383 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069965697 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069846425 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07027558 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07979271 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069821316 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07932363 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076756695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069219278 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08107332 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079690409 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076953411 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079719981 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071588 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070004226 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070053641 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069785573 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076895022 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079014386 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071681597 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07025482 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076986021 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079456889 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069177121 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077377131 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077963354 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077893984 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070233774 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069964873 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080114591 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080392764 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077434755 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077367399 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077743519 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069712548 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07624714 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077401307 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069594421 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082753977 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069826461 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081078182 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07756358 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075820654 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07818111 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079220459 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079122583 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078933047 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081399842 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067980852 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068696516 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076420489 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068710078 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0683291 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074803154 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06965833 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069817865 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.07981811 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068846022 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214594678 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070684684 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079718527 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070512601 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072163877 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08271376 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07067559 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071635429 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078829744 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073109171 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077734838 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080520891 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078179819 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069919224 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070746496 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079247328 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078937838 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06974721 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070427161 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071319182 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077821422 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077153508 seconds)
  done (took 18.681810745 seconds)
done (took 37.372790066 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.189552684 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.141448348 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.15619295 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11149296 seconds)
  done (took 1.982445454 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110175154 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097491396 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089369311 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066753859 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.095829739 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066705241 seconds)
  done (took 1.859498474 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26855063 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.186128788 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169261106 seconds)
  done (took 1.951116139 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.192907646 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.178734579 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.402736387 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.2489494 seconds)
  done (took 2.444462632 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.1349891 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086018648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067621418 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083666364 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125182346 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153308018 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096192396 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121049643 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079340229 seconds)
  done (took 2.324361715 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142650169 seconds)
done (took 12.038341992 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.229543137 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207163846 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.242820943 seconds)
    (4/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080711562 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.19204242 seconds)
    (6/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076667151 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072921549 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069680083 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094885615 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.144814637 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076983015 seconds)
    (12/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077399072 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.180753402 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069425039 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076466062 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073983217 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.212736837 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075940846 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.195995593 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075305483 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068604472 seconds)
    (22/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112637748 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.140836869 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.30558652 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160051536 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067552948 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091371177 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.178496747 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073737464 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076256704 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.199445244 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122726286 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080415747 seconds)
    (34/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072331717 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075248379 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.196152316 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097803694 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066553403 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116553222 seconds)
    (40/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.233186934 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102134731 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088467019 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055305455 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198101843 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.218125399 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076430906 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093241107 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.15094879 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106263293 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.147371141 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.176856118 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070738468 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076935867 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.06780195 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.09739927 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.177452759 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082473409 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 0.126814697 seconds)
    (59/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074436201 seconds)
    (60/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075503792 seconds)
    (61/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064917943 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.14828917 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066346681 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07488987 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072885547 seconds)
    (66/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168678719 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066406104 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078347061 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113451815 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092164201 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089451498 seconds)
    (72/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072397098 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.163978453 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088757089 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.152013802 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07750556 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086062329 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087779128 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075130304 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071639029 seconds)
    (81/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.225438918 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.08002637 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078796841 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.122484651 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068145499 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068026248 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.121586281 seconds)
    (88/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197941869 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.107574452 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067172595 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078881259 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05798423 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075934307 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.056442843 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09057818 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140619687 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075752886 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075558984 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.123566679 seconds)
    (100/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.11692647 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.057437115 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075611214 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074675527 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074081151 seconds)
    (105/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075587713 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.183239256 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067928851 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101237423 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154950354 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08949122 seconds)
    (111/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067840588 seconds)
    (112/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068862601 seconds)
    (113/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.117507099 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.176294735 seconds)
    (115/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070119353 seconds)
    (116/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071594151 seconds)
    (117/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075572341 seconds)
    (118/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080295464 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.121005935 seconds)
    (120/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076421858 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 0.14286957 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067275854 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.164486666 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074488907 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088140233 seconds)
    (126/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076158155 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074111119 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155052718 seconds)
    (129/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091791889 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075092426 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077007241 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056722028 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088309585 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16292441 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074045086 seconds)
    (136/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.056359919 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.164174404 seconds)
    (138/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.114011106 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072383447 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089277453 seconds)
    (141/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.115682449 seconds)
    (142/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05646576 seconds)
    (143/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067046326 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087855701 seconds)
    (145/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091275792 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068147294 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146358513 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076828748 seconds)
    (149/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150133608 seconds)
    (150/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.056355548 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.1450498 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184935086 seconds)
    (153/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.103817052 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110213918 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.171272457 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056108545 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090141681 seconds)
    (158/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070237284 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054882937 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14127866 seconds)
    (161/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068204906 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074203883 seconds)
    (163/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076598775 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070503698 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066684989 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064748271 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.113537278 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111046317 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066464113 seconds)
    (170/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066100062 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074663367 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056584157 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168219562 seconds)
    (174/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074570384 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056002981 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.157654674 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06695213 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143219044 seconds)
    (179/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.104193173 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066912005 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067267899 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.167561747 seconds)
    (183/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054393075 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053978409 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.210742979 seconds)
    (186/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110572209 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05936826 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069919587 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057673299 seconds)
    (190/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.057482281 seconds)
    (191/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059851792 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071724867 seconds)
    (193/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081896727 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.076208607 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056625327 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057677448 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.056577464 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15778681 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089661177 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057984264 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074565014 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074575203 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092718134 seconds)
    (204/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.115909023 seconds)
    (205/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.057510242 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069321518 seconds)
    (207/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075925682 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136935053 seconds)
    (209/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069198632 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076986155 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074459111 seconds)
    (212/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05687531 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114260591 seconds)
    (214/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066462858 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138164161 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185855695 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05605146 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067418145 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057765896 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075584926 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073979413 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069886666 seconds)
    (223/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.114336922 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076749512 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096740267 seconds)
    (226/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056057575 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055412628 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058853715 seconds)
    (229/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056733858 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090146952 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055533648 seconds)
    (232/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056352503 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090189711 seconds)
    (234/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056394777 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067652984 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068253449 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073766835 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055745589 seconds)
    (239/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069336305 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092990382 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078018306 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068853562 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067636879 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068661845 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.195247031 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082189828 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076447919 seconds)
    (248/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.057301933 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080581662 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05563038 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088169401 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.150085124 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081331159 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068415257 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055812482 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170216164 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06843605 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068253078 seconds)
    (259/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056026314 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137419255 seconds)
    (261/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064841072 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075051469 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066925612 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056497485 seconds)
    (265/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074198318 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073359324 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091442009 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068107475 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057666535 seconds)
    (270/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.152586979 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093573889 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135597121 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09077181 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077220795 seconds)
    (275/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.107178539 seconds)
    (276/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073163307 seconds)
    (277/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054931771 seconds)
    (278/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170236021 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078599025 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055186176 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069001347 seconds)
    (282/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074366729 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054634545 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074578649 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.055391202 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074308912 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070836252 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089780787 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086569986 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.115439107 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067447758 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073098776 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054747107 seconds)
    (294/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072637811 seconds)
    (295/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066378147 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 0.12795972 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054721123 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066839887 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080267581 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066944718 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074244685 seconds)
    (302/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066541731 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055149073 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054109205 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065621739 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066249058 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.229750455 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058383071 seconds)
    (309/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069396113 seconds)
  done (took 31.195877113 seconds)
done (took 32.53749376 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085418217 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094294819 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078644346 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094325708 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082689728 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082560481 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075738575 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080865856 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083443605 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084613023 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080968493 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060143051 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076731197 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076489553 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076966572 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091962352 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081828502 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075281017 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075929107 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067898449 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075214397 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06811074 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069956677 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.060583056 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080606092 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076290476 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077498964 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076943951 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068230307 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070670445 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072889215 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076462422 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068567144 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082463595 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077177499 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075691729 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077575985 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079541274 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070083747 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068126167 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077022569 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068019486 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075084333 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07614489 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074202663 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073797445 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075686627 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079736926 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091431371 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070497374 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077181128 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077830175 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079560011 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074916878 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073397579 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075326817 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073966176 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091842622 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07622506 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070545734 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076934809 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076687708 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074006183 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07567399 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075150291 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07807865 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079668575 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074191439 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077126758 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074581024 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067839987 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07544513 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07227231 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067768059 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077733732 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082648219 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067261057 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074009767 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074717424 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075747842 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068202203 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070365846 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069340936 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074611457 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069778049 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05944668 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072752507 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074665301 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06770742 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076031049 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074440255 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074967607 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069339881 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080145878 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067560228 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07338349 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06862422 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067717691 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069289378 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072155463 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067416137 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069655826 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077981876 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068720365 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073795394 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079401666 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067242494 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074181325 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066950969 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067110487 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080561974 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076868322 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067638532 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070096107 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066819885 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07354799 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066341195 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066574795 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066460707 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06660658 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072844613 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066865957 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06925224 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073218891 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.223041437 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069862085 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074193863 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072018325 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069304421 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076028824 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06920594 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06889382 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069874229 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067864828 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071392441 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0682759 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074830808 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069991497 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075249847 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069750447 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077010956 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073886762 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074496613 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074266826 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067195545 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064617886 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070748325 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070335063 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069643008 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067873576 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069741763 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067471056 seconds)
done (took 12.79050089 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069015526 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131359123 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093915484 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094050989 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085640708 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068800002 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077794882 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096262551 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070426372 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098549054 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089379794 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087142619 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110015036 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067523407 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068344683 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072350217 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069865068 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081425519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096633157 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087851769 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111366007 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068461152 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09162918 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088908364 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087572616 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093356516 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070034399 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072312408 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071891947 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100892912 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089453731 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072351998 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069493534 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096601185 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094799216 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083284678 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068607946 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083325381 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068703433 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067875991 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070726601 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096620513 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081079022 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081277608 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072707886 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077966489 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070185401 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083463528 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089259203 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080157102 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085256156 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098799823 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071327134 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084766871 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067613307 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084970536 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077757348 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070226142 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069458038 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075686304 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068675915 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071946474 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081019748 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080376028 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072753644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084432247 seconds)
  done (took 6.812683325 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085284235 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093815024 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084639311 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086934446 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067915909 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069028228 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069372596 seconds)
  done (took 1.994174089 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069091983 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088426051 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089061973 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089089749 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082422931 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092085641 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077635684 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069050329 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092705872 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070011056 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087995974 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097611373 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072103802 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082299634 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089888501 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069196815 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091067379 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069055237 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071690366 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090247959 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075097289 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097186482 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075871306 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069256206 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081714471 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.0693817 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112178866 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072738359 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070927333 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071871403 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07049906 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106266511 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0812156 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075967 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069797255 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083296741 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082546366 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072334393 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079341678 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077230126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081861824 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069393518 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070060963 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070672759 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072940284 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07879221 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07006326 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073100586 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072126953 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087401871 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068291281 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081659686 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071719369 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074770324 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07069578 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075965763 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078804707 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070711885 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087319911 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071309347 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083999331 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084087459 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081526306 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083281949 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071604319 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081572762 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081659846 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071870639 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071203924 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072870274 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083850126 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068504202 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070286375 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079001054 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071031683 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090332937 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090308049 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070917104 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082604741 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07014148 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069924974 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069397817 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090303209 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074356109 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069659237 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073694307 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072571391 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072889053 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06800181 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072798598 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068097454 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074790171 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071408988 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072308787 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071193553 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083082676 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071660575 seconds)
  done (took 8.962803546 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072594527 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070942988 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072434401 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07059878 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071011342 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070642984 seconds)
  done (took 1.892058208 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090156438 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070863753 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081885979 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074305169 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105139496 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086691623 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087236077 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078866119 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084709464 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080118587 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08635825 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088520151 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091930528 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074133372 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08709074 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073534955 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087292731 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076533215 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080030951 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074542378 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087058712 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07459345 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074854887 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082160173 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076711704 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07340557 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080634489 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080145513 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079868494 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079128521 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07449344 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077687879 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072515806 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078951409 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087222211 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072856769 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073574808 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078925431 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073905538 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079457501 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087698254 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074515152 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07512315 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078130405 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078207384 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072523525 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078467037 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079890525 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086968722 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078787136 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07816101 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073155554 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076425526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078346417 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072140077 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078392485 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078605838 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087488534 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074054349 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072229566 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071468226 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077061057 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078060734 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076894743 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078785828 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078542331 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072305203 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073959198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074239169 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072577152 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078330518 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070804101 seconds)
  done (took 7.113320231 seconds)
done (took 28.198518819 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539158789 seconds)
  done (took 1.957037531 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597174442 seconds)
  done (took 2.04640912 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.989397148 seconds)
  done (took 8.432721494 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.362630511 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47576413 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.69054198 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133349382 seconds)
  done (took 3.148286752 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.724410744 seconds)
  done (took 2.181612069 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231313832 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221907418 seconds)
  done (took 1.922495912 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.389767813 seconds)
  done (took 1.835227023 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.086037592 seconds)
  done (took 2.533648092 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239151011 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163003782 seconds)
  done (took 1.850950058 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.422143195 seconds)
  done (took 1.871632116 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.810965056 seconds)
  done (took 6.26405544 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215317197 seconds)
  done (took 1.711063222 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24485492 seconds)
  done (took 1.697803751 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.706000467 seconds)
  done (took 3.154887398 seconds)
done (took 42.063473171 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084273577 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086394598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086428198 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082028798 seconds)
  done (took 1.773159542 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077884368 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074351769 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077700222 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073803345 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077262881 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074000054 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075501598 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076574807 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073809701 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074399115 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074233803 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07407312 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076155307 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075281166 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072841359 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076131016 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076989135 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073843684 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076888998 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074186113 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071977629 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076132251 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07640391 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073132562 seconds)
  done (took 3.256911373 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080046104 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074006739 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076695466 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073246317 seconds)
  done (took 1.763886463 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079932108 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090682836 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088753746 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079640956 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091949614 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086964014 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070915872 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071051334 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072474601 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079620023 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070804171 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094894451 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088033973 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079215376 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081734756 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067988924 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069177985 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087739571 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079602049 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080336085 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071896247 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079657746 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06985968 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089832597 seconds)
  done (took 3.37830441 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086044334 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101034063 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081917878 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091677764 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092413568 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067579818 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.0879974 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093056754 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126214343 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068064164 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073176242 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06796476 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076206063 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068201338 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082101791 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110852603 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110765752 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07099531 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098389137 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067651072 seconds)
  done (took 3.187591719 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073468655 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07087297 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071549632 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067328368 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078413599 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074454558 seconds)
  done (took 1.900718696 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06987065 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069563461 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068819797 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068911269 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073281962 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068869139 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068098399 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069826372 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069667455 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068878777 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068406468 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06803284 seconds)
  done (took 2.292314143 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.179100141 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070371533 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070028643 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067701213 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072218464 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068598286 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082277869 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069445842 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09303174 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06833018 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068717673 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070717437 seconds)
  done (took 2.442389471 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1935242 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076990916 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221929107 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146132431 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107288189 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111246265 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110728447 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109869035 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135852678 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098998956 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157340377 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158457823 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105367063 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135345859 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089830499 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103892942 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147990588 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160668183 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104794225 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158419045 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140025316 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12465864 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141080899 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100112283 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103481781 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116428168 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072883668 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080158253 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161385006 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126768669 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137860384 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109457838 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095660134 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167070717 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157802853 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135425923 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143178025 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083758785 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104027112 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126804317 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185017693 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087686483 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.297243616 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110422506 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081167435 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12910764 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114821481 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118434154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103950204 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089468971 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140598656 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172902306 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130324718 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086470516 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120789582 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110773013 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109619348 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11047979 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169733611 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152054671 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124416459 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072866869 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109516931 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14428639 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128157042 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106151158 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120495637 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094295441 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128882476 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147713796 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11928516 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137152971 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11387363 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087947364 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117548736 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132560197 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123857324 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154227489 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12150445 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073858075 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117588916 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097558266 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080624306 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142460083 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076003937 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166596606 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098765267 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105729957 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120806528 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105032854 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107223274 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147739282 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281486025 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103836365 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.071601992 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104367152 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.115927913 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139079583 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08731298 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105713604 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114378504 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078849953 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130238584 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076785365 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120437984 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080294636 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120553737 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126153549 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.0787755 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119148786 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102239939 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101418579 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12635658 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151336435 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087856115 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081675783 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156717201 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118989904 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101532722 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136713952 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150085678 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10255818 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09747737 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141391696 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16691917 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089322201 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156149056 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103236232 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083551993 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090404278 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119714855 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109318541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.11974292 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081269971 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114129842 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15579072 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07476171 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094737671 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129712762 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079507708 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0810205 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102814234 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101322197 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095468504 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097083968 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100845383 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130143052 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268519073 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107926293 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121953121 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09789679 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158763628 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087793463 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101855326 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102810399 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07199921 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128950355 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146201174 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079521722 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15628074 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119228781 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113447076 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117209172 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083909438 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13627036 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079106826 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072345723 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136070182 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109830155 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107471996 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.142875744 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112358146 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120727332 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115754666 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126502822 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126925252 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124571429 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105615107 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088199159 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110314576 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123544557 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074332786 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090094503 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081153707 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103292587 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093749773 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083677054 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135795252 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119240036 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110054919 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109710032 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094855422 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139154054 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077153599 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12211257 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117214362 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094476351 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14487946 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143270649 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127846145 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097244917 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278677038 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073620444 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075656724 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087837506 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120613849 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0837902 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083598161 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111776767 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13980835 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124299685 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131282559 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119335442 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116170843 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146774235 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071953592 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116976162 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138175313 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117255955 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104020014 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09012563 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098094 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135827036 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10367104 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170098782 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11214553 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121556935 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148376135 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101821027 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080243061 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101050216 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128165196 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101340015 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136183709 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097144034 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088299481 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106369575 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080139824 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097243958 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124082697 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114620145 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130537459 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109501866 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127937327 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077593325 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110627364 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11869607 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116630219 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068231785 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11437303 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149482907 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09432248 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114715254 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294190135 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080608765 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13260316 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163017168 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138918209 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084521886 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105404306 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117273547 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120800364 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115636669 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13755806 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103813725 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132386589 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108066661 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085839802 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087188727 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094738177 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102789094 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095791851 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101225541 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110553508 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095228799 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127425007 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102275246 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108424774 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115606669 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099350034 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092862944 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09548361 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165664756 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115825371 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16176862 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099336537 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135961775 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157413262 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076174473 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079879334 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079419137 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136824659 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085142419 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126661703 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108678612 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112579057 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119114446 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133243622 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094409777 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070644888 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106104105 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127253811 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118750829 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096798656 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100088577 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152771863 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098490767 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077975504 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258591998 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113499338 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102578568 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161183335 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066459529 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105180163 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077877046 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079895489 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122008641 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143252846 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08166387 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099462241 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117495926 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109532217 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121027941 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097374938 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109728328 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121326472 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139972631 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124033442 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08916635 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108925853 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123121711 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147227716 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100781699 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09727676 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165043383 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144551246 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152209461 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086412274 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112664658 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11221726 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107068426 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132910942 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084065608 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157432023 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08249412 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131296886 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101462022 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087602338 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122273722 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108114772 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087802706 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138029028 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113845424 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082958154 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078288714 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112777229 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114907522 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101157759 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075736309 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282240588 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076048213 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128710903 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153163161 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081788012 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10387463 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094276494 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081675508 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103709377 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100725167 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087075473 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099431204 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160848408 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08755731 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140437723 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128813804 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108775197 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128841019 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100439421 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639058003 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078841247 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142972839 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111539607 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163187951 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098919711 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116071986 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108305107 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117334218 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137282124 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100735892 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174408447 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127217693 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113702527 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079276975 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100775742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102764838 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08725547 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105615005 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111251079 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112355507 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09348255 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113766731 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119169056 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082419417 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09473704 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147461704 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112558884 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138025288 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135889056 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083994913 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113882093 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130788923 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23030689 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116460114 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144230084 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104176081 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099363409 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082350726 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09859304 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151536673 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074739542 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150444015 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120301457 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108213666 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111275927 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108198983 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143620399 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102331042 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118113696 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091025697 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106361999 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110397674 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082413274 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077983153 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103524365 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107925429 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098618608 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096299874 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099673058 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1435672 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074025722 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097203555 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112990637 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137228427 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166761945 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090424208 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083649079 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116936263 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113370077 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110782464 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118273933 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08077824 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082215417 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081487872 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08445324 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107346953 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111172691 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110939857 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106628501 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156412003 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084168866 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.218615245 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093978619 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102368702 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073638832 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078316921 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094535022 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094559415 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251720503 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110353054 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152310845 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095856288 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.0900485 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090604837 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076928949 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083827333 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12133362 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106216515 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114421569 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0995657 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067791621 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104036534 seconds)
  done (took 57.528654457 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10850732 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083750604 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097175641 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147586386 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121901932 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201181068 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160037836 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192373089 seconds)
  done (took 2.679852377 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069950365 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095051859 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103030466 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083750244 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068734453 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069853318 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.216619296 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081235238 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068279145 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095238402 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078851013 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070468697 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.399974349 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068059308 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069104916 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066056897 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069482286 seconds)
  done (took 3.332212771 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.376463417 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.934606893 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.338730717 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079730322 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.578172438 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094120435 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.811341354 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.178367117 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083020711 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.888537479 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411984409 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.175296398 seconds)
  done (took 24.516034781 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084366147 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077997962 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090699022 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090436893 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080314514 seconds)
  done (took 2.058647717 seconds)
done (took 111.591859277 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084920562 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.413152761 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059097084 seconds)
  done (took 2.064512134 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088278824 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086859556 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086547264 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084368905 seconds)
  done (took 1.917389061 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076706435 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078944004 seconds)
  done (took 1.719946528 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224808634 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167779973 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098578255 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086769751 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081546419 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086167755 seconds)
  done (took 1.826726343 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074392808 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076858136 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074950871 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077335579 seconds)
  done (took 1.872610768 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079273462 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057323719 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059715112 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061843384 seconds)
  done (took 1.826841146 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088858727 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084212727 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081135095 seconds)
  done (took 1.823822512 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101059673 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089067972 seconds)
  done (took 1.759377433 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083097667 seconds)
  done (took 1.657189335 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094505763 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100553188 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131404687 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114930571 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137337777 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114793496 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087633037 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087301714 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080974869 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088293806 seconds)
  done (took 2.614739127 seconds)
done (took 21.222737058 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080884033 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.00958568 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362514315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091275466 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671724546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359694346 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.787166587 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094651372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140137921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070369432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087096196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653495386 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.784154321 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.966825492 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.769449995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.967928909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653035106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071913926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071054411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071968315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.767556538 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071332695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071344935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072202452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652507422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374849025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071392341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.967765864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071396102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073769047 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.377263774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07148264 seconds)
  done (took 13.962525401 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073188294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119092392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075210319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086972782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073198268 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072444548 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074938749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072191634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122270547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07129827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088670571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07128212 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07515493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071762684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09054108 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07148543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072866539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07259444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074358094 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071920723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09043593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071335501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071608671 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072992458 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072148059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083512338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071878852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071707467 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071982406 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074198235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074440087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072300979 seconds)
  done (took 4.085739066 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116656796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123697043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076969031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105716403 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113471554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073478641 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144029112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095460937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128080779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071281009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088087638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071844607 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104458317 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071842185 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091871205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072388876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072509469 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072587759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071603258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07171068 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091165662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072316168 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071935307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072203804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071981522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085450499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072276025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072045139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07185806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074128167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075200499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072094413 seconds)
  done (took 4.328612419 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075241416 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077349168 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084973713 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085658001 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07180822 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075024501 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076006121 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072209496 seconds)
  done (took 2.207461913 seconds)
done (took 26.163217578 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082110594 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073225735 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076493487 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090842058 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076988403 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080361371 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070227135 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07887461 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076744666 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076838933 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078013149 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070261183 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074783518 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070550374 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077201077 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071751767 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081643364 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07545829 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080965641 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081587204 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073479614 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075839116 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078262608 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080962077 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080716168 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080707703 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079372437 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075753838 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071555031 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074016405 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079590717 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08695609 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070814812 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080442374 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070831632 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071383068 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074731702 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071210522 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081141128 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078880364 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072546104 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079831004 seconds)
  done (took 4.80137527 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091441256 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095699209 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088109088 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066939145 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072217542 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070524856 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092340711 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065038705 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06482756 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092146638 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.061767787 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064556759 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.068051965 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059518604 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065285185 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062687358 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067139968 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060959539 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.065040967 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064897363 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092621224 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059624687 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079078287 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068020137 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061502761 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066917668 seconds)
  done (took 3.463058158 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076872922 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085378373 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091843945 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140456728 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111370022 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079873205 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08139526 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094576714 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094853713 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069663182 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074203283 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095076641 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089764617 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076504245 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07069537 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086571348 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087537019 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07177126 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076068266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093347904 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087871514 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087411738 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09317281 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086212931 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070539963 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072761719 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074260587 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083594567 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073041831 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079729362 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073880243 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073979377 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07287181 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081389654 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073126496 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071929897 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09529508 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080216917 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081082725 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071051434 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078172466 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071372915 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092798219 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124396316 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070126673 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075503421 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073724979 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080063147 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069792356 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095659277 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081174509 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069870153 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073092673 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069981159 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069781562 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073596256 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072164339 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072803604 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079023327 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075674655 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093193561 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075378233 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085730426 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069699115 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078300426 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069760144 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071046716 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069161945 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093910241 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071747778 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108525076 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070845698 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071391185 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079185365 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078366196 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077090816 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07105427 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085701724 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080349156 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073884374 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078775057 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073854395 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072814646 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097386056 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073105209 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071750937 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071343906 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075756853 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073162964 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071419564 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082771366 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070683934 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072946923 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086553729 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069845629 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071675317 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074887545 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073759967 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069445145 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080302221 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07369412 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070836555 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079594199 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071707853 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072442209 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081551613 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076309804 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069374803 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073786071 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075201544 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070599211 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071633536 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071907605 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071577224 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07823017 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07654834 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073254294 seconds)
  done (took 10.841515707 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163153482 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151173515 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073650011 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144645408 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080136772 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081031111 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146282496 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095130559 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070422034 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071965261 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070994503 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109223391 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104987682 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114893271 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080815687 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070332733 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091745691 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113110694 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146869501 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142441811 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091931588 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078682397 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07307385 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072171229 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072743442 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080060645 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087138657 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07940991 seconds)
  done (took 4.397004366 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081340364 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103547786 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077163099 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093082773 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091391462 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072071517 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07254287 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072445859 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086264661 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079816325 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070584357 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075162677 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076311767 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073434442 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071181384 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077665225 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07673071 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07177736 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074487602 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075288931 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080083273 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093923077 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073900519 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072261729 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074593525 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069619983 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066942376 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085195974 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070752633 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093802932 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068359711 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075364043 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083904183 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071273219 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070776795 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071183685 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070845104 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071095697 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072567239 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069472831 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069155327 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062352148 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06980994 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080256604 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082739286 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060535486 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075467195 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.0761067 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075445366 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068683426 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073383776 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073219071 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073621783 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076997194 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07465172 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075287822 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072023892 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08065301 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078900272 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070314951 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0680123 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069531656 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075671408 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068708919 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084573742 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075018441 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069782869 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070669036 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072899866 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083048011 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070429796 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076111103 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068909547 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073137198 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075170196 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07334691 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071853129 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069499914 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070520801 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071041844 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060010352 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070804975 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058042288 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073441008 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068980576 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069787644 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070479761 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075322567 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081268526 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071885246 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076262413 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071367636 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070851617 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073483721 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064437528 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073280121 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08019713 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083659659 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071079298 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.0688117 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082402175 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075101172 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069514257 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061506057 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073929655 seconds)
  done (took 9.42214123 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093196502 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072931525 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084125605 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091148647 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087915088 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078371397 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079913023 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072141722 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085693908 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077119778 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080214555 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071230344 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080776173 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079257094 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073085368 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080488716 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075241463 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08527972 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08464415 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071242984 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078362074 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082623703 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090634524 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082455212 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081328643 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082700031 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09093741 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080236184 seconds)
  done (took 3.913918105 seconds)
done (took 38.422901512 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.681776623 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.846444169 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.670283903 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.030260708 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.750981593 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.844594599 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.782890301 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.666346293 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.962578052 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.705327053 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.989491175 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.742999321 seconds)
done (took 64.397542153 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.715659733 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.811423139 seconds)
    (2/2) benchmarking "String"...
    done (took 1.917974027 seconds)
  done (took 5.327490938 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.924856843 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.249144572 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.909376625 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.664315567 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.671042343 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.965468632 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.473382769 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.190295782 seconds)
  done (took 29.722691021 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.859727355 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.896745996 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.368579981 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.405453006 seconds)
  done (took 15.184988511 seconds)
done (took 61.562325453 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.666545216 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.675887457 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.712073099 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.651435025 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.724321282 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.681368815 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.971255003 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.718546631 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.665025026 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.658377068 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.667948015 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.099607521 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.66884483 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.030389411 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.667036567 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.674706643 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.734806431 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.328797406 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.871868277 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.68105849 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.68571123 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.724815555 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.671072878 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.680513818 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.721356183 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.667040171 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.076162615 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.672134599 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.290354416 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.66740221 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.700085274 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.176148339 seconds)
  done (took 200.879254485 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.666182388 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.949804786 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.969499614 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.698580709 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.438570903 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.843766969 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.770270027 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.455325335 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.669677556 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.679756297 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.963261518 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.666343493 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.9979102 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.617185502 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.694133379 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.75324556 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.895710887 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.983241519 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.701813926 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.824263707 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.679616027 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.799652844 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.765678386 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.928518929 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.684685026 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.736373123 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.671139421 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.697575733 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.861881425 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.877021598 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.670477559 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.676468703 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.828625405 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.539714937 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.684034405 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.678928819 seconds)
  done (took 167.619691523 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.867599096 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.670361726 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.667624711 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.669389792 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.674376009 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.668395833 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791344163 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797283933 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.343333469 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.340801964 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.723444069 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.668969389 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.558047197 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.669855101 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.741677407 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.682633262 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.67020426 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684115239 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.698374929 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.668471266 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66955727 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794668651 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.682184116 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.668242508 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.676871504 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.668092849 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.674071483 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.973648663 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.668580029 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.67032956 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.670931055 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.674154124 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.915613809 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.669922554 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.668589538 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.606498865 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.837029186 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760520937 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.671419307 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.675383608 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.66942693 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.885994774 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.669505928 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66922777 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.66910251 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.673237389 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89263743 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.670063014 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791678063 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.673043017 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151328937 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.670013663 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.66963831 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.380305945 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.526535398 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.673180602 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.672675341 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.670038408 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669978138 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.68324957 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.446721371 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.748929806 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.672365705 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.67435896 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676115472 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.670452434 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.882800966 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669727494 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.076708139 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.730088688 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.802333218 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79332954 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.673601333 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743113391 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.769522488 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.670446352 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.669926318 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.670795339 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.670819775 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.670018504 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.751454409 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.671215393 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.831418822 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.6794544 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.671846411 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.724779995 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.740685742 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.672049027 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608143696 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.674175379 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.671502085 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.023680438 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.742945915 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.672394341 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.67229726 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.671758302 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.809585274 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794663681 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.378660558 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.673522625 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.672260918 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.349859894 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.824326982 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.672283115 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.898164874 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.675971859 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757904678 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.67766274 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.673352652 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.705052223 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.67332979 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.671685938 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.673223308 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.730130745 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.992330122 seconds)
  done (took 391.50136529 seconds)
done (took 763.523253565 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.290466684 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.253844635 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.36645041 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.272751455 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.246408865 seconds)
  done (took 13.034164458 seconds)
done (took 14.637527546 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.767261026 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.769252761 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.697311711 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.766719261 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.693822024 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.765128626 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.749120765 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.699349383 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.732112246 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.701194703 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.73827916 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.698366785 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.685400215 seconds)
  done (took 24.067450187 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.915764863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.92490553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.745073095 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.912766947 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.720453771 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.923563058 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.839161524 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.825377987 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.827556392 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.690470305 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.686519552 seconds)
  done (took 21.618324955 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.915004518 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.920624164 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.748749697 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.920543391 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.722898862 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.919922217 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.84465028 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.831058928 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830353707 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.692361452 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.687075193 seconds)
  done (took 21.639546155 seconds)
done (took 68.929852681 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.68126343 seconds)
  done (took 3.286699643 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.708131093 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.870688267 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.690166306 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.685150553 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.681769063 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.684305098 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.685315163 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.6814087 seconds)
  done (took 15.293436289 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.68131612 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.681375629 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.679279449 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.681512014 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.682054397 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.681221462 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.681601417 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.680966174 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.679868273 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.679860501 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.680296042 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.680057524 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.680149104 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.679537164 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.681733216 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.682109669 seconds)
  done (took 28.500469441 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.681700146 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.680337803 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.680090274 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.681908566 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.680043783 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.68075395 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.681514055 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.679653202 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.680460495 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.679862786 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.680841984 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.679048929 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.679135938 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.679668366 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.680255358 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.681690248 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.679552871 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.680421298 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.682737695 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.679781989 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.679556202 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.679943001 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.680234747 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.680805598 seconds)
  done (took 41.939431365 seconds)
done (took 90.625141859 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 5.289148209 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.302699246 seconds)
  done (took 11.199178166 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.682433578 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.682335299 seconds)
  done (took 4.976196264 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.684188289 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.682865373 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.6813259 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.681884296 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.681674869 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.681515677 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.68297576 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.680873694 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.680580121 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.681314548 seconds)
  done (took 18.427599303 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.681274977 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.681542957 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.678597275 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.681265908 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.681917831 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.679331013 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.682431388 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.682762151 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.681606969 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.678811301 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.682671828 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.680537748 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.680899055 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.680959916 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.681369828 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.679349501 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.679203138 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.67947944 seconds)
  done (took 31.860696261 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.681425933 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.680978993 seconds)
  done (took 4.968577744 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.67814952 seconds)
    (2/7) benchmarking "second"...
    done (took 1.681516127 seconds)
    (3/7) benchmarking "month"...
    done (took 1.679046305 seconds)
    (4/7) benchmarking "year"...
    done (took 1.678702031 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.678173122 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.678746206 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.678260933 seconds)
  done (took 13.358322292 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.681138005 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.827798938 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.89218971 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.588217435 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.683314788 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.684279851 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.830826681 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.684708422 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.685816408 seconds)
  done (took 19.163460064 seconds)
done (took 105.560027758 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.601199237 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.680916175 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.101121563 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.73415457 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.723249681 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.984580538 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.685389731 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.87974355 seconds)
done (took 41.994830128 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.759942277 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.42633047 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.474806341 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.6935607 seconds)
  done (took 15.191908623 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.662942916 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.960556721 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.676665853 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.501709684 seconds)
  done (took 21.452588629 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.037035731 seconds)
    (2/2) benchmarking "read"...
    done (took 2.017539371 seconds)
  done (took 5.657830345 seconds)
done (took 50.66188525 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.672907597 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.672489833 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.67225753 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.670359433 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.672770553 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.669457777 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.670400511 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.671983499 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.672208092 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.672335355 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.670836693 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.672060715 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.672287246 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.672362663 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.66978799 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.670345467 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.672659014 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.671149164 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.670966333 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.669828494 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.670024113 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.672398998 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.670711065 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.670194274 seconds)
  done (took 41.71146467 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.672799511 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.672192522 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.673317528 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.674233209 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.670525647 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.673124751 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.67316061 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.67166721 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.67360923 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.675073635 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.670925707 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.671519415 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.673219304 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.670712235 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.673594556 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.671680269 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.672698458 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.670324182 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.672489543 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.67146707 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.673014051 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.670849659 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.671372076 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.672259679 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.669999909 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.670523774 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.673089224 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.67257781 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.673462512 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.670988911 seconds)
  done (took 51.765665333 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.677571152 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.680866593 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.674265289 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.672524878 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.672402213 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.671902905 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.673345115 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.675028664 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.673792891 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.667545563 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.668439939 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.667922863 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.668030407 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.668482445 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.673747121 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.668089908 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.667380514 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.667472443 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.667209023 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.667514009 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.669204199 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.668508976 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.667712625 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.667316492 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.667331153 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.667796296 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.668091851 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.666266115 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.667354405 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.667559578 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.667828389 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.667393203 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.670897414 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.666089648 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.666444406 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.665953922 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.671846633 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.674626496 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.668060093 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.667404247 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.667833393 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.666601867 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.667133074 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.666981782 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.668514587 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.667223233 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.667514945 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.666271464 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.667432159 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.665981376 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.667517583 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.667215848 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.666590117 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.666889003 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.666416175 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.666746461 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.667234245 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.667302752 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.666804153 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.667186986 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.667012903 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.666883012 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.667988422 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.667237305 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.668957022 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.667605538 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.667409164 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.667919664 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.667109493 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.668193613 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.667711416 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.667626154 seconds)
  done (took 121.740396324 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.66755885 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.66581731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.665377438 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.665593821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.665967596 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.667666869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.665545137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.667646691 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.666075393 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.667430716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.667438688 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.665663763 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.665928474 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.669305502 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.667251426 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.66495145 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.667205163 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.664641632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.666351615 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.668925121 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.66545515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.663850557 seconds)
  done (took 38.255491567 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.66625476 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.665562202 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.666359812 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.664495785 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.663716033 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.665264756 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.66535215 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.664746045 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.665754608 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.663125376 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.662243645 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.664944372 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.662536591 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.662790331 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.664364708 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.662120641 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.663714643 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.662100246 seconds)
  done (took 31.546756753 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.662625645 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.663161767 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.664006324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.660865726 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.661061231 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.663089364 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.661681756 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.66283605 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.662423031 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.660556631 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.66265218 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.662693236 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.662165793 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.659648182 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.66235885 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.659169339 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.661171217 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.65824354 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.661793311 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.659058519 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.660587869 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.661054856 seconds)
  done (took 38.142429758 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.660603016 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.661082893 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.658691863 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.659606599 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.659301371 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.661061268 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.661196896 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.659859291 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.660305953 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.662241688 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.658722029 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.662229964 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.659890907 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.66106526 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.660635697 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.661310371 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.660672479 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.659871892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.660779727 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.658760535 seconds)
  done (took 34.795027625 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.662688506 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.661828185 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.661463183 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.662172832 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.661652948 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.661302652 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.662066496 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.661527961 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.662907572 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.663111014 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.662438498 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.661529747 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.662634743 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.662080464 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.660776139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.662319055 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.66149781 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.661783423 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.662302898 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.662277135 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.66233528 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.661139336 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.661974889 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.66248319 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.66402503 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.661310192 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.660967753 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.661367094 seconds)
  done (took 48.123285937 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.661416237 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.661618367 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.657996491 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.659195663 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.658091862 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.658245216 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.659471944 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.658927177 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.661762794 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.658465751 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.660533978 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.66015524 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.660970001 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.661085059 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.65982283 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.659337322 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.660433155 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.658723544 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.657934981 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65794962 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.660080046 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.660593229 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.660630441 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.659452392 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.657682958 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.661338299 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.658265836 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.657511697 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.660130645 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.658618174 seconds)
  done (took 51.373834972 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.679631565 seconds)
    (2/2) benchmarking "in"...
    done (took 1.683311613 seconds)
  done (took 4.949382902 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.657940622 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.661115833 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.659708379 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.659002795 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.657809718 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.659845011 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.660716534 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.65796137 seconds)
  done (took 14.85958908 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.661075428 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.660062727 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.660536125 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.66065829 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.660539801 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.660829932 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.668527155 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.661313165 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.66134189 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.661038061 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.666185151 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.668037864 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.664683249 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.660218891 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.660630328 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.662561395 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.6603453 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.661459044 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.661772923 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.660778655 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.661636048 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.662674785 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.663211454 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.658845469 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.663169261 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.67010923 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.664829457 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.661575274 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.660275083 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.663845469 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.661578211 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.658321975 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.660966989 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.661726299 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.661084819 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.661604122 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.670194233 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.661319888 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.666938156 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.661017127 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.660285236 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.65927107 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.66368586 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.66190461 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.662299331 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.660929286 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.661316265 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.659325561 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.661344021 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.663609181 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.664967876 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.660938341 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.658674036 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.663394266 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.663745827 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.667612238 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.661463417 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.662604884 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.668019474 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.668717009 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.673119201 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.665523798 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.660886975 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.66057887 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.668703002 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.679006063 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.668873857 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.657949165 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.658684023 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.659968323 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.666084424 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.671647479 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.668965749 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.660525417 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.660265928 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.659374884 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.659737134 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.660464559 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.667963978 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.662956219 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.660600612 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.661081701 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.668917324 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.678019644 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.660259023 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.659989253 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.659705698 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.660615123 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.660657872 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.669975657 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.662279415 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.660355018 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.660191609 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.660591643 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.661900375 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.66124336 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.660653278 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.660571463 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.658046543 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.660125168 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.66078816 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.662635081 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.667993792 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.660173497 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.660680151 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.667258089 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.660663524 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.660748064 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.668573683 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.660896189 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.661772555 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.661313987 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.665786903 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.659376377 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.664716588 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.667800379 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.661712642 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.662899981 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.661323909 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.662212523 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.670633439 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.681970224 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.660088186 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.661327875 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.665293448 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.670258351 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.663007169 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.664373497 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.661011721 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.659884116 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.659154048 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.663520413 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.662499191 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.662212262 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.661961844 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.664540304 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.661572343 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.66190481 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.662905227 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.662679114 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.663201467 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.662254889 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.66332418 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.663966294 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.663295553 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.664140087 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.66878854 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.661595148 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.663207583 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.663034645 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.660906022 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.661848072 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.662958612 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.663980776 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.66281366 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.66290558 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.66309258 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.663757146 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.663284266 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.662323214 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.662049235 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.663900893 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.667206818 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.664934777 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.667039235 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.663743276 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.661917094 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.662699089 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.664382028 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.663003246 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.663778041 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.662506315 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.665922025 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.669629383 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.663164719 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.664656579 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.665342912 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.664175065 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.663959099 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.664489135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.665765264 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.670630801 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.664323883 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.670107974 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.664187268 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.664318881 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.66260323 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.666427964 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.663518154 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.664416899 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.667129149 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.669903634 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.676643287 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.671832573 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.665398499 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.667186271 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.665564828 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.667973709 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.667937361 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.666795744 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.663892771 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.664610207 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.664500154 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.665318189 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.666659775 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.665031719 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.664111212 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.665364262 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.663500872 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.665041782 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.664807733 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.666210221 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.666197127 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.66277996 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.66466466 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.665674899 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.664433495 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.664154747 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.664804799 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.665128255 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.667556216 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.6664981 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.671885795 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.664772317 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.667514492 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.667793344 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.664835105 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.664650632 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.664968104 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.669134048 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.665056535 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.67265711 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.666558538 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.666727106 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.672286368 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.667043355 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.666488559 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.669583183 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.667448696 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.664979299 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.668306314 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.672686222 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.665487903 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.667022791 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.667066078 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.667038458 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.66633767 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.673782165 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.664979559 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.667893614 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.666186854 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.66869014 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.664684419 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.668798891 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.667300088 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.667320884 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.670400344 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.666345046 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.666729554 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.669215829 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.667372111 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.667144914 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.668556173 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.668399332 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.673317526 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.671784193 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.667369269 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.668792606 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.669014992 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.670599597 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.667806218 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.667203888 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.667670407 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.679209695 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.675414578 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.674415498 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.669437215 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.667291433 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.673546429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.66951499 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.670402873 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.668719046 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.670087326 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.668319074 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.668056887 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.666156395 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.66949953 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.668752281 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.670176188 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.669903606 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.670963201 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.668533445 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.669774806 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.669228693 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.670377127 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.669397615 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.669357936 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.668558255 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.670629252 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.67102043 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.668937537 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.669244276 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.675281245 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.669025416 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.670531382 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.669132849 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.670491861 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.667806698 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.670945108 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.669930613 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.67333978 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.675671902 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.672424847 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.67693626 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.671091241 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.677808835 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.670091961 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.673506127 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.677217136 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.667387083 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.668892425 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.670326668 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.670791806 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.677427695 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.671460199 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.670391622 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.673374219 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.670171585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.671144694 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.67116026 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.672204539 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.670047197 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.671021569 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.678190187 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.672153156 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.6725192 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.673570842 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.667568379 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.670715609 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.670729044 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.670350812 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.674849971 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.673212201 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.671683842 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.670407528 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.671327794 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.671053496 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.675556347 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.672861934 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.668784097 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.671312307 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.678522372 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.671801408 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.674393452 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.670732003 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.678808331 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.671155629 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.678384722 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.672908305 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.671675624 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.673165316 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.670688743 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.673571938 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.671183428 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.672492656 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.672184979 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.672836644 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.673875974 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.671680118 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.674766889 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.672552177 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.672337528 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.672933887 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.679873183 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.690492181 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.674059726 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.675249832 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.670600305 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.674405822 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.675719231 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.673500628 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.672543527 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.675336797 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.681390737 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.679921707 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.672330865 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.672450542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.673150322 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.673967578 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.673242227 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.673750529 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.673319675 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.673645677 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.674288425 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.674014123 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.67575334 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.673765687 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.673725052 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.673946802 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.673525854 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.682040384 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.673633796 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.675757457 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.674067574 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.67378842 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.673808126 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.673619136 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.673061109 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.675621716 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.673209428 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.674248114 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.680153208 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.678787496 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.676564005 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.674335832 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.67458629 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.676064588 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.675327821 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.67546423 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.674622608 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.676226834 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.674986432 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.675015639 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.675039017 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.673690725 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.674224848 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.675542784 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.673936804 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.675756997 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.67966764 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.674472027 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.671956839 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.674789647 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.674632584 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.673448761 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.675532481 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.683362867 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.677936694 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.685096509 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.680677196 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.679107906 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.675435582 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.677035576 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.680730788 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.674972411 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.676084054 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.676184145 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.676392169 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.675630958 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.678323781 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.676671909 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.681868239 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.674649148 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.675230608 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.684235283 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.677510423 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.676587678 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.675717542 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.679716195 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.676268509 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.673584689 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.675783252 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.676830073 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.683195554 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.678442562 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.677355677 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.67800478 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.675121515 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.677967761 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.680311572 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.676747841 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.677281536 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.674087784 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.677946654 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.678978953 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.677434155 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.67525703 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.676908842 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.677954372 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.67976614 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.683671785 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.675105735 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.679576374 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.677336098 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.678389119 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.676179068 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.678061535 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.67669915 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.674722857 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.677747482 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.678452131 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.681339578 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.679322607 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.676139833 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.677534893 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.678742892 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.678123832 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.680466206 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.685034744 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.68286476 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.674778326 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.677852389 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.677933853 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.681614233 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.679002433 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.678169941 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.677955607 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.678973943 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.678099629 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.679940747 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.67752495 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.681158377 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.691891806 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.679122656 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.67856279 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.680357298 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.681274193 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.678656741 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.676093112 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.67901778 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.680845031 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.681467034 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.684952781 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.67953628 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.685982169 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.679468224 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.679751089 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.682398587 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.682144783 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.685344938 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.681626384 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.680290718 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.679484315 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.684882181 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.692679801 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.679188565 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.687750001 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.705082847 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.682089007 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.682955822 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.679172989 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.678923597 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.680210209 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.680985339 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.680560825 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.681283987 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.680067691 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.681740677 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.681086638 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.684472167 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.680963985 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.680651563 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.679801535 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.681310597 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.681322575 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.677608372 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.680318139 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.681725932 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.680273846 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.6815261 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.680665988 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.680471388 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.692277863 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.69018154 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.68106484 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.681131149 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.677861444 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.683196048 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.682902238 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.690467751 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.687220855 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.681081146 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.681418843 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.68219949 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.681075773 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.67949286 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.681584918 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.680883183 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.681058836 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.67815368 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.691700996 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.688302621 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.685104424 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.68167702 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.682648652 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.681960298 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.682366715 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.682877314 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.682227964 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.684442492 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.68208583 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.684952873 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.681642687 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.683295938 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.6862761 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.688005332 seconds)
  done (took 997.620102919 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.680264714 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.679753369 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.681386849 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.68075307 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.679615981 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.680232777 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.680586202 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.679943999 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.681018867 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.679827838 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.682197515 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.681735065 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.680094363 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.68119339 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.681228343 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.680579716 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.681487635 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.680246818 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.680469752 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.680819664 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.679581051 seconds)
  done (took 36.900620645 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.683269381 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.680390882 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.681588438 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.685187185 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.680426992 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.683185376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.680818413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683487483 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.682733244 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.681993521 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.68339889 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.682829125 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.680990286 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.681401286 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.681014074 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.684795528 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.684489441 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.681656908 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.683295974 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.681649275 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.683882655 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.682896084 seconds)
  done (took 38.623475872 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.685459952 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.68595026 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.683842241 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.682939131 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.68515469 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.681451043 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.684720798 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.684491284 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.684108642 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.685188706 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.683786433 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.685259167 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.689668556 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.688319045 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.686773174 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.685255107 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.83721978 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.685921857 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.685234664 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.684449156 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.68268499 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.689441031 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.683086375 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.681884019 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.684457819 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.685438029 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.684448583 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.684315647 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.686511958 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.687061124 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.689242128 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.685589596 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.685229142 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.687049389 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.685508457 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.685751462 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.688088384 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.685680805 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.683427012 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.685853924 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.695867357 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.701081724 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.685830609 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.692239646 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.685412121 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.685153435 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.690405884 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.693332533 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.684291507 seconds)
  done (took 84.389850653 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.685505052 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.685792222 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.685409486 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.686516384 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.686092754 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.686495281 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.686162781 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.686107289 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.684570471 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.684082849 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.686436234 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.685153873 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.685040885 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.687944014 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.687713559 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.685426745 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.684577519 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.684290571 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.685673548 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.686914016 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.685111819 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.687448476 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.686803263 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.685536727 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.68778651 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.686622733 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.685678031 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.68809181 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.685295456 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.685307004 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.686827234 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.688025752 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.687218856 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.686441773 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.6852676 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.687071033 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.687868871 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.686859483 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.687442878 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.685841892 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.687604015 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.687804085 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.687927822 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.688878284 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.686163374 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.686603324 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.686215934 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.686106179 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.685658049 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.689683266 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.688249556 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.687785011 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.687865716 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.685972685 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.687669034 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.689250808 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.685478205 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.686545906 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.687610478 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.686183958 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.6866792 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.689625873 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.686548214 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.688134354 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.687904026 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.687643263 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.686216924 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.688663848 seconds)
  done (took 116.308327419 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.693755515 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.689528994 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.690090008 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.690453449 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.690761976 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.690172728 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.68997119 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.690015044 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.689268715 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.689399506 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.691240942 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.689964135 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.690035077 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.690363973 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.690658122 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.689828129 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.690782498 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.690442917 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.690577595 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.690043996 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.690566387 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.690418338 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.691750858 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.691541596 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.691078955 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.68999938 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.690710181 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.691892578 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.690724264 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.692008453 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.69167502 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.690483818 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.691455521 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.691761454 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.691001197 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.691590892 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.692100094 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.691304753 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.691478354 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.692984026 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.692030883 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.691929794 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.691419678 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.690935932 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.691218808 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.691562742 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.691139543 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.691796208 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.691917709 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.690988347 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.692055133 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.691969843 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.691700605 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.691634673 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.691143596 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.691762502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.692322656 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.693911901 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.69119854 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.692484799 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.691279898 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.691911176 seconds)
  done (took 106.468082668 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.691402275 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.69088954 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.690512619 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.689774443 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.692691894 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.689841193 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.693135107 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.692221907 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.692231707 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.692179552 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692297297 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690259617 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691637917 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691913077 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.690857876 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690779722 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.689944785 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.690929815 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.692153284 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.689908188 seconds)
  done (took 35.441978292 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.692268979 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.693781006 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.69047081 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.690724769 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.692901207 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.691206478 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.693081615 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.6929668 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690455137 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693422755 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.693256508 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.692994615 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691071068 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.691992723 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.693151596 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.691602054 seconds)
  done (took 28.693273744 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.691711861 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.692482921 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.693149058 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.693230981 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.691570449 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.692173914 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.692952418 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.691915936 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.691358167 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.694500199 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.694256838 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.693735512 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.693725781 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.693732316 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.690744938 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.694152105 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.692127187 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.691601179 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.693699049 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.695015374 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.692926588 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.693558914 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.695135357 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.693809193 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.693065734 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.692887624 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.692443291 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.694092528 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.692417398 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.694187418 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.693134917 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.692945396 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.692973091 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.691902477 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.696471192 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.693011717 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.69524148 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.69555866 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.695145777 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.695080313 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.694828695 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.693319886 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.695361585 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.694714292 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.693262214 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.697765638 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.692520708 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.694160938 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.693056207 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.692968444 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.695203202 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.697059813 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.695058313 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.696170001 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.695280239 seconds)
  done (took 94.774069314 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695223704 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.696144659 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.692904611 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.695472362 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.696382086 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.693742875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.696320103 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.693531213 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.69372952 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.695752561 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.695106042 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.695384262 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693806846 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.696684891 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.694665667 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696609045 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.694251888 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.693901603 seconds)
  done (took 32.13007338 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.69502418 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.69398838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.697410942 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.695036158 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.694937386 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.697842059 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695021439 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.696538921 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69721207 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.694445924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693746045 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.697938854 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697028282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.697202947 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.695487778 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694899119 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.697103518 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697210866 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.694944215 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.694102085 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.697641576 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696886508 seconds)
  done (took 38.93338825 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.698547234 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.696359196 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.712383588 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.714019918 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.717580115 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.725926115 seconds)
  done (took 11.886438251 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695721863 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696879092 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.694829995 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697502174 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698329637 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696314992 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695839647 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695699704 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698043621 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696189365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696005425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698460423 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697979441 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696913453 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698376303 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698419049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696433973 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69557648 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696717987 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698884374 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696908432 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698925494 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696419679 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696350982 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69680512 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69775776 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699016431 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697136487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696614515 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.6987239 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699083378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697008296 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699851309 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697690383 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700054449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699432875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697374618 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698799373 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700088818 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697110441 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.69991956 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699270546 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699637744 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697682531 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700266538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697451363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69764714 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698679545 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698934313 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699817533 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699971377 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69771155 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700723253 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699882115 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699989637 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698296397 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696847985 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695816634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698260541 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695689645 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694858747 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698309256 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696641785 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697671695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69836629 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697139334 seconds)
  done (took 113.680563408 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696990485 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.696266771 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696452141 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697838736 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696574111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695599506 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697085405 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697197545 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696738732 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697688333 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698712327 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696762181 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697692173 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696886464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697448166 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695929271 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697276018 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69672511 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696724073 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700204789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697654109 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697068876 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696459254 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69729165 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697453339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69980123 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699236903 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69848176 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698188149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69831214 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698653878 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697953006 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699441964 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.698635139 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69850023 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698572494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69816097 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697131396 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699724708 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700255667 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699053443 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698764163 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697497818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697747742 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70043714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697819958 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697510534 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698061517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698498566 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698399662 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699176684 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698342718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698389397 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699353701 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698786792 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698732881 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698808639 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698043559 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698135832 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700563967 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698490224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699724778 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700909672 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698766217 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699431641 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699693075 seconds)
  done (took 113.703667422 seconds)
done (took 2328.418659059 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.767963503 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.739004166 seconds)
  done (took 15.131513795 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.862187063 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.816338371 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.699986045 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.706733908 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.700767828 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.716974228 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.720953927 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.699883171 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.700989022 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.700796476 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.701150994 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.88798071 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.726505722 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.701387365 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.700961074 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.791738731 seconds)
  done (took 49.477284081 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.703047588 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.7053476 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.71485258 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.706553704 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.703518926 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.715544427 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.737596881 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.707056984 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.737974723 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.715055996 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.771399096 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.712310381 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.703092306 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.752053749 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.717587171 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.718932893 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.795445527 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.776141946 seconds)
  done (took 32.720034539 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.780627229 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.704494619 seconds)
  done (took 10.117808083 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.729066771 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.718139797 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.717970728 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.701785153 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.713860181 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.716137296 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.732467183 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.725334684 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.713893426 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.978737593 seconds)
  done (took 69.118284668 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.721295094 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.717199543 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.71609781 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.714716213 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.70821365 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.717008641 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.714483684 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.714136405 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.397152141 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.767311544 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.724156639 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.72105723 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.714560703 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.716857152 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.714163853 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.73862899 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.862666781 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.713676841 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.712706375 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.722742277 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.717157203 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.785276329 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.730161754 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.717482034 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.745350037 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.389412658 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.723950344 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.724374981 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.854686803 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.71450305 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.714683213 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.716906601 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.719253121 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.067753061 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.066416894 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.716981693 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.731135269 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.725739038 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.71414708 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.85950927 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.716537727 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.725573102 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.344366774 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.042845475 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.793496725 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.760283542 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.085172281 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.735613187 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.717436009 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.747159274 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.719563786 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.717885764 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.730364338 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.19071396 seconds)
  done (took 124.034967846 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.715285159 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.084139121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.882256548 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.71347087 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003109426 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939681931 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714499289 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762910866 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.717732433 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987249144 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971747775 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82365603 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.716278742 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.711128596 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.714292894 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.71341064 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.887889752 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.791625929 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.715753612 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.711381053 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747770663 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988288611 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.854242231 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.716235946 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.742220893 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.927096649 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.852418767 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.823699822 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.568046286 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.71266445 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.782701338 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.715680269 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.715440576 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.712743966 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.876420698 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.814552636 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80659444 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.717014854 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.712512621 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.712532676 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.386949469 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.930559427 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.814596974 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.870522086 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.92724685 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.941482534 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.62074948 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.712601949 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.555891143 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.895740962 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.94551492 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.990560597 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.861088004 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.717074414 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.167033181 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.713462608 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.713724945 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.967499164 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.875502265 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.817479955 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.717662236 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.713284721 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.714125737 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.963188604 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.718110448 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.815106772 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717061409 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.716870086 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.814969969 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819081455 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.872060694 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949935087 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.752156979 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.991543259 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.519359418 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999884939 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.787820812 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970363847 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.717749354 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.714155062 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797817569 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.748077005 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.973689021 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.971347352 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001404075 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.758159933 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.538448507 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.715064124 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.972779601 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.967181887 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.992411771 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.940191642 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.961545563 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.148552382 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.716261046 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.714888075 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.414612903 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.866427326 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.718457534 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.073904479 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94907426 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.588017998 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.738724311 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.026585234 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.875770049 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.719308893 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.357708084 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.718221186 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965299749 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.765818974 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.718854582 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.717462812 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.968990985 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.763697815 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7169041 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.550187973 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.784446932 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.720706112 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987502556 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.719511896 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008517676 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.720643677 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957330229 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.268346766 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.752138018 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.910668075 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.941398164 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.721966934 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.963901623 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967342884 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.854588397 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.960160537 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.584659272 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.718228333 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00670656 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.721098474 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.716574268 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.890103391 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.719140783 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.878295978 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.723231189 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.02689516 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746181929 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960433553 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.72245201 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021909273 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.754619934 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.772760044 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.72230415 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.849969499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.720207694 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.669193601 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.895004877 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722973467 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.718027436 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.457831986 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.718134406 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.871274474 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.955008192 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747568627 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798445599 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.486189109 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.718897567 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.803829201 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.747570568 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.121713332 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.719914968 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.973348473 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.723077505 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.718757591 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.718725996 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.961686144 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.924630226 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.721258321 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.719377461 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.689671793 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 7.167782207 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.718665876 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.90331701 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.132242615 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.718972204 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.924228718 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.724624848 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.866473262 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.721818121 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.046931448 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.068478058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.720290865 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.721283772 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.721920397 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.72184215 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.723137858 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.949948462 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.756626331 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.261506765 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.861492 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016983211 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.039253168 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.998976984 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.773245776 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.724755921 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.026765369 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.724155049 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.789481707 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.723483949 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.744939042 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956358671 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.724020984 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.988129525 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038638867 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.599583668 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.77208968 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.723697353 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722743273 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.720413781 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.890565442 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.811301678 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.724625957 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.722026025 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.850424329 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.863712594 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.93437996 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.723979655 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.210745476 seconds)
  done (took 873.737685897 seconds)
done (took 1175.962063763 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.72161088 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.721192333 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.710993069 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.723414892 seconds)
  done (took 28.526555943 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.729826541 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.726003719 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.729200202 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.727250518 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.729749844 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.72665383 seconds)
  done (took 12.018851038 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.740067812 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.722214038 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.723681535 seconds)
  done (took 20.836395259 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.799520139 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.115987907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.856563928 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.182365619 seconds)
  done (took 9.605884009 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.729987116 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.728261321 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.728868693 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.730136292 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.729944096 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.731656137 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.730237364 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.729834265 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.732352916 seconds)
  done (took 17.224187549 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.814451226 seconds)
done (took 93.675042292 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.083132106 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 6.852824976 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.073710042 seconds)
    (4/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.864369971 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.710830731 seconds)
    (6/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.728443617 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.942824909 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.887828453 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.749003889 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.743909188 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.745993245 seconds)
    (12/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.816196163 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.82304017 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.791352839 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.887909286 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.971981257 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.14875604 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.904170032 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.7107172 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.218574496 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.72503884 seconds)
    (22/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.009364386 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.710394053 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.936987986 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.959438189 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.054850882 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.735861752 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.929376636 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.818455307 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.812942503 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.233202717 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.827017605 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.872774491 seconds)
    (34/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.852251201 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.87082173 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.712416699 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.547594797 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.809513736 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.870164099 seconds)
    (40/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.250591772 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.71898866 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.185221362 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.069081078 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.687821108 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.791664891 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.809864358 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.232075555 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.213269948 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.638501569 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.236906002 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.930534286 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.817016896 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.945775548 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.532356503 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.253609133 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.035956325 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.982373781 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 5.632685226 seconds)
    (59/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.813537307 seconds)
    (60/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.855430356 seconds)
    (61/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.096115738 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.956219848 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.892198763 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.750450867 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.912808504 seconds)
    (66/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.841020364 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.826153578 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.726886413 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.953175245 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.407979011 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.417257451 seconds)
    (72/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.89479395 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.335902201 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.748062258 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.809859724 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.751002061 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.996839512 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.447459396 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.783194624 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.177917481 seconds)
    (81/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.729311952 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.198582417 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.408715238 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.856831948 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.43140974 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.37816566 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.267938194 seconds)
    (88/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.717745969 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.94278676 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.862570931 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.743909632 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.714696115 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.37292469 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.011507127 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.745677861 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.856461394 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.105275681 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.757798242 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.851884829 seconds)
    (100/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.110046936 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.303970945 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.763275032 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.934262704 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.064187615 seconds)
    (105/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.75890409 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.9342038 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.110828486 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.846891212 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.83221395 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.679273272 seconds)
    (111/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.958936596 seconds)
    (112/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.742795056 seconds)
    (113/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.943884702 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.060292577 seconds)
    (115/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.819845914 seconds)
    (116/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.859291226 seconds)
    (117/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.754113333 seconds)
    (118/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.246053106 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.758532427 seconds)
    (120/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.760969321 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 4.635106485 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.825234988 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.735197609 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.972794889 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.707166229 seconds)
    (126/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.760408711 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.969671027 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.353983583 seconds)
    (129/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.731965885 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.878698703 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.731653424 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.277726908 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.086953667 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.734066838 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.949702193 seconds)
    (136/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.839837384 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.085219728 seconds)
    (138/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.866408102 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.759022212 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.893558301 seconds)
    (141/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.929569699 seconds)
    (142/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.830705225 seconds)
    (143/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.75583819 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.893552393 seconds)
    (145/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.76707016 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.814476085 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.721808974 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.868005551 seconds)
    (149/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.834687541 seconds)
    (150/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.838693876 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.733161324 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.179108999 seconds)
    (153/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.055333313 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.722592744 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.01298674 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.720237447 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.485481669 seconds)
    (158/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.816253845 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.69692326 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.734191902 seconds)
    (161/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.733999186 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.888716925 seconds)
    (163/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.762292411 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.919346953 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.151923306 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.184958834 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.739008083 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.722332538 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.153418425 seconds)
    (170/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.863757493 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.757162672 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.969017378 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.826552573 seconds)
    (174/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.732541116 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.655422853 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.728038864 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.206608241 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.737522178 seconds)
    (179/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.869482913 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.002386554 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.155736376 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.736431508 seconds)
    (183/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.915403186 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.884329215 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.972006921 seconds)
    (186/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.051722005 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.189763823 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.168601388 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.099305758 seconds)
    (190/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.788915105 seconds)
    (191/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.281256849 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.871093429 seconds)
    (193/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.451787153 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.806471847 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.066501161 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.348635198 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.919897961 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.990301299 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.789129753 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.82661259 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.950762296 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.350810963 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.614298842 seconds)
    (204/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.867936732 seconds)
    (205/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.323454137 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.819857576 seconds)
    (207/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.758877067 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.736060644 seconds)
    (209/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.820004511 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.702813668 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.967859227 seconds)
    (212/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.325737233 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.856487055 seconds)
    (214/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.820041714 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.73741364 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.322439905 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.058499246 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.744964361 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.80904243 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.844867007 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.750821619 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.869322857 seconds)
    (223/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.860238049 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.744776732 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.002815462 seconds)
    (226/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.849545673 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.974532606 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.953979829 seconds)
    (229/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.316649274 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.685816683 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.834872019 seconds)
    (232/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.827056822 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.115968623 seconds)
    (234/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.126364723 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.153025279 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.739198601 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.977155073 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.109289411 seconds)
    (239/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.884242893 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.735007437 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.824050007 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.670358112 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.078897088 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.738984132 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.800247828 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.691839935 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.766492657 seconds)
    (248/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.265296254 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.32766762 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.949848373 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.72839506 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.82895234 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.652476587 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.742408486 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.022814351 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.741063324 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.739378499 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.819888929 seconds)
    (259/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.026144226 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.738796825 seconds)
    (261/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.187735564 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.090979714 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.952567031 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.726284312 seconds)
    (265/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.844518921 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.755133666 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.48509315 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.749355181 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.662753137 seconds)
    (270/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.904694752 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.813313562 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.742595381 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.608218417 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.753312593 seconds)
    (275/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.896038121 seconds)
    (276/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.902599781 seconds)
    (277/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.888148632 seconds)
    (278/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.744683451 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.44487415 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.127066501 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.830148236 seconds)
    (282/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.042637693 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.194761178 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.75089155 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.85069536 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.582413438 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.822654604 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.737363078 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.696234067 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.775487777 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.7378175 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.115715706 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.972393219 seconds)
    (294/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.873716385 seconds)
    (295/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.207277245 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 5.632112228 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.114925121 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.888792885 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.592040468 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.073076963 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.752411169 seconds)
    (302/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.98480407 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.071487058 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.000243819 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.965307074 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.902854046 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.034325035 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.730268966 seconds)
    (309/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.815688704 seconds)
  done (took 970.426392277 seconds)
done (took 972.135071211 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.948610787 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765371358 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.748704879 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.76913362 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.870046287 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.777676515 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.759036356 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.751474718 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.775728431 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.777637291 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.745362496 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.777005786 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.750883317 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.749744455 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.749059674 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.762875307 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.064390874 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.780608131 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.765728617 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.759009918 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.766850947 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.744816431 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.776947449 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.776592047 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.752402949 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.751684014 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.752673697 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.769808923 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.872151575 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.751609058 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.751669407 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.76006898 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.063674447 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.779698489 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.74471478 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.769276685 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.762189243 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.759893081 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.753246248 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.780445541 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.149740185 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.788765122 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.751432821 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.749974473 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.750415661 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.754312029 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.750871661 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.757883352 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.763968966 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764290428 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.145819679 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.805856973 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.753197241 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.751472158 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.76109741 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.750655967 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.757196849 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765642441 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.771213893 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.766706443 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.048724349 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.787848318 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.754124903 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.766162586 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.758782383 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.182137748 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.789070524 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.757574603 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.152589098 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.797956094 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.183704473 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.800314542 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.753487041 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.765468156 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.783937086 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.0663548 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.776896691 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.750450996 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.759128449 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.748534295 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.761986857 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765756852 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.755705978 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.752852057 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.766107937 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.781457215 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.761857579 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.751936995 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.761538038 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.771102824 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.75931561 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.762654273 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.756536247 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.748355921 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.764109322 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.759833838 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.754424853 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.755308822 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.757738033 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.762791273 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.150100057 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.809501221 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.750191849 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.749646987 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.751910953 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.766653554 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.15173015 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.794018552 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.775816264 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.779585478 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.756890002 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.051212021 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.787526952 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769479506 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.762591112 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.760050008 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.74896515 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.050038982 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.18014385 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.808610458 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.754699534 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.749764487 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.769623999 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.7575821 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.751215891 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.069416354 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.784635461 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.767853364 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.875306846 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.765650641 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.786671818 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.751608666 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.758631071 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.788190396 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.769867904 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.785029681 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.757726722 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.769748 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.770883129 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.751417852 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.765449769 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.76504175 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.758265337 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.761968435 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.749248966 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.788527544 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.767844834 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.767729983 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.775977205 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.876198563 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.75397576 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.051808465 seconds)
done (took 277.068744685 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.826510776 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.747931666 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.851085937 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.752937238 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.838329139 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.841907143 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.750003336 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.75029206 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.749506385 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.133508929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.749853723 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.749996002 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.748540118 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.750682027 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.837569498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.752821338 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.750838693 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.122846442 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.753806439 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.830203798 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.753762397 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.752079442 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.752908478 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.170456128 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.754861117 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.748264842 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.829868549 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.75360947 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.128490371 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.752886797 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.747858147 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.151785965 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.849456827 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.772335816 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.763959653 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.760837905 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.840022544 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.759898657 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.836996375 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.836637379 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.852477316 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.794219691 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.750484596 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.756559885 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.757285284 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.754744421 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.751776291 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.782801793 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.747249815 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.762146226 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.097751438 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.754541327 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.762220461 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.751383516 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.753084775 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.783680053 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.753193852 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.755686079 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.850899398 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.75576984 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.817196972 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.138848351 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.167876808 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.7555128 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.749802187 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.752340635 seconds)
  done (took 176.791065642 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.819727427 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.827112515 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.822701269 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.759570893 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.804360165 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.826933769 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.760391039 seconds)
  done (took 14.295094964 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.762590355 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.756823642 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.808622864 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.808696256 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.756195421 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.927672224 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.754848914 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.766467532 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.75509567 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.809301572 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.75646703 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.75488985 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.764102409 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.754216759 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.807776413 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.767818182 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.873289926 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.758185892 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.756699915 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.905957591 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.75466828 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.763913757 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.790955692 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.76778205 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.757309291 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.763281278 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.357416014 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.757601489 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75445211 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.755839735 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755205766 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.806868228 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.75655506 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.75352715 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.755357834 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879864093 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.756490869 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.754503069 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.756871388 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.759787104 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.756567406 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.75693326 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.756776317 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.754954319 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.757642658 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.779241994 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.757276275 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.756656088 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.75675728 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.757059994 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.793079591 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.758033159 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.755327168 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.75533009 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.813854542 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764621089 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.758422618 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.755252092 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.757982338 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755331154 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.906939327 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.810124176 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.757695179 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.811247569 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.757977604 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.759160431 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.75725883 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.758452061 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.85774478 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.758233304 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811818708 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.756716297 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.926639386 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.783046127 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.759742911 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.762089452 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.762627598 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.75917141 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.755367232 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.765498707 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.756973101 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.759948992 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.765022577 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.755555531 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755810904 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894116752 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870379367 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.755709423 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.772318447 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.766166322 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.756879042 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.797988508 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.758671683 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.757324592 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.818771455 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.875338147 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.815938357 seconds)
  done (took 194.910302077 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.764040781 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.766925882 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.761122566 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.776199891 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.75959478 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.760690446 seconds)
  done (took 12.26872104 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.762558075 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.762224338 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.758508674 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.760078608 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.758891403 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.760034063 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.761076002 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761699136 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.764415381 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.760326706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.7621586 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.762375285 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.762244306 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.760465463 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.761055399 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.760237349 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.761115845 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.758636574 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.760862884 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760424904 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.903241205 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.760231866 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.760864553 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.761440848 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.766370302 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.761805145 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.770507809 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.76149689 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.761855189 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.771379763 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.765122254 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.762127012 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.762132209 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.770163632 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.767232837 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.762761766 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766544727 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.763265728 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.758815358 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.76214214 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.76243463 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.76204883 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.761568964 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.763938119 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.766327236 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.766927582 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.767694359 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.770055282 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.763458577 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.76295039 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.763624793 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.762075611 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.763848221 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.762465523 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.765133557 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768439822 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.767799893 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.762514293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.762700645 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.764142655 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.763901891 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.763839687 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.764372185 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.766400146 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.771107416 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.764093147 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.763711416 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.768215981 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.763325228 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.762546306 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.763772055 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.760810628 seconds)
  done (took 129.787945554 seconds)
done (took 529.742873048 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.893348306 seconds)
  done (took 8.577387149 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.82934498 seconds)
  done (took 8.554803689 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.252183818 seconds)
  done (took 9.946920934 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.773657835 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.805452231 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.765833361 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.761965826 seconds)
  done (took 28.815679395 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.009729636 seconds)
  done (took 8.694002495 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.783678648 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.757796283 seconds)
  done (took 15.257351697 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.808234069 seconds)
  done (took 8.493513451 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.837047875 seconds)
  done (took 8.546940112 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.78663635 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.757862157 seconds)
  done (took 15.244425645 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.746463168 seconds)
  done (took 8.431334449 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.345407607 seconds)
  done (took 11.111235669 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.781332911 seconds)
  done (took 8.557467416 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.849981615 seconds)
  done (took 8.534890181 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.777918229 seconds)
  done (took 8.463683937 seconds)
done (took 158.91240178 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.762562395 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.757232871 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.758015971 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.759787104 seconds)
  done (took 28.722198379 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.796911405 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.797237098 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.799948043 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.808029099 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.804699659 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.796909381 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.793384642 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.793991815 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.808802134 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.801765652 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.800084479 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.803013369 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.800653177 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.791460359 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.802582371 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.799266726 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.809935439 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.800373022 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.791275474 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.802527511 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.766121874 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.809830555 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.801363625 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.765727109 seconds)
  done (took 44.831639891 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.982440862 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.835317987 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.932264264 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.819123054 seconds)
  done (took 9.255607341 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.817786231 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.818212929 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.829444005 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.874763973 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.945085732 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.826882026 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.791812909 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.787892198 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.773109563 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.818753497 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.90743074 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.813768743 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.974705231 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.765328497 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.015329019 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.765241712 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.765990933 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.818223935 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.872737956 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.936000086 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.767191627 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.818301579 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.821245944 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.814159001 seconds)
  done (took 45.825449993 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.764680258 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.77300368 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.771868426 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.766260934 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.765901793 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.765697542 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.772225908 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.767162002 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.783343273 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.767641524 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.766465728 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.767425677 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.765924353 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.767304983 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.766406188 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.775239271 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.776477016 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.767028708 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.772379153 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.77198227 seconds)
  done (took 37.082261974 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.76254274 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.61222894 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.112671739 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.019718929 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.761618376 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.761814334 seconds)
  done (took 30.718114249 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.78286125 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.773984322 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.767123421 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.824943443 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.909876028 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.775000737 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.767477401 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.78178218 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.816102884 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.835175222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.790162466 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.797077973 seconds)
  done (took 23.30969065 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.765078889 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.769776995 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.764200501 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.783468826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.778295119 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.775615167 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.774233196 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.762006831 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.781463072 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.786279972 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.776800945 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.77876921 seconds)
  done (took 42.988284896 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851915744 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.650919852 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408365614 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4141547 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768810501 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973093573 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.744633567 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.93579146 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.766480218 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038375921 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.269805229 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989658815 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017519064 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76540911 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837071717 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.249497683 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059729497 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997357246 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789702494 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513108036 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870654929 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.190019891 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.749136734 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.87649303 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973954784 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.764993502 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.02518779 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.765461051 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906145434 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793912425 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774985276 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765987738 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039150289 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976697579 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886457439 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774507617 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.404604837 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.769760232 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.760735742 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.541864639 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.404829937 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.883854524 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774067307 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766026971 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.698116014 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.175001716 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945447557 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.771059934 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.468583297 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.766579385 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.77520064 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860757996 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.76847573 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.766868194 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.69521208 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.772375353 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.764947429 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772573831 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505589238 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846195298 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271490006 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.707866559 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.870726111 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.55090083 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22542775 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.91465715 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.769718037 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770993328 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698826899 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.539933151 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876532581 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911903858 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.79490485 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247839831 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058205847 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.332832104 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833653368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057788372 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.606984372 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.707987849 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001270864 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285715575 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7005771 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.733985198 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.701761226 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030617559 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80187162 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.700602257 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806852867 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937172158 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.777717583 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787873585 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774783884 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.990289243 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.610525651 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768340297 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.21391341 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034620875 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789911661 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939078384 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701435073 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.772541525 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022068587 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.978911227 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.945329728 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.263736619 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920898801 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769125824 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.858304769 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.58151107 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.786802703 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.041896412 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827214055 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849125901 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885844832 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.771414346 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073336479 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79552146 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.942245801 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.280002921 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022208484 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.109688756 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796202018 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915560384 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.77839213 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.770134626 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56009923 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857984616 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.770374366 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.773586011 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.184054113 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.786345442 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.771423241 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703492792 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.438359817 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.274658293 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.426784435 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992512458 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.764262275 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051396583 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703591881 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915329064 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.886797686 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.9927013 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.408662172 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.832604498 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026178752 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486521617 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.966771996 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787568373 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78663064 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928793433 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791684629 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.263468137 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031119648 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.775884455 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.774912779 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.65871094 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.859662582 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775183328 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.776318828 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562179987 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048655714 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.795448015 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.780477364 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.708385287 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.785594352 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917391405 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778625528 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.780319567 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.373807449 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.449955605 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.783312789 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.427486347 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00289209 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78134688 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.540740061 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942829535 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.853339151 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045170143 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83167716 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.704537496 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.474839506 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.480647517 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7747123 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706678789 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.773792159 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7816315 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782659385 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.079384023 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.048780999 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815588772 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.541004358 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.873981824 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783538843 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.778446784 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774077488 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35419275 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860842902 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297974692 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.786850448 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917338724 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.787566888 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706318604 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.777234877 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778739833 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.774131532 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.774350955 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847064846 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.544639187 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09097944 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029770176 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.40733833 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789956119 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.548224791 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.890223681 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.863043108 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.228215732 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887966185 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.790518018 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835644636 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.78488503 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.550167221 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862097671 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505082304 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07122511 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088826148 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206678397 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.313538694 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319564402 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948854616 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009211721 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.776341457 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841818538 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955977559 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719258361 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861278577 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.412455731 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111888317 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792842834 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009670811 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154681965 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.292201083 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921915587 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985504176 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846538722 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.449777905 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827554769 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.624690688 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931405122 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.331619732 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985253397 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94409409 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.23181722 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896869339 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.776096375 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232830185 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85843094 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.778901873 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.779111081 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.219274195 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.295525002 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134250818 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.784734811 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778360638 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135916555 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.066237121 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.87116982 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710925815 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787599486 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787318942 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.779284828 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.797944596 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.6346146 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.031486373 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788835532 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011120506 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.004222963 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050958109 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.755143815 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.783398363 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779582058 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080900785 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496920758 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021291425 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.156705767 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.419899446 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791113783 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.711206667 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710364054 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.487139181 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.783627512 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751825276 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009737454 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.884400433 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709036066 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.083918919 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097423041 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033509461 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.792769015 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050196418 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061852299 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.432492433 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807364667 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.879347969 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.241433361 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.886622415 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32240586 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.014498203 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577258173 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009155342 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417868234 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.226783261 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.783355226 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993617705 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324739412 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.286064972 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029506604 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.502175936 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.798240482 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119591697 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837651393 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.28290137 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873586251 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.884671713 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790921993 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86800587 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789819787 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.790717374 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.790715288 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8275098 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.293676332 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901741112 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.795294175 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869885165 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873180434 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.412042899 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.79298042 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101820188 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128006442 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106490924 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838807786 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.782254933 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784022359 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714305964 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9318751 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.783145019 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056152621 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.912322687 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.925073796 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808651103 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.229612297 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.974357113 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098663567 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055405321 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.782682066 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782832218 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850374518 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.783083396 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792139742 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.991840661 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016255852 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109570919 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076207861 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.839603005 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060594023 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05787137 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.784631625 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78305392 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.101640601 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.796492559 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279933952 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.822779604 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.302528113 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063011448 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794573965 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994511742 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801906617 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.973839879 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.235900961 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567037196 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13301024 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.001968569 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.829106042 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056450532 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.173683779 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091663355 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871666307 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794223809 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.606198975 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934563667 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.675442877 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34220735 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784904162 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994357723 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.496578243 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.792746429 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060769132 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090258911 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.784133321 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.709313175 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812965708 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.794747757 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008241337 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051159743 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035994853 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794533481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.790512545 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.606946174 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059068631 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842550363 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718588867 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.789525356 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888637911 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.027448133 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815546581 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.308973861 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.487987795 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083344792 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.701090968 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808102372 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.062279945 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234299768 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110431772 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.367484935 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022828418 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.812022269 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.671587613 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166496883 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.791386344 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.152106103 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168919068 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.790967124 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.331816259 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902957409 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.057886977 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108269332 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.800839242 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.585627085 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.821510871 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008587353 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340927341 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72702768 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.801734076 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.854060015 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.787638651 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.922798109 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797888997 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.740885228 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.690884653 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.613844341 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147924319 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.79277512 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.780340203 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.247650389 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313022157 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898914203 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94104243 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792282302 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.489384729 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.092406129 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040912705 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.31979213 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.867658077 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.790358029 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78757151 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712845968 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788195537 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.091982671 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093847656 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.178116715 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.901987562 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790465965 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.000904494 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996166358 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.300280717 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931651358 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38396623 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904006767 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 5.139698956 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.788812349 seconds)
  done (took 1683.175056611 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.808398879 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.825417676 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.816903797 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.849532902 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.832514485 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89676903 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.882084144 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.859299207 seconds)
  done (took 56.48404872 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.788242164 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.964383288 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.79661378 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.788900763 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.803741766 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.789507799 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.500168176 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.804795734 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.817758795 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.795653392 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.789847055 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.790548485 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.109481877 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.810914462 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.786755397 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.79418683 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.801278957 seconds)
  done (took 73.503782096 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.786659112 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.525162384 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.815178997 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.801899007 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.11326683 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.791393032 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.368948786 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.786055517 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.794112978 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.161163992 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.117348153 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.871716121 seconds)
  done (took 87.641236589 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.790603541 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.790067185 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.79075923 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.790266788 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.790914471 seconds)
  done (took 10.662671183 seconds)
done (took 2175.902128067 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.042162463 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.974361565 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.013730391 seconds)
  done (took 5.697080612 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.931834241 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.981545445 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.099686887 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.393029382 seconds)
  done (took 10.121159064 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.093787705 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.169012363 seconds)
  done (took 5.971880639 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.153105927 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.805820152 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.16796974 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.788894119 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.7858704 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.793395999 seconds)
  done (took 22.08314697 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.789541755 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.792957703 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.789809855 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.790943726 seconds)
  done (took 8.873806798 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.772530129 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.469736795 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.772035436 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.788847854 seconds)
  done (took 20.512430303 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.536434227 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.913882954 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.479614202 seconds)
  done (took 8.639483644 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.341041493 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.747754271 seconds)
  done (took 8.798714691 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.947681149 seconds)
  done (took 3.657159129 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.817991313 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.060113883 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.287502465 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.317943687 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.402324112 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.625053934 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.129721559 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.023176421 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.238315772 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.248627761 seconds)
  done (took 23.862742171 seconds)
done (took 133.094131632 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.346765089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.127119726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.9893165 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.957239879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.024230592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.987858689 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.199506384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.944796957 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.813989222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.80217812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.954461215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.043970635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.147924627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.122463072 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.154328694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.122899748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.018672021 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.365141096 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.826045016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.918717999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.209737877 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.790180847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.798471306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.80507919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.024503645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.943271695 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.275186747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.124149803 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.97473965 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.283206634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.97196729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.063555476 seconds)
  done (took 166.843026695 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.789256112 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.568839216 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.792010272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.387086184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.531185353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.790067145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.790643906 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.381041073 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.394364909 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.380910617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.361278085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.523031009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.794958975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.750440301 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.7925601 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.774546128 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.575751641 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.792239212 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.789700527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.789966663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.790284465 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.343175106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.199238286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.35116411 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.534821399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.790814213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.790099258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.758712552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.791326746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.792004263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.791306808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.791327648 seconds)
  done (took 206.189914828 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.791327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.790559338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.793554559 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.790878058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.790970594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.792846282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.79356045 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.791852542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.79030151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.790908578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.792492408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.790583543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.792015754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.791165723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.790783842 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.791312307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.791565057 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.792259699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.790598093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.792024276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.801704694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.791140943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.805468549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.807023254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.806914231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.805335822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.791363142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.806535631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.80678297 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.802976482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.80495799 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.792112653 seconds)
  done (took 219.170804621 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.049954832 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.796317658 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.797413055 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.72912392 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.797922105 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.795402878 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.742717176 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.043622814 seconds)
  done (took 18.482687098 seconds)
done (took 612.404293113 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.249743579 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.095437099 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.953393959 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.824195481 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.043285857 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.853664383 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.819775355 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.882242043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.429124202 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.886644413 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.454885699 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.837960007 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.539401478 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.843482914 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.923651951 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.876636115 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.361578095 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.448990401 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.981354822 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.881861493 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.96358616 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.767861397 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.899634556 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.464260421 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.562808459 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.809720802 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.891798394 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.364456977 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.829803619 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.958889146 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.551778954 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.1180145 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.832200385 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.816157062 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.871806022 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.85175022 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.090176013 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.829184839 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.915875706 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.571105484 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.86896444 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.340192134 seconds)
  done (took 99.074204314 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.788948802 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.788313656 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.787242069 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.789179614 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.788025352 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.788796124 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.788313613 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.787237683 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.788475086 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.787441286 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.786844865 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.788060348 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.788760412 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.788135394 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.787991251 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.788515629 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.78850618 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.789704053 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.78839153 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.787432051 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.78927872 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.787778261 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.800746007 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.788832941 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.789614369 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.788888436 seconds)
  done (took 48.236701697 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.800586838 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.9535185 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.061587081 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.823363189 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.800256034 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.805583407 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.819380026 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.805995404 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.803236549 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.802058145 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.895134836 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.808947033 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.819315321 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.060322873 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.817918098 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.800963046 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.80071359 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.801408488 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.958836091 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.817393268 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.821915135 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.806262455 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.819613423 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.814864193 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.804425484 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.802020697 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.805034201 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.242394751 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.812432288 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.897396364 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.848431235 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.824157105 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.215398052 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.072065883 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.856859903 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.810090313 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.801690459 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.90086964 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.809712318 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.801947627 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.820718828 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.808361771 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.059469044 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.257611952 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.818945942 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.802780733 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.254242433 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.909232852 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.845967631 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.814066358 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.063068667 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.820817974 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.803894184 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.803673653 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.840292233 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.808833765 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.803448219 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.109524352 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.817861605 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.82202844 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.809389751 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.804026928 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.963415128 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.813989301 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.954041698 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.813107981 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.810704816 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.804552785 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.061510256 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.821034356 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.263489785 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.81882884 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.804010636 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.898616628 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.959500032 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.281318768 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.817887601 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.962747851 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.235872844 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.830312703 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.812033925 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.233149214 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.832282585 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.811406576 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.807024706 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.806535823 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.803975299 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.852861476 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.820650331 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.18856338 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.270735422 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.126697744 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.831761195 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.819678758 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.805117963 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.107636228 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.813048476 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.804429314 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.056385561 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.274735277 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.819299688 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.813040791 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.246216315 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.822999824 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.824031417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.815224344 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.069929501 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.822328025 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.853414458 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.806769808 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.811489279 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.8094047 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.823479351 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.814713631 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.806329922 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.243163319 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.921481974 seconds)
  done (took 223.961995072 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.801407742 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.805353127 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.80095764 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.805087195 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.800071565 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.804933503 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.800290339 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.800551423 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.805629409 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.800403027 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.8004197 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.802857324 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.802909064 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.804264261 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.811625494 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.80620312 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.388709352 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.8012471 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.801660962 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.801017259 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.449378841 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.808977584 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.802204861 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.800840872 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.803037105 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.802472583 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.805767983 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.805474114 seconds)
  done (took 165.452218523 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.806309962 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.923160477 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.822871323 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.83527905 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.816093856 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.805080286 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.831024782 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.823418849 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.813278112 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.805172962 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.806773084 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.868958879 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.817940052 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.905704554 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.838193498 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.83974944 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.910754245 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.815698869 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.805934311 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.805571183 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.836842816 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.803251718 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.868695555 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.933906026 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.823917482 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.924446664 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.812401856 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.809210689 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.80853979 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.924236907 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.821989284 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.868975209 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.834695064 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.827335958 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.930005296 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.92332034 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.913439135 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.836082479 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.812181766 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.806301596 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.80735612 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.796858291 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.924620261 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.825638742 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.809586484 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.914502853 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.824776615 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.809633487 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.81990584 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.807738448 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.821909564 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.827433513 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.875918309 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.939876306 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.840707068 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.833964939 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.833431774 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.100630393 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.816621312 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.907877267 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.803134654 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.925442303 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.827687308 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.797648122 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.8101683 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.815001707 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.838499197 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.841075005 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.915074472 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.816469566 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.909128834 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.843514328 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.816635164 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.808417709 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.811292367 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.928360142 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.926516184 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.843052301 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.845737538 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.840946403 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.8059645 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.809815487 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.799228005 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.827509006 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.813138713 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.925291673 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.925167827 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.816971942 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.81163735 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.811584631 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.811199076 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.836118595 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.936019896 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.843944912 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.905101547 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.876850797 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.884763433 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.823098303 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.822929794 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.81408195 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.875143453 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.824790582 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.822495348 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.15010817 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.879325698 seconds)
  done (took 196.100354748 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.288424866 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.866628589 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.868498008 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.128372251 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.153319804 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.895309805 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.857409802 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.862210398 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.888306591 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.053128245 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.934839777 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.879879004 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.848805362 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.834042829 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.861293735 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.884422341 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.87159296 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.193674913 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.955843524 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.984990864 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.840896003 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.128247215 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.131672975 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.256993055 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.89673563 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.183546927 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.539004778 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.004970666 seconds)
  done (took 59.828531588 seconds)
done (took 794.368333263 seconds)
SAVING RESULT...
DONE!
