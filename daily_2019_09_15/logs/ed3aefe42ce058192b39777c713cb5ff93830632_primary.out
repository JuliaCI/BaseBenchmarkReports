cset: moving following pidspec: 16660
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.382294077 seconds)
loading group "string"... done (took 0.561575594 seconds)
loading group "linalg"... done (took 7.130346847 seconds)
loading group "parallel"... done (took 0.161567218 seconds)
loading group "find"... done (took 1.132567701 seconds)
loading group "tuple"... done (took 1.790015798 seconds)
loading group "dates"... done (took 1.271303917 seconds)
loading group "micro"... done (took 0.227156809 seconds)
loading group "io"... done (took 0.926094238 seconds)
loading group "scalar"... done (took 37.750441875 seconds)
loading group "sparse"... done (took 11.989815751 seconds)
loading group "broadcast"... done (took 0.975730491 seconds)
loading group "union"... done (took 12.832802138 seconds)
loading group "simd"... done (took 4.613724041 seconds)
loading group "random"... done (took 9.294368726 seconds)
loading group "problem"... done (took 1.817900767 seconds)
loading group "array"... done (took 21.651124065 seconds)
loading group "misc"... done (took 1.770308404 seconds)
loading group "sort"... done (took 3.49603973 seconds)
loading group "collection"... done (took 17.797550499 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481958925 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120635706 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112921248 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117524661 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.131761686 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113397408 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120727311 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082622592 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.788735866 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143918803 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117329981 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410337473 seconds)
done (took 5.003692339 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173105608 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081937367 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081318589 seconds)
  done (took 1.246237537 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066609689 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120122114 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065911142 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06603596 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06583375 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066663623 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066901746 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067236296 seconds)
  done (took 1.602815129 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071902813 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068453788 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068306982 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06833052 seconds)
  done (took 1.364235428 seconds)
done (took 5.547231137 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761239739 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205085641 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183060309 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39790214 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130414352 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155782352 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641295489 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315000017 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185302769 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080717718 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103743043 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.314872947 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106322087 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640818451 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076520918 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089403366 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135783273 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426553967 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067247071 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083112974 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088235642 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130310743 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087230841 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073877027 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.140751772 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06690869 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128942409 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079821455 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065978352 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205635722 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172330143 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651584398 seconds)
  done (took 10.116588413 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095539319 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096424736 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068367453 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135962051 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098247967 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070804753 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072455174 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068216986 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088347707 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129868505 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090970498 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102946425 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066855926 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069867322 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085712343 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206903422 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080625625 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080852714 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070949097 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076119317 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116245111 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079272998 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078020632 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076505348 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12773406 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182674579 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099975676 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099054988 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068495618 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081732802 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1159903 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127877591 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066625081 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067518752 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125874796 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096110424 seconds)
  done (took 4.588222046 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.27892672 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140849858 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089828454 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.129906494 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064514077 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105909728 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065022067 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080454923 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202691785 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.303857752 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.578437748 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110624139 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102662384 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066858487 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067771134 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066397319 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.337198221 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106578584 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10248424 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08058666 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069011994 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067826765 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362832488 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067727503 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064621768 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069235237 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058853012 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124465038 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068923947 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.923405086 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124552298 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067604675 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101720447 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166975834 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086003321 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.271602356 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070850458 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066030423 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153157561 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069654033 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085635526 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067472446 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088271175 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106176488 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115823996 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067064305 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068631651 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163969355 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066806876 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080372542 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.984332757 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155013672 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078901539 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066373928 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245967226 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085821161 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068896225 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063795387 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182383149 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137066101 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0685782 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067611777 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069224987 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063637659 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068583882 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349877313 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065550258 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.711211058 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069557495 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077752134 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070824205 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070961606 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09186744 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074426243 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07427466 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086123665 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067155979 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076443431 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066874069 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066476583 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067655759 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086373332 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358942889 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065217982 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067055967 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064928396 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086891608 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097810649 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06769408 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065728635 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10173614 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069385776 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.17434063 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106397921 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066735518 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084249597 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069188918 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113054461 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069241433 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101851065 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066936141 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098645908 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070256907 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100283581 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065907331 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083367193 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069727563 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.401963016 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064813834 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064525848 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067926604 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067138241 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068863107 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068195708 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081378676 seconds)
  done (took 20.887137544 seconds)
done (took 37.956132 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.277984325 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078651871 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078442793 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078653438 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078636222 seconds)
  done (took 1.775146343 seconds)
done (took 2.941356476 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11905926 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098615144 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065075812 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095445405 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065480197 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100516033 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099110325 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080776341 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098219368 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063858217 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095337642 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06374789 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063538719 seconds)
  done (took 2.292959895 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081435199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082314235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070753154 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084761192 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064669868 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083852835 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082367341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089943796 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081905541 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073345989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064963455 seconds)
  done (took 2.018474214 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081094321 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084789626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070408261 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082785498 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064848584 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08259628 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082236498 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087046022 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082360866 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074949617 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065244723 seconds)
  done (took 2.014389659 seconds)
done (took 7.479087888 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077077151 seconds)
  done (took 1.225329839 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.599222576 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.113894614 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080274627 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111749859 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183467362 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12061238 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270950686 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087847073 seconds)
  done (took 8.903396548 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088757144 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08334029 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069349052 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069857424 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070456479 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069409742 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070532904 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073593281 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07308583 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072967342 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072273752 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071846696 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070937 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070071724 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071923448 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073132147 seconds)
  done (took 2.400773772 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091818196 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09140152 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075418755 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075916332 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07316582 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072980724 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07555209 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075143543 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071955602 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073526862 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07609259 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074610711 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07247337 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064383181 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073028246 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074626296 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070375488 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073675645 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074946206 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076211048 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075956264 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065817037 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072409383 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075122055 seconds)
  done (took 3.050258963 seconds)
done (took 16.735602562 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111357055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072259761 seconds)
  done (took 1.332004314 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081086732 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083927649 seconds)
  done (took 1.330842776 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081947058 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065231261 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08954843 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077015808 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065372514 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065312947 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086441563 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065616534 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067108015 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067885119 seconds)
  done (took 1.895766162 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068213917 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077486776 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069268172 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079721856 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072890545 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064001333 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071632103 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067589688 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076753006 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062108503 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070032763 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080766598 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069839159 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082793446 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071300878 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06758086 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071363107 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067989316 seconds)
  done (took 2.459520465 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065012941 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066010083 seconds)
  done (took 1.30161281 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066700285 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063473206 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066055177 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06547674 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062386351 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063269617 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063724205 seconds)
  done (took 1.615779583 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386182212 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109116682 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300012627 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071701309 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083284621 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253952657 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066920504 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071137691 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069928697 seconds)
  done (took 2.626915594 seconds)
done (took 13.727926152 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079283396 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085147312 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093993975 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36141365 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091150091 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065291052 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113593662 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188297127 seconds)
done (took 2.25962313 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209600701 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609170307 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.378886729 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196113972 seconds)
  done (took 2.363127352 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32326604 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086316526 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060160211 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068485275 seconds)
  done (took 1.713816268 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065470478 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068319486 seconds)
  done (took 1.304574273 seconds)
done (took 6.771637577 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065892903 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084516978 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066165304 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06396792 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065401824 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064810814 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063232878 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063150076 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065697198 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063049987 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067935034 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065301564 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065909192 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06559123 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062840312 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064940712 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067053915 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064748373 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064654916 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067932426 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064454525 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067237117 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064681445 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064463392 seconds)
  done (took 2.791673312 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082565949 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066911385 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072009629 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071310357 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069689153 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072820503 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072564453 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067517384 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072921035 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069242494 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070910578 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071306446 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069373211 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071307471 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069434519 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070995001 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072795362 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067663269 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069096163 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071265133 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071958313 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067623347 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071028904 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072365088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071210087 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071412413 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069252941 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067625779 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072060148 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069960756 seconds)
  done (took 3.308698655 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068900784 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06297466 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063843624 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070787383 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063190126 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064516316 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063075913 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063960582 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064060517 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06414836 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066204652 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064672379 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063724388 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064707962 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06555195 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068299565 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080347264 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065650159 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065208373 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065331864 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067931761 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065089074 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064971145 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064982174 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065131844 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064827363 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065296374 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064779195 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065356026 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.178121577 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066418661 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066319345 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063001601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069650147 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066509451 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06271542 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066842683 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062761586 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06359059 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06257784 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062457995 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064149582 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064461452 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071711241 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065032608 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066083908 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064702052 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065779998 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064901979 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067183021 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064409028 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064653451 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066511276 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065910988 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068510256 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064137043 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065400873 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06394364 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065305682 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064050603 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064003131 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064180885 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067360418 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065074822 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079278864 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071578929 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064506826 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067812002 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065748449 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067152015 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066519473 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07828939 seconds)
  done (took 6.048730364 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08593951 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087150051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064634601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065510328 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061498668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063559208 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066960947 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06380518 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064843367 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068926288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063435973 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064455012 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064527292 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076265983 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064063461 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064742908 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069114557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061655575 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063137878 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066613806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063789136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066580813 seconds)
  done (took 2.675657184 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152370959 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069321415 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104664845 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072034892 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067077715 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071763436 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069138258 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06978718 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06937348 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067400103 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067807073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069279119 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067143936 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069048236 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069535611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069433401 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070951926 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069481339 seconds)
  done (took 2.557913383 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076406663 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065562302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086163731 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065278984 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065570068 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067837811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071960626 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075652329 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069263538 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067099187 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075352657 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069461035 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069494028 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066839233 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069419815 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067181454 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068994924 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067222041 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075067066 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071736592 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071763625 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075130592 seconds)
  done (took 2.753070951 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078665297 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067611071 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081986287 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068370874 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06194358 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063483179 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069099304 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065192772 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069725947 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06691037 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065772255 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065317281 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070407979 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067025526 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070454739 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066772493 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068108311 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066762303 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068585698 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062756498 seconds)
  done (took 2.562048438 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085717392 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067620163 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06699523 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07501812 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066447328 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066901588 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074796439 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066654974 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067267895 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086388288 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066764176 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066730877 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074723637 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071670415 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067904147 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075771097 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075904686 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076329385 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068320946 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068704656 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088800039 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068466776 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076594626 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068323013 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067034849 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06687805 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068035312 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073088957 seconds)
  done (took 3.211296723 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065306625 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065343627 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064190834 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064279359 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064400018 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064408765 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064731999 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064639334 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067269589 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064626875 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067084951 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066892346 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067239923 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067041593 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067295188 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067218648 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066666039 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064941 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06461464 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06460706 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067106206 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067337118 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067028728 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064866858 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064378739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067281235 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064728408 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064475518 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067114291 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064869463 seconds)
  done (took 3.170161123 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074864982 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07232417 seconds)
  done (took 1.34887818 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06279259 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080137869 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063440338 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068808874 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069317074 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066442756 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074262869 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071152449 seconds)
  done (took 1.752151422 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081147596 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078385059 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069415432 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082240622 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078193896 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084653129 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13468358 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067834033 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072187814 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063961414 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079059677 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066566324 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072094075 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066418567 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07138081 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072107565 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063474611 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071581353 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067805846 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064206419 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066844241 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074120189 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067967991 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061805985 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067573867 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08834653 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076357845 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065221784 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068629294 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072745145 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070930899 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060631826 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067641234 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067863074 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065477077 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07767457 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082424059 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070461196 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075889377 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068342126 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077983115 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062249372 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072197881 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073762393 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077165485 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067997414 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067979532 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06210562 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064549811 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069748372 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062559068 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067197418 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061802118 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076602378 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070918925 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077467024 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065880169 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068626369 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069807933 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070170452 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074269888 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069020614 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069344141 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066778082 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074323998 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072299851 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076832971 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062614553 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064166581 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065271149 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077492735 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090473198 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074103636 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06868357 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068112316 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064817918 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070525288 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068220713 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073006667 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072866689 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06715175 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072217967 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074199645 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067460805 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07010091 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075194897 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065550973 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069944295 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064810962 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082520403 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065065853 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064326862 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064119887 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07675698 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069723959 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065940107 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064547357 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07344222 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060456541 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066647294 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067145787 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066813655 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076356126 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070469522 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070959349 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075241227 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073852337 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066423584 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069058003 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062853175 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066719982 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065026596 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072864683 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060111979 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068911158 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066778217 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066436083 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199333975 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064958272 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066387675 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073963778 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073838105 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067454937 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065276081 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071333219 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068543014 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070593117 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076031024 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066972794 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062789558 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063123175 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071757206 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067390134 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071992555 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073359527 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070602148 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062901107 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065995298 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072875553 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077017615 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068585677 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069219174 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073996751 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069464792 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067633366 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074914601 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070660761 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066725567 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073408057 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068894682 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06260669 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070851032 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071444856 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066274379 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071784061 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070922621 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070882653 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069209911 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066703491 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075778682 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068457646 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066996036 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067932099 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067075715 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079671524 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070012164 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062957184 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065281937 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076728613 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066280775 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067015311 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066752701 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070525002 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068979944 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066012644 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067199184 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070099704 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079076492 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072703392 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068506111 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073140232 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079391611 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067996819 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070581779 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06783472 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067864755 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067947698 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076418843 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072388597 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072482962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069576999 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064386088 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072909196 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074723446 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06652813 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064660049 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066254292 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071539832 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073122542 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071433447 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067954616 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065410597 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067812718 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070071545 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069523947 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066465972 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066148211 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073870626 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064987753 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073698707 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067713289 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076963811 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070240256 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061866724 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069248908 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064616733 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072285089 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061605565 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064336653 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066198524 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067169973 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065332464 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068534248 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06020811 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072898855 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073466039 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066643086 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066006135 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066033545 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073046006 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067676441 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069577219 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069789665 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072209067 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075614734 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065628857 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069492263 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076783798 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065088612 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187236198 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072175603 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065597584 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065940702 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065316635 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064617514 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06960702 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075387538 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073386194 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060460832 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068956906 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064348344 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064707745 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061698617 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070914203 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069242429 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067480284 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073536793 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067635835 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068327861 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072058096 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067791738 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0688932 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070353379 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070695652 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068614221 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070173332 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067904154 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072802822 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067239826 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066630918 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069641742 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068100064 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068418985 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073822261 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067677462 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068648316 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070260684 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069470871 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06954794 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068973965 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067197005 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071588348 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069554407 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068859703 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070851983 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063640819 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07518639 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068350718 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075073565 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068150522 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064306376 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075450221 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070554858 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073942613 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068670302 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068514243 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070195306 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067499889 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071099542 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074496497 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065901841 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078383136 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076260498 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068668889 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07071259 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068206704 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069312051 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067125751 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068732881 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069361634 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067768267 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066902309 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072225945 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070452393 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067409966 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069470807 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068101261 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067535525 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068429808 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061857767 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067212838 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066677793 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066755112 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076903954 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067747579 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067003194 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066679532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068744919 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066590157 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064181625 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075662698 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0768111 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067822367 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074114749 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066087137 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068579951 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078515035 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061324623 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065111499 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064562325 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064923274 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073857764 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067491974 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076155248 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066681992 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065683605 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063352982 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066455655 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06474983 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061023883 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064177251 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069599582 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065310086 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065304619 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066747885 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068390873 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066794465 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075816403 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065215658 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067362548 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066494036 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063378814 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06551097 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06576861 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.201824779 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068020581 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066365788 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066599018 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067734773 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069877091 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070018513 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068285849 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069468623 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078364254 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067873546 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071177529 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071700448 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063011161 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07091025 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068075113 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067881361 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067501178 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072023782 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072013891 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069040618 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077111666 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067601447 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068929925 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068096977 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066421451 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068100218 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067550153 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067989063 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067274962 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068685726 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07606838 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06504868 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071202387 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068037817 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069054986 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074937497 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069371608 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07170978 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074484664 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069091794 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070868694 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076773179 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072028922 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071635541 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070097832 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070323259 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073881323 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067086938 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074549582 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068090692 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068278518 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06964018 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066731964 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06739215 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067378367 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066728361 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074152957 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068677798 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067234422 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067711202 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065115018 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068402353 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071362562 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075175077 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070659772 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070992831 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06275621 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064940201 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068397688 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06540392 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068898913 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070216451 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073862411 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070120284 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068081145 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06675623 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07740427 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073650334 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07137572 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066215774 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071228037 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068935297 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070081881 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068681754 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068311521 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069068022 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071948232 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069490895 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067150877 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074888408 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071103288 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068721436 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069419721 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068608869 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067694393 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06285327 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067877217 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069428774 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072359795 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06984497 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067498394 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078234465 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065031248 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067875334 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070171131 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065960525 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071117479 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061618168 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068208542 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066824716 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06718118 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061532772 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065765942 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064870683 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06837159 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065666862 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061652437 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076542387 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075169173 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069210114 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06503661 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064807302 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061249023 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061736099 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.198707701 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068968272 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068940348 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076925013 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066261748 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068200859 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064270836 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068959331 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071573493 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071690576 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065038686 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064072704 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06737129 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07088697 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073977067 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067000079 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068043631 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071608094 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070135681 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066253095 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071624459 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064936645 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072151018 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081473519 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068641643 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069736437 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075225415 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075565735 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068455721 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064016519 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06873353 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071578078 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069064731 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069373395 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069561791 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081621277 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069568891 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065022275 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064983093 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068897698 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0653835 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074790416 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067622556 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067028412 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071449718 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068598744 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075104982 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070390131 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074015971 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069898987 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069686237 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065046464 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066831 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064266781 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065775811 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066769708 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06713998 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071913037 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074913732 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067552661 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078640517 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07638546 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068976728 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063922016 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066226648 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065523205 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062595934 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067991658 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064037162 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065410902 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065726902 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066181094 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06851294 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073218747 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068564864 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068201914 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066992364 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061585866 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069143232 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068548764 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066723692 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063319959 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066344034 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066359578 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069634411 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068545362 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063110545 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067396423 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067086963 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066187108 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060526195 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072031313 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064712601 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067423594 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065502924 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066921837 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068268727 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070635401 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07198156 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067885791 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069550322 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071408237 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069216904 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064851253 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064907771 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072762606 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065353432 seconds)
  done (took 43.054245932 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099709981 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063301007 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061515213 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061369177 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073112566 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063704201 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063467836 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06348842 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062556701 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065102459 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061713366 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061149441 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070394435 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076828641 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073010562 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066147456 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06156013 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062373701 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061368198 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062395122 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069895453 seconds)
  done (took 2.716173194 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073391445 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069657209 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071277863 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075407804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066472912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069618555 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071683925 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070241593 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075197401 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066446085 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074970278 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070094539 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066573903 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066761811 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066119434 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070139304 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075277135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066604317 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.078038654 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071837154 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070051913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072145578 seconds)
  done (took 2.83926263 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066524519 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065762813 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067225095 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060712989 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066009687 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060675977 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068385483 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063322079 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068507143 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064663816 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06483724 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064346838 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067185874 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061056959 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065358937 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063166911 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107688019 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068644067 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064964754 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066291099 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061457072 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067469364 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061228686 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061134636 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065656342 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070278171 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068046951 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065178116 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067147159 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065034144 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065558252 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063313595 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066868488 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0663975 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065336654 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06519306 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065632748 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064958236 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060633512 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063173415 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065409263 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06093466 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065408933 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066324454 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064318306 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065088464 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068625251 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066598784 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062108926 seconds)
  done (took 4.509716409 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079459926 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108237277 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067427636 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087567031 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079141852 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07433289 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068489966 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088385578 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063054183 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063849437 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080526163 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078873093 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065177157 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069588756 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071713365 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06508525 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065907758 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064543357 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069008554 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064516369 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069069637 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071989845 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079375246 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079228696 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070888059 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066085663 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066277766 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071357524 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078337972 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069453431 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069041104 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070619875 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080362964 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072051677 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065733618 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068978545 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082687281 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066640749 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069002803 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064415502 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069262496 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070908746 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073422872 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082623622 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067196799 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071956174 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066734637 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063820876 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079063828 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068902396 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074203058 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08134856 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070291241 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067168104 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070313096 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078902103 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064695946 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063263341 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067671505 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076620781 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062315556 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068500686 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078043054 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066614284 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071695961 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078326025 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070129782 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068710482 seconds)
  done (took 6.315494618 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074182358 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072113253 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080881023 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079387482 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071260944 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071312774 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071308752 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071655349 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071283274 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076003643 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071453393 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091715835 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066994432 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074110576 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072301293 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071301759 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0722938 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071877767 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071593556 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07130337 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071811768 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079214151 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071862641 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078896565 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097987271 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067188916 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071113924 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071424592 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079268804 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071455576 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078518972 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07162645 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071465365 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079332127 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078737696 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071231061 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064505611 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071080439 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071878077 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071079593 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066468554 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08103079 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073158787 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068767048 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073545582 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073503878 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081491968 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080839287 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075267 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076484226 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071727834 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079264553 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071631338 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071541 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079543772 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104040752 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079321586 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079309912 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07182682 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078801345 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079086073 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085624441 seconds)
  done (took 5.9681107 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080618919 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074121399 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075511203 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061057761 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063658547 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069025481 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063729457 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063866514 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073705761 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0739331 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076277876 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06928526 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072148084 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075809041 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068969983 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071794248 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068827538 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069059141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07424911 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068949837 seconds)
  done (took 2.71529248 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07370731 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082217161 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066827601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071408499 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06808907 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071045901 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067982985 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068569315 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066380137 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068858873 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075442346 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075482387 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066554935 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07141491 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074963266 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070608259 seconds)
  done (took 2.434301562 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075199218 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072445973 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079482842 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066093067 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063917018 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062111723 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066233578 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0613089 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061993478 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07739851 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065250348 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067648436 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065352018 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063980986 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062540743 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068500919 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062766673 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063172506 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065371627 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077660335 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077932019 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06569486 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067921188 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06676457 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067224747 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072039604 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066525063 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064802842 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064490929 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067480095 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067845558 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070575589 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064283037 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065326424 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065442848 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064246857 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066754501 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067513102 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06975343 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066781398 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064975017 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066834854 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066640423 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067768411 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063112932 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067170978 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063275626 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068773103 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064766942 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067439453 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066465404 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069230644 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067713223 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073576543 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070031047 seconds)
  done (took 5.000710868 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078571091 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068212546 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061138762 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06314049 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069060777 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068712655 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070970494 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067297523 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066900551 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063236258 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067373011 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068309506 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067887701 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069274283 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068337102 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071084674 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063187081 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069254612 seconds)
  done (took 2.541575188 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071787665 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065805142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073932776 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066563266 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06780948 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069424971 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063201444 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065862118 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065868836 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067353631 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067034124 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069532386 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065682639 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069792784 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067152494 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067093572 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069361277 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065824663 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067134997 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063084458 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069081265 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065685396 seconds)
  done (took 2.797728095 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071856498 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09139301 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138044903 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085115757 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082953411 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080028347 seconds)
  done (took 1.864078904 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089590224 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078072771 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065806111 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087525421 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072498767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066599241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0664409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067306834 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075506925 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075737031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06740323 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076341164 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076953032 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076897467 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073870151 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074400313 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068601236 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068500536 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067670463 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085295105 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068701519 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076988894 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068843602 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06828796 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06886884 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076334966 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077213975 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077477342 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06730027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076814385 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074143311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068661026 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076976757 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077432514 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070078318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07706679 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068641043 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085035572 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074464819 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076225594 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070297116 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074939898 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077478339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073316604 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077323126 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068687539 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073461949 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068623168 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067201338 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085352055 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072446869 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074657913 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073202126 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075333566 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075470691 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085488361 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075720506 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074369425 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072472577 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077855705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07487358 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072599053 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074934413 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075162769 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072461796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075632996 seconds)
  done (took 6.207735552 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081137902 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085954372 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068288088 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076373062 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076749564 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068969253 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069375661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069120154 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068902886 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068522993 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109571773 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069208914 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076771943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076938326 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068972168 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069075555 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069068731 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076809131 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068527679 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087665029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069034843 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076956892 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07690354 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07660249 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077543751 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07433941 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069113516 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069093797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068252157 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066865307 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072783088 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069402009 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076643885 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069081248 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076723896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068995557 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068704471 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073471768 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068670334 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074691009 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077022286 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085012387 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068585101 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06852817 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077156392 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068571566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068412964 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068578988 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06887357 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068800334 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077614947 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077871772 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077461615 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075351217 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067581724 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067339323 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068814711 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069402607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069181223 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074561712 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076625976 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069244495 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087400506 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069071309 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069374337 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076893928 seconds)
  done (took 6.171386489 seconds)
done (took 128.484491128 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185962391 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169137966 seconds)
  done (took 1.661920558 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068543642 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09710782 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.0795967 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131322521 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067181548 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099943685 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099200076 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07750747 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065995853 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065638214 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066149716 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068134493 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130720332 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066422963 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06609951 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068571896 seconds)
  done (took 2.637231288 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096747734 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159260043 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09866038 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064787665 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098422897 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072919505 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064910731 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074530365 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070289474 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064851853 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072448298 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069761845 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064877749 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070309902 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07119388 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074253508 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067043972 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074889725 seconds)
  done (took 2.753356876 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101194573 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090696102 seconds)
  done (took 1.514739498 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154810724 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104972875 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14903508 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34427605 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166227759 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22903511 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127899736 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128151775 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116394472 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12239983 seconds)
  done (took 2.958894519 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098413233 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151280809 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255843765 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114191879 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071891359 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094329682 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115638939 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077567848 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080232579 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079947402 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080397919 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075887422 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100613132 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075795478 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075152912 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077829967 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104445629 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074146189 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075592964 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078872918 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101014801 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067423241 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075309162 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07355455 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078025968 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076722065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065251063 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066649534 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078397457 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075965071 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079259723 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095657664 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077893484 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107725355 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070757154 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106617628 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075461729 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073919502 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073415562 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074874438 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080475133 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079867181 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072357251 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075865491 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065011987 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075576429 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065365197 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064755692 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077184635 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067306962 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077230214 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076299703 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105579014 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066086479 seconds)
  done (took 5.951410871 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101287835 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105774945 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070368787 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107857022 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097461094 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070570613 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100171475 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091001463 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101696782 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092240826 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088894243 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07066994 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08163301 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082757626 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109846941 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100985984 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095401232 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070436207 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101144335 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102320906 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06833229 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095015584 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090826679 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101589801 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067281822 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07068358 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067893185 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07019054 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07666162 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.0778578 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069291071 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101442344 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083713732 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077766143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066727478 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06789588 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067863482 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078974389 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096825791 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078535617 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077233857 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067215396 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067937541 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069329903 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090607609 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068562568 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07914421 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08075749 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079299386 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069392265 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070157455 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067453327 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069498879 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080682773 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078032585 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081167393 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079812137 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067720368 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067714156 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0711872 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079988169 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078283815 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078234402 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092351397 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07873358 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067723106 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08006604 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083374158 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067813512 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069302127 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068010026 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068698451 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069006336 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077853408 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079380411 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071470355 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070796963 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0698363 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08154984 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080184822 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069656049 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07819115 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068873052 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070181396 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071324712 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071637726 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078733114 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080333526 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071011248 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068775306 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069886901 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068924692 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067177447 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074990689 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07756288 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076024597 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076406908 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067839706 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076926037 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075709722 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068354969 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077093206 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.197056051 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071692151 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070372316 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078979868 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079544361 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081791989 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072438281 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070878814 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081327488 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083460307 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071966995 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080919873 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084201232 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082744107 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070133121 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08320679 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068954664 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079831068 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070004317 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079678615 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069355952 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079642931 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069038903 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069602333 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070319681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080888214 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070622626 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070262539 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072275184 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071938049 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081342716 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085919745 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071780426 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08215929 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080054234 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071341355 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080888082 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071591365 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081387182 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071657764 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072264567 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069616983 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084026536 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070243337 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070859794 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07233034 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083301847 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070738765 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081433901 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080834018 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069738786 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086785365 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082584658 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076752309 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079503782 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070693961 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068865337 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068510041 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069436529 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078103218 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079763851 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070366086 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06828485 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07732061 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079129795 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066749256 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077400029 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078014025 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077942552 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068322422 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069122866 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079478349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07977205 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077420757 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077622741 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077673235 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068005572 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076546031 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0771739 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067469956 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082954161 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067630509 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081207346 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07818496 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075438178 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07757889 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079555028 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078916699 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078848743 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080542627 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066305327 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066448681 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077072495 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066396265 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067792928 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075350228 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068351482 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068090929 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08058973 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066949635 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077611092 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066057217 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075918674 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065761589 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068013174 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.212519084 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069290564 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070613864 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080349571 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070711856 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077638978 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081645033 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078367552 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068245896 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070936604 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07975257 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079392339 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068749379 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068448545 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071186618 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079743687 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079360962 seconds)
  done (took 18.765350928 seconds)
done (took 37.574847963 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211969632 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153179009 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179781935 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118197478 seconds)
  done (took 2.094635632 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121269647 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101984747 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096591853 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067088261 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105231274 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067211227 seconds)
  done (took 1.922786622 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310834375 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210441657 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181946947 seconds)
  done (took 2.066831053 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199153814 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191983294 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.403551659 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257672628 seconds)
  done (took 2.519658688 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144164065 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089769923 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06818949 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086010558 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137134359 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162112249 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100731006 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125280709 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077949472 seconds)
  done (took 2.403143712 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147219455 seconds)
done (took 12.529402375 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.206911409 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.203942598 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147923778 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128817775 seconds)
    (5/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162578849 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17158319 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.19673982 seconds)
    (8/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110027731 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097504749 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195799075 seconds)
    (11/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075875614 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.215599669 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089302039 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084524809 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.231960048 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079619237 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075512208 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.181311725 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195363614 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112846536 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.19404858 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075957123 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072462671 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073775624 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081134947 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.153749398 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123906284 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.14904927 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074119836 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073551138 seconds)
    (31/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.151290047 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071030905 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173648678 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07206868 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.147582287 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.134809108 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10780319 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.153958506 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086434879 seconds)
    (40/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060724127 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095115439 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.073411045 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192564413 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073967589 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098762143 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092143401 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09342848 seconds)
    (48/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07862518 seconds)
    (49/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055746192 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08847643 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074707429 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068764557 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080185499 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197928592 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073287471 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100904023 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.198743581 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198064695 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150805666 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07656925 seconds)
    (61/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.159053244 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.195286067 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.171677882 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143596251 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087870717 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096117073 seconds)
    (67/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086450387 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.155465262 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117593939 seconds)
    (70/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05107976 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074213359 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052045001 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069720913 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.066531391 seconds)
    (75/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053375487 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193173633 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092273137 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074490274 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070370635 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.060802527 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.304446459 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074953536 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076314908 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054232778 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072616356 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054250802 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076280312 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093913426 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067991445 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174891336 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080140189 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.114621761 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053295128 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068611075 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053805559 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084170742 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091395702 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074664694 seconds)
    (99/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.330972266 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066188665 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.151086133 seconds)
    (102/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114897393 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066849892 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072534395 seconds)
    (105/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071850579 seconds)
    (106/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063991929 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107141914 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090086894 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074712263 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068113332 seconds)
    (111/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191147027 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053660076 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140708631 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075041437 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05250662 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066686655 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.195996906 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09668745 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052957105 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05319565 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075337792 seconds)
    (122/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111658998 seconds)
    (123/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091709198 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112741471 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182171446 seconds)
    (126/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109726882 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.145001728 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075415189 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067040317 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177480194 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093717743 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065515256 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070614873 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06538205 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071119801 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087650071 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05045438 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088936941 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.0526849 seconds)
    (140/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107528122 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067413169 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071237064 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065672656 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051717537 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088663206 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06476883 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064428486 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071439324 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075874246 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054861938 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050541362 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070946596 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072284961 seconds)
    (154/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051981917 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06206468 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178828012 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07454838 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064838831 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066631746 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073579643 seconds)
    (161/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078585793 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.18320566 seconds)
    (163/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072725858 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128495358 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064647293 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072523599 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090841213 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174722986 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099388504 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068584823 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149864951 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149113804 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.147964375 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.149200569 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140114845 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053309413 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140873863 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071390997 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090915931 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174118627 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067028831 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18494424 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076215796 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069828101 seconds)
    (185/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050765518 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07116885 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050075595 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064859677 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.203440724 seconds)
    (190/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05327605 seconds)
    (191/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079643162 seconds)
    (192/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074169983 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073351415 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053354901 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137817676 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065270223 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.076737587 seconds)
    (198/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072791033 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080994016 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095776494 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111038708 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07658682 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085980293 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065551381 seconds)
    (205/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067205875 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06702367 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06754016 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.154729885 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076420846 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075106043 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068826324 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063777429 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055531257 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054043941 seconds)
    (215/309) benchmarking ("sort", Float64, false)...
    done (took 0.128310602 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096565596 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074127933 seconds)
    (218/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054309917 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077113165 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068033787 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073507747 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076584218 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068455058 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094214004 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0660392 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067629268 seconds)
    (227/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055815666 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069596603 seconds)
    (229/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053729564 seconds)
    (230/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065186688 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055025279 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066159487 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054651004 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09531164 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09305149 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139388189 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05447018 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139862288 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092991081 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067813806 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053422426 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053171982 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08161171 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053949987 seconds)
    (245/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09964793 seconds)
    (246/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054945093 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066766863 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07030212 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070790907 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115463807 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066712983 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072770499 seconds)
    (253/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054634809 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073548862 seconds)
    (255/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108856113 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073718208 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054468058 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107989845 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087636913 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074574976 seconds)
    (261/309) benchmarking ("sort", Float32, false)...
    done (took 0.129162081 seconds)
    (262/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053751172 seconds)
    (263/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054220353 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093304032 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053029071 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069159643 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072662962 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093540385 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.0675879 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06907902 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067044737 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067006669 seconds)
    (273/309) benchmarking ("sort", Int8, false)...
    done (took 0.142103136 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054340356 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052816121 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110657729 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062346632 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052648425 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083029798 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128713419 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087278437 seconds)
    (282/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065624781 seconds)
    (283/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070620198 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053925439 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073629043 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065288966 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052752396 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066485454 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066572006 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06548955 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079790386 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066848091 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074285755 seconds)
    (294/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055074692 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131953792 seconds)
    (296/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053688772 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141214973 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071972855 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054342231 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054175627 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067945985 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13001077 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07162036 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052952709 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053274721 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069584958 seconds)
    (307/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068147601 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05262463 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052371552 seconds)
  done (took 30.854517227 seconds)
done (took 32.227352236 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086938456 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092038228 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074242861 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092096297 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079844893 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075904051 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071858824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077509279 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078987148 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080907246 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077864173 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054848425 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073531148 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073538845 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073564153 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090236035 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077309062 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072015466 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07241846 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06413561 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072266065 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064945499 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066652363 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054074621 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076605962 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07081352 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071259522 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072895195 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065271628 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066358011 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070504148 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074856189 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067709229 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079568829 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07246726 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073056205 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075227146 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077900728 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069083699 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067331199 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075933436 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067356895 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074801522 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075198283 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073200959 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071937866 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072686009 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077776901 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093927271 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070847572 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076240354 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078166706 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077148204 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072413103 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069027641 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072383079 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071784144 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09425497 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075430286 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070535136 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074441011 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073934495 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070635192 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07225024 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072294593 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074277975 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074584207 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07067746 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073588444 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070088207 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06523495 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072058631 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06821595 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067074418 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077591938 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07833518 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065779995 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072163782 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073872187 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072930707 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066329612 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06969764 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068465298 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072663924 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069376871 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056257127 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070685132 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072729834 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065898776 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07420037 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072972863 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073329498 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068115737 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077297999 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065996025 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071687582 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066848486 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06600051 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067934623 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070346463 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066851758 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069564954 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075623933 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068186125 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07301783 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080309284 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066673895 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072613048 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06609287 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066050504 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080226627 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075706745 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067077191 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069753418 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065405064 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073701992 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065502397 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066223418 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065640021 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065627027 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071421147 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065835805 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068328767 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072710378 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077717802 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065646709 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068726195 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068362708 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065613804 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070989049 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065958688 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065448752 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.203994881 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063194064 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067594238 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065637122 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075612521 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070881133 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074854129 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068872977 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07522664 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072175392 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073485182 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072355388 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066441133 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061191708 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070550778 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070384346 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069066129 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068250764 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068951432 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068064088 seconds)
done (took 12.554663421 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067598111 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14189037 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098524367 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094921159 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086621185 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065855404 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075208248 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100485925 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066748159 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101695275 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086163607 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084455608 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111004865 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064217771 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06681976 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071405181 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068827272 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084068978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102957804 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088319475 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117833701 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066684374 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096286653 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092514595 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088988637 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094352667 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068522248 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071388443 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070926688 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102554636 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088167117 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070493725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067751842 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100116844 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091394246 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082998409 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06597828 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081735022 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067762939 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067513544 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069809457 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100377313 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082065045 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082703495 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071969436 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070828975 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068643832 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085415297 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091206226 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080381288 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088459463 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104904122 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071218367 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067355607 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066130575 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087559307 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066700433 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070312112 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067904971 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069383678 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067800989 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070419954 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083098619 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081955465 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071374001 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081506427 seconds)
  done (took 6.847312827 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08476619 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09058426 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081926678 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083398767 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065388353 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065757015 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065700393 seconds)
  done (took 2.012536517 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067575329 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087053326 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089818474 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088962209 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083530508 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08660234 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07484876 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065826925 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079816055 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066910667 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086580366 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100983258 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066277659 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072026192 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089280828 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065841634 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089123394 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065811105 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068936712 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088962054 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067650138 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081282208 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069501728 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066236617 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080091989 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066234667 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11079093 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07010834 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067313831 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069141289 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063859749 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10675745 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08159979 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076040315 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065954166 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079902993 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081943113 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066276265 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084620498 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07322661 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081741107 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068314981 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068815606 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065861125 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07221529 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078423442 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068725262 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068415842 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070486268 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088533491 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068856356 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081995766 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072021735 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070976217 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070001701 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071158794 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076392799 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067085099 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086161825 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067374519 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08320436 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08449885 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082001825 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084766732 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070403748 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082346997 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082197239 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070609728 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068950587 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070791162 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084870375 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066007836 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069430198 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078751768 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069790211 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091468529 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091534011 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06935227 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077757613 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068327951 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068045022 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067932794 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091557319 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070990892 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068069484 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072535286 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071256926 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06658716 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06749416 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071869092 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066463221 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069426993 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070854482 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071264762 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070557883 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085126255 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070078938 seconds)
  done (took 8.808363085 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070377545 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067516205 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069251883 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067714242 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068205512 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067336801 seconds)
  done (took 1.909759984 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094061186 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068844917 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080682759 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072181856 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104260935 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087259273 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089893292 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081154014 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086114748 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081084164 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089711847 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090818721 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094986868 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07502679 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088731049 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074569536 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089416792 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078385337 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08044203 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073431703 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086302091 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072130068 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072691383 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080868847 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074991612 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071697026 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066804025 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077955077 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078214626 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078102139 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071878651 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075292723 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069948886 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077886995 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08634992 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069741022 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07154357 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077030642 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071561359 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075089074 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088586018 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07511536 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076734868 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079331073 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081259778 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072840769 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079199116 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078360248 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088186189 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078110428 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07750376 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070926485 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074356864 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075946475 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06965578 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077197646 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076293477 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085451872 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072670355 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070780399 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069428611 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07650468 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079166148 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075969788 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078463546 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076444383 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06997799 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072370012 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07234427 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071404081 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076555402 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068979647 seconds)
  done (took 7.09821449 seconds)
done (took 28.146007403 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544430172 seconds)
  done (took 2.010938142 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60102986 seconds)
  done (took 2.093973434 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.072002652 seconds)
  done (took 8.5571469 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388696244 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.467468894 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.687799513 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131277512 seconds)
  done (took 3.205568965 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673913588 seconds)
  done (took 2.176308598 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208428138 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194477699 seconds)
  done (took 1.918086173 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377925885 seconds)
  done (took 1.870334675 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.110954605 seconds)
  done (took 2.605012633 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261208185 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16168138 seconds)
  done (took 1.919874743 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.470030782 seconds)
  done (took 1.963110815 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.839019769 seconds)
  done (took 6.334132659 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206352623 seconds)
  done (took 1.747571726 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242429895 seconds)
  done (took 1.735852677 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.690621733 seconds)
  done (took 3.187090167 seconds)
done (took 42.823851348 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081649238 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0813542 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08132774 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077933346 seconds)
  done (took 1.803204018 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077501725 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072573006 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076866423 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071914366 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075736859 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072668858 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074300487 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076772032 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072555661 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072737166 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071944364 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072152446 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07446613 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073619119 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070736977 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074838234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075509325 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072220507 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075103882 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072083849 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070992086 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074144139 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07488103 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071509337 seconds)
  done (took 3.265967764 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078453103 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072899003 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074806658 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07170489 seconds)
  done (took 1.804095021 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078191546 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091607099 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088872237 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077267515 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092296357 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086106092 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069026166 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069007303 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073082277 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077001584 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067890516 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09527991 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087438623 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076408715 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078787958 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065906764 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068147008 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08677256 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077049571 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077460218 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069648155 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076893601 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067729861 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088190555 seconds)
  done (took 3.388277713 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078956097 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10262395 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077445823 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086983757 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088826986 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064992436 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074078905 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089032915 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122394937 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065110314 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06975308 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06518088 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07225322 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064949433 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075933383 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104669097 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107921989 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068277218 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095371156 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065333004 seconds)
  done (took 3.157450132 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073720589 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069221756 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065890794 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068231411 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077154574 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072841362 seconds)
  done (took 1.944447814 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069902276 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066583528 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066839733 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066428426 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071253836 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066880857 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066092955 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067109358 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066478714 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066579289 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06606863 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06574884 seconds)
  done (took 2.320195882 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.419284503 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068552832 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069949316 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065601494 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070429117 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066024986 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079342326 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067642258 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09018527 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066504633 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06629351 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068551328 seconds)
  done (took 2.715075427 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206713719 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075734574 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234552764 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13591543 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110687941 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115167979 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103297152 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112130172 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142871981 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100741791 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166606156 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164508106 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10639763 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136441263 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089011347 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097631132 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154277274 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163235253 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102822705 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164729359 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143153932 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124172569 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145815721 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10055009 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105347617 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121536406 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071251625 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079941844 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168672406 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130957958 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145271405 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110147788 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092324414 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173868607 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167753032 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140588516 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133288593 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082736536 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102529552 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135837694 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200150481 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087465514 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159832079 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245017558 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081466447 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133569082 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120556047 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120547419 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10597385 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089456476 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144878627 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181390555 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138320336 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087209529 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113071249 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114620425 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115783501 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103328426 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181037833 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160311239 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127528216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071709765 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099495523 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152913066 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132637347 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108558803 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127127853 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092793656 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132806179 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153543701 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118117049 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142842564 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12846482 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088252155 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118645653 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13916125 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127108761 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167927265 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123221509 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072421264 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123447427 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101762311 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080593428 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141632473 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074462176 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175041696 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100854478 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108157133 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11171513 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108197793 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107977122 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158241657 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138679924 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244278628 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066679015 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105087 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119936026 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146655832 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087274918 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108412375 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116248483 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078703146 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140633614 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074777644 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123589041 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075708102 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125048653 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133385451 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075562886 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121896138 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100816571 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101173217 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133120571 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158865849 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089283677 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082623019 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167474103 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122052984 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10492141 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144208189 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155852547 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099095821 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102527021 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149049337 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178035052 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089179886 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161543558 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107209601 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083397688 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087074383 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12308812 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112093913 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121005821 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081715745 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117145913 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165438216 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074278583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093588615 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132592817 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078442281 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079827512 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101790393 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099066228 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094275896 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099323174 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10305607 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135800303 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120363527 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101958165 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269306731 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099273428 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170170193 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08942463 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100948876 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103835349 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070366632 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135940812 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157041063 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080469873 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163611682 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123194274 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104524478 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119735308 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083493621 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13959695 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079113495 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070243479 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143796152 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110679856 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110182809 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151899573 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104426243 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127803257 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11903669 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133777187 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13229369 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129362493 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104661871 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088005953 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1107919 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124647465 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07302848 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090584363 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079711191 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103563176 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095123001 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08329532 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141338473 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123762202 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099553941 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110729204 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095665525 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145093569 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075714549 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128320271 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11759792 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092861893 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150046016 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150406753 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129852504 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09850914 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14299194 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069130489 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072132382 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086783934 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119207055 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080951918 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081251103 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112994741 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142125463 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123993534 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131501659 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108131909 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115996017 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149917027 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06796867 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112657827 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14168173 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116213134 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101402891 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085987801 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095034486 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133966579 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10177798 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16701244 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107991242 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119792808 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143619362 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095861972 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077042912 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103182879 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126050441 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098478555 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134825681 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095492695 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084012598 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102896416 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071091238 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09394449 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11912733 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112376812 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126999657 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108087517 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123509241 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074211469 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108539373 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114734544 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1167463 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062365699 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114896307 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154086095 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108188987 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130004145 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172438657 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084885039 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.128452821 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.442194911 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148086592 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087562412 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112146681 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120892799 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130561304 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121835051 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142422887 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110256127 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137012815 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1109819 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086780809 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088350015 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098387251 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105897346 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096455263 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108935435 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116656153 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096035628 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133391773 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103673743 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110919122 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11947777 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098153653 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091192291 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096846415 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176316949 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12078141 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172131211 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098861042 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146278863 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164754299 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074593763 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079332822 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078209868 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139137324 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083815878 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130446188 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097934134 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105333942 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123065643 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141136301 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094205003 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067737598 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106964604 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133257699 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11431156 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100805753 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103124361 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161225833 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099471132 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078810693 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113025429 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103617757 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101350888 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170621843 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.208779817 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098033644 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076937675 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081508652 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127105909 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153179038 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081400151 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102811206 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118640977 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110454155 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126894636 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101175444 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098817086 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114258999 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148915781 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128317889 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089851839 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112227758 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129077197 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15851634 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105563412 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095155007 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170282174 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151603198 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15978848 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088626158 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131421131 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114119795 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10813197 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139185656 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083239748 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162309861 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081437726 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135332672 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103702355 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090035766 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129084743 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098946994 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087992941 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145311301 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116376205 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082221089 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076946415 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116281198 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118480169 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105157409 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074476274 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137189671 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072428413 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130491395 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166791459 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080525365 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103266287 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244347044 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080315128 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108643306 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101812094 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090699984 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099052971 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172703809 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088981825 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148620536 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141213555 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112984953 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138095554 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099677995 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63585139 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077749873 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15213516 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115828733 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171422171 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097256518 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117149324 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109569806 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122657249 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143800732 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104994099 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178484705 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131434079 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116016798 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079876253 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102391434 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102135149 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088661619 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104696959 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11332745 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115502573 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093399495 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115340604 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122677754 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081544156 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094987633 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154841982 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114687745 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142121004 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13870141 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083864657 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116183299 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136729046 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079516774 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120633376 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149685479 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105037335 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097214706 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079865287 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.248408812 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172160839 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073950578 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162651488 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120015569 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110746767 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113336931 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114667007 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13140385 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107455734 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122444042 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093525121 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110309886 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112773458 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082198133 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077270882 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104911679 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11303297 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096727912 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099694274 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097758031 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150127479 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07108167 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09530601 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102816083 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143609046 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173213653 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087767024 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08278762 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117890956 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112433364 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11261624 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11977838 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078991033 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082003979 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081572635 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077075219 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108152905 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111624971 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104301594 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110914803 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162496598 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082335012 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226248519 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094517542 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103339523 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069426903 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077935888 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094923173 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096655119 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106420349 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099587097 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16783467 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094326883 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089856677 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091729607 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073105036 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082415529 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273156493 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111443742 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11825157 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098262703 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062871941 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109557547 seconds)
  done (took 58.490967153 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120378555 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084288549 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098505001 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.16105225 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140720112 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235998137 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.175766353 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.220611473 seconds)
  done (took 2.891982794 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069418464 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09396256 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100727632 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082126406 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066880002 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069121461 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224192818 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080324483 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066464525 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088660382 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078473941 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069740094 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421684109 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068585988 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.0686769 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061862999 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06722538 seconds)
  done (took 3.427372169 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36482094 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.3602912 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371749047 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073337725 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.959094471 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089359827 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.103806622 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097667799 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071578088 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.26859273 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.695867413 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.096646092 seconds)
  done (took 14.20848204 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076144944 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070340041 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084946489 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083938362 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073421308 seconds)
  done (took 2.044335629 seconds)
done (took 103.0165613 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080166388 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392148751 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053687284 seconds)
  done (took 2.130404329 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08714645 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087345573 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088121603 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084647916 seconds)
  done (took 2.0131883 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074581017 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076478152 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083956963 seconds)
  done (took 1.894881553 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222986166 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139364066 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087038971 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083196162 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078245686 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079065621 seconds)
  done (took 1.905367919 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07237307 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074512147 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072471269 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075911767 seconds)
  done (took 1.954655068 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077611915 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055160001 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057429882 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056311255 seconds)
  done (took 1.90523751 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087280238 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078817739 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077958342 seconds)
  done (took 1.908847024 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108714642 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085118975 seconds)
  done (took 1.858111388 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083159218 seconds)
  done (took 1.747417451 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101006951 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114565177 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130390331 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109664552 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135673606 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111376585 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085024945 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086593 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076940864 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086576775 seconds)
  done (took 2.701585191 seconds)
done (took 22.201625588 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079595297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380602231 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362017716 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090758655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667845841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356629536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.020336762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095099731 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117253039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070338874 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087099177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651708938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977769874 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327883666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962345052 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321795564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.660322496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068285768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067853972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068355225 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004217834 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06764113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067665723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068312405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652547889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371594606 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067839456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319926787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068111309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069752106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354771361 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0677566 seconds)
  done (took 16.261436707 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070647305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118630427 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073533397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083988131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070364349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070412144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071599032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069069499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119406461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068208136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084698658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068066297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071552239 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068682094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087308104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068102876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068980096 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069073473 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068568769 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06844461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086661809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067952526 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068306502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068228014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067792258 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079922829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068149753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068159075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068026702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070224385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071261638 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069376938 seconds)
  done (took 4.067551172 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117520019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126703618 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07718791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103886522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116514378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073169006 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145898281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094005909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131043772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070797369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085042044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068337508 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10115258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06860698 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087504731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069183436 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069230011 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068683948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068465156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068911226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087386871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068717471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068546765 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068993158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06869454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08095141 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068759637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069137039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068869609 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070540398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071913276 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069019952 seconds)
  done (took 4.347701539 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073196857 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074609593 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084791788 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083914677 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069226401 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071464864 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072726698 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.0692258 seconds)
  done (took 2.278243038 seconds)
done (took 28.620183145 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078858626 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068806585 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072573236 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080851766 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073581422 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078432775 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066867372 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074713833 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071632881 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072668977 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074378716 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067457628 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070967622 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067141637 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073968324 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067652936 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079304025 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071524397 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079400845 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079306235 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069474294 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072687484 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074203957 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078639502 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078689597 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07895994 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07676326 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072633128 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068615058 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070217603 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076624458 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083996061 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06886014 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078920904 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067854421 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067742151 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071652327 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067892411 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079123211 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076346881 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069391867 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075985012 seconds)
  done (took 4.753084893 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08705969 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091074198 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088025259 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063810093 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068939485 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064650814 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089106936 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059592963 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059572122 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087736344 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055755238 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05939952 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062255843 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053777056 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059323773 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056504201 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061685995 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055876962 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059415265 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059416845 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058241959 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057273769 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059941922 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065089367 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056564802 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061639982 seconds)
  done (took 3.385403479 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074622318 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084504256 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087876596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126634147 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103654727 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077995445 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078051838 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092196615 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085498241 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067050948 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071372275 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093867926 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088426191 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073711036 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067578775 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084396557 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081666174 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069243637 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073082962 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091202053 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084044898 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083747193 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092699781 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080784113 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066633241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069675693 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071095421 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081243539 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072370374 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07625276 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070952139 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070828655 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0693644 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07870189 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071480505 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069355325 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090200148 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077235513 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077695594 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067703766 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070518111 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068766449 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089386316 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122073427 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06808585 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073803088 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07518224 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076574055 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067324704 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085795526 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07855532 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066851811 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070157903 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066527669 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067644814 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080121104 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069143955 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069801814 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075679517 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.06992629 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085366144 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071014471 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08231797 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066967971 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075350944 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066375089 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068207426 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066304992 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091993886 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068673407 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1078143 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069150068 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067982591 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075694529 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074607823 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072946032 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067408824 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082256622 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077332651 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07068265 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075736981 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070505542 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070074499 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087765049 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069492001 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068663992 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068188291 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073936069 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07012957 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068675155 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080114426 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067585421 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070337515 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083933145 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067285416 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069002778 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073631363 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072260922 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067171039 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077979222 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071758328 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067821804 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075982463 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066912953 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069751408 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079601284 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073679144 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066148755 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071786684 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07302254 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067497201 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068635881 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069974749 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068692807 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075508546 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073671582 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071287357 seconds)
  done (took 10.565098845 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160665936 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152927193 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070691452 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145508681 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076337379 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07905311 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157982518 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094186777 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067954546 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068378855 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068808866 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109547546 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105839362 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114654326 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07856368 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067531007 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08307325 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113630196 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148908722 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142716222 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083172129 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076410882 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069755815 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068840018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070767177 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078515167 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085375283 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076426307 seconds)
  done (took 4.438252428 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080625794 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097285097 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073681393 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088724228 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09057821 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067443478 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069757643 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069427633 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080390728 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078676585 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067514639 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073318146 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074272616 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070726499 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06862538 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074450504 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074698113 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068849443 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07062378 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072901971 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077485876 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080504033 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071564471 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066854119 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07385554 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066842912 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064073963 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084198172 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067885503 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089718571 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065684047 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074659524 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081103219 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06841783 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067420805 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067462694 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066972878 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067046158 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069197904 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066116671 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066234398 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057696214 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066673819 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078779589 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074266717 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056447947 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07210528 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072871413 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072734475 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06523092 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070044122 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070186783 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070370986 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074432573 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072407235 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072439292 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068560682 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065333308 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074747162 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067119702 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064552284 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065730286 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071662282 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065503236 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075532042 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071520515 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066022055 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067129597 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069313826 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073265603 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06697811 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070243119 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06474756 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068936788 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07154008 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069418342 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068593278 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065622448 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066779736 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067435049 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055483477 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067364199 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05357922 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070583776 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065552804 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066045913 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067099802 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072016041 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079116629 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06858574 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072977346 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068209381 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066568381 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070257254 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060403991 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070136954 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082346807 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082055026 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067497325 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065227825 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081493309 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071786782 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066296037 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05585133 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075142468 seconds)
  done (took 9.145778279 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094371154 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08876604 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069804229 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083804601 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090743211 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087023049 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075108169 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076454341 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069803787 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082110738 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073443842 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076438768 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06779443 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076867877 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093101084 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076946008 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06957682 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076882357 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072021401 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100512908 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08295629 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081702692 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074916915 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068321005 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075655614 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080135831 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089177789 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079962999 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078188155 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075514147 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079900793 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088992643 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074030939 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071597481 seconds)
  done (took 4.432867299 seconds)
done (took 38.392872341 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.758396345 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.014089986 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.758527572 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.138265501 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.839902719 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.909635218 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.816833984 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.753630143 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.873515887 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.786721422 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.981873935 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.788805476 seconds)
done (took 65.117065636 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.771877093 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.885088249 seconds)
    (2/2) benchmarking "String"...
    done (took 2.016609301 seconds)
  done (took 5.589087692 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.034341347 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.275548877 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.989376533 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.739807043 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.749116107 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.048489404 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.553854773 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.278949657 seconds)
  done (took 30.317575182 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.969970483 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.952527486 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.435301288 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.47381392 seconds)
  done (took 15.565623439 seconds)
done (took 63.045717547 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.770867743 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.775563196 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.756494234 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.725266126 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.801594192 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.757295058 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.824500147 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.964130733 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.741548099 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.736616491 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.745394208 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.170722263 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.743964484 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.883035367 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.74487209 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.753259073 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.762626299 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.19645348 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.901540732 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.750701756 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.757407826 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.772972379 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.747394126 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.770420146 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.779358922 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.741193557 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.183830675 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.75668466 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.375154994 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.746311164 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.769838754 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.09929323 seconds)
  done (took 203.690637246 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.742746937 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.711269062 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.748862187 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.753725992 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.115584356 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.944133081 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.87713238 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.157552028 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.748469137 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.768406717 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.972217562 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.741877972 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.984910954 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.693209806 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.75005302 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.852815905 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.93046288 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.983486441 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.744338902 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.014664772 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.765262152 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.817874866 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.767729976 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.941629573 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.7555015 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.815674187 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.948824289 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.764983348 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.941209243 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.909018015 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.754286626 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.762915356 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.964129432 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.618979832 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.748839099 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.756856693 seconds)
  done (took 168.954913445 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.89375779 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.743429778 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.743213813 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.742463494 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.7549087 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.741622877 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.874991273 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867905691 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.223342408 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.347356703 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795918213 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.600857292 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.742098776 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809816846 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.756868632 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.742810806 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.75699458 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.770037385 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.742387901 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742372744 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.86991435 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.754577717 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.870765071 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752402492 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.743170937 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747524191 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.11201469 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742818567 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750233937 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.002354418 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.743217366 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742872832 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.656659729 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.808050045 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84287301 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.743437931 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746895555 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.741834153 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.962692707 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743642871 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.742402978 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.742579083 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.747570398 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.936354207 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.744913822 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.877482545 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.746721599 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.27550883 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.746031862 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.743168092 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.858358942 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.477204136 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.746765104 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.741319305 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.745257989 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.74281526 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.742563912 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.748703891 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.728867571 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.817792025 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.744670946 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.745275352 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748797041 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.743360133 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.744029759 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.206059526 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.74445173 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.678362737 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.807708616 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.864066401 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866331521 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.747422725 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.742064284 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811072624 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838609797 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.744280338 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.744302959 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.743178535 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.743814485 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.825686849 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.744805488 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.867733394 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.751941968 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.745499569 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.795043183 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.813907762 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.745133735 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.648499912 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.748482793 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.744702815 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.104075543 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815565416 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.744771335 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.744849164 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74478563 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.888036138 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86889801 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.54601504 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.748481596 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.748283241 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.745397698 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.927185417 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.745280301 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.943925285 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.747494849 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.744867556 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.826801505 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.749345085 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.74658223 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.744460303 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.777384501 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.745572125 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.805774706 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.745506437 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.115958236 seconds)
  done (took 398.432621184 seconds)
done (took 774.713352756 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.435541814 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.394438963 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.505500674 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.418973429 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.395338136 seconds)
  done (took 13.838431429 seconds)
done (took 15.52604292 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.831560956 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.836489993 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.771373569 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.834290682 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768252914 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.834465507 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.816033359 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.772498934 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.802047953 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.771473559 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.804407391 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772215357 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758532416 seconds)
  done (took 25.062000514 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987001173 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.983037163 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.820005288 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.975204675 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795669976 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.987975934 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.911490377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90010553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.900118232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.76138172 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760204035 seconds)
  done (took 22.473446981 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984922373 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.997529609 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.820449551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.98937702 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79606312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.984844137 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913174228 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.900328301 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.901545007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761487981 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760022687 seconds)
  done (took 22.500123832 seconds)
done (took 71.723800801 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.755778439 seconds)
  done (took 3.446893059 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.779413004 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918121157 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.761229977 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.760140437 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.755217612 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.756361454 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.758816555 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.755475806 seconds)
  done (took 15.935937455 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.751772511 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.755085384 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.75287928 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.753183576 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.752579677 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.752562489 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.752396868 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.755587305 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.756125587 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.755676462 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.755124439 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.755284092 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.752669577 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.755315833 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.755919548 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.756749201 seconds)
  done (took 29.760051365 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.756018548 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.753302146 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.754186781 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.754420418 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.753039902 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.754056217 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.754984556 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.753464026 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.75454738 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.754090674 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.755573349 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.754353005 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.755096827 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.754973512 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.755592126 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.754716573 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.753422685 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.754280129 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.759805518 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.754828887 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.755216578 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.755256284 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.755097588 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.756385996 seconds)
  done (took 43.812546183 seconds)
done (took 94.64515079 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.574580821 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.294519797 seconds)
  done (took 8.562029725 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.758855952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.75739899 seconds)
  done (took 5.255782565 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757936489 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.758114088 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.758770466 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.757768656 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756985522 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.757416095 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.758011583 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.75806693 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.757528005 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.758202425 seconds)
  done (took 19.272593916 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.758006976 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.757581388 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.754433961 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.758232315 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.75827405 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.756248896 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.759835202 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.757437326 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.75937597 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.756306765 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.75905325 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.756329846 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.759381204 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.756022686 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.757903093 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.75465399 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.756886435 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.756483435 seconds)
  done (took 33.326827968 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.758432136 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.757589584 seconds)
  done (took 5.210208331 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.756904048 seconds)
    (2/7) benchmarking "second"...
    done (took 1.756652516 seconds)
    (3/7) benchmarking "month"...
    done (took 1.755811431 seconds)
    (4/7) benchmarking "year"...
    done (took 1.757047656 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.756582319 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.758084025 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.757856958 seconds)
  done (took 13.994034587 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.761239193 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.918113845 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.986993855 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.440697515 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762238457 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.763238393 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.687226322 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.76298331 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.764203996 seconds)
  done (took 19.541593675 seconds)
done (took 106.855858717 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.587114496 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.762124091 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.176950176 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.812989277 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.811080016 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.052862733 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.78782281 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.976464044 seconds)
done (took 42.663706266 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.781951896 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.304870037 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.339297162 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.332429949 seconds)
  done (took 12.673329129 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.73990987 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.300491508 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.807465646 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.432748975 seconds)
  done (took 20.272990982 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.134591254 seconds)
    (2/2) benchmarking "read"...
    done (took 2.12647917 seconds)
  done (took 5.964493913 seconds)
done (took 47.390701977 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762314649 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.761497498 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.7635096 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.758674716 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.761984295 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.760927519 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.758613735 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.758440556 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.762868048 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.759288535 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.761589535 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.760944453 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.762923336 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761953634 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759191115 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758769183 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760479922 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.758512492 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.759438697 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760328478 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758085234 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761077158 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.758595214 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.759219875 seconds)
  done (took 43.948084507 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.762836131 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.760470577 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.761438146 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.762039189 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.758830146 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.762786624 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.760727291 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.758639846 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.760520878 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.761112272 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757845223 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.759384104 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.759966888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.756979086 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760483021 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.757129692 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.758720365 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759523344 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758802879 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.755415413 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.756950893 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75694642 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.756936519 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755895336 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.753325314 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754057089 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.756545444 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.754731035 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75679796 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.754022463 seconds)
  done (took 54.448227428 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.760832837 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.763231561 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.756023512 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.757386568 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.756144009 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.756684912 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.756481202 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.756350107 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.756027914 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.757353226 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.75610939 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.755596706 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.755973076 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.755626053 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.756981544 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.755526884 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.757167593 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.75633802 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.755843065 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.755639031 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.756831353 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.755452442 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.755510962 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.75636644 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.755677383 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.756354691 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.756366453 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.755532903 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.756337184 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.756011648 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.755497376 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.754852048 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.756376762 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.755684231 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.756503412 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.756474187 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.760610815 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.76429598 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.755168324 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.755451055 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.755750552 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.756008932 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.755758048 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.756301768 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.755420102 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.755210819 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.754525401 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.756131741 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.755823595 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.754721314 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.754519635 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.754988412 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.755137618 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.754710986 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.756200762 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.755526299 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.754572676 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.754851418 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.754601134 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.754694466 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.756152946 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.754553343 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.754585762 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.754410661 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.756255202 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.754968042 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.755942008 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.756299865 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.75536045 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.755809584 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.754739891 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.757092097 seconds)
  done (took 128.134406693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.754385594 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.75245247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.752774353 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.753201398 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753037788 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.755115027 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.752531287 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754093417 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753008852 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.75455154 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75522729 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.752936102 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751636079 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.755783903 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755351763 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.753788101 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.75505269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.752067698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.755056325 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.755081519 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755847308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.75384984 seconds)
  done (took 40.278217603 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755301995 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.756683431 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.752799014 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.755681698 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.753841469 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.755270622 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.755855754 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.755198531 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755500506 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751656183 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75680213 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756155054 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753285669 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75210556 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753343058 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75343074 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754850811 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752148653 seconds)
  done (took 33.271863978 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.751665869 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.752406602 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.754695287 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.75227474 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.752456056 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.755572894 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753271887 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.754699138 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.754523821 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.753643392 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.754633079 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755596701 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.754517027 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752468169 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755476398 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752843427 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.754392145 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752500028 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755739943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.752630705 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.753477353 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755864648 seconds)
  done (took 40.276980081 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754988912 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75643914 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.753757148 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.753224295 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.75403879 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.756127717 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.756192224 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.75401594 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.756630986 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.757583738 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754695934 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.756808907 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.754821878 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.755242348 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.754690834 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754042345 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.757533075 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.754710757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756395722 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.753810144 seconds)
  done (took 36.798900734 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.758668088 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757742834 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.758819631 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757838794 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.758656925 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.757472039 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758397367 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.758215001 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757864268 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.758826912 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.758758093 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.758457634 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758739985 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758794119 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75911426 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.758317155 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.758770602 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760258122 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.759730157 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758891698 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.758862207 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759565412 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759049397 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759046692 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.759288033 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.759409428 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758703371 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.759488941 seconds)
  done (took 50.940303373 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758477877 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.758391235 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.755574554 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.755496092 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.756250266 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.756056737 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.755930141 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.756909524 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.758921076 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.755373692 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.758798255 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.75838615 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759358006 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.759785384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.759594813 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.759741645 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759056379 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.756974715 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758111307 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756508457 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.759392597 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759258985 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.759078106 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.757675596 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757075077 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.75965984 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757244054 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.757052012 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760088057 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.757205363 seconds)
  done (took 54.432592835 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.777471573 seconds)
    (2/2) benchmarking "in"...
    done (took 1.778552142 seconds)
  done (took 5.252204657 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.757753302 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760037752 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.759845811 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.757748388 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.757570493 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.759743911 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.760316767 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757045092 seconds)
  done (took 15.766887588 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.761177181 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.760967806 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.76015804 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.759775155 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.76191263 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.763353451 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769310257 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.76159064 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.768193364 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.764641281 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.768244955 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.769289471 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.767487118 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.761990244 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.763257063 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76390696 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.761513938 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.762829487 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.76226301 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.761564897 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.762339162 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765347732 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763995695 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.759626565 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.76435639 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.778004071 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.769531503 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.761415666 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.763877795 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.76939649 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.76401679 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.760230729 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.764410557 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.763644847 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.76169559 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.763884122 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774017494 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764936447 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.772304042 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.764017046 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.763174258 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.760355327 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.764557153 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.766690371 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765641715 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.763822163 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.762945782 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.759491231 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.764675431 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.767621516 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.766279918 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763365764 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.760911194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771753395 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.766070332 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.77097002 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.764398749 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.766779254 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.771995362 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.776411731 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.779733835 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.770714601 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.766158698 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.76477051 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.773803549 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.785759613 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.772809713 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.761339215 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.763136246 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.764140379 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.773861443 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.779505938 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.774611244 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.764828311 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.764726131 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.764311629 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766715924 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.764306606 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77465911 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.769849368 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.764743874 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.766466405 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77533707 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786160219 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.76557385 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.766434026 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.766602982 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.766241997 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.76731987 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.777737691 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.767116465 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.765313507 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.766378538 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.767180837 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.770936445 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.766496312 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.76741102 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.769104523 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.763509715 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.765643886 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767209284 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.769998555 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.774884797 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766839449 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767031717 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.776910501 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.765741414 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767504274 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.778798291 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.765484037 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767003902 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.768057401 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.775399557 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.763393548 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769858468 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.775438118 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.768288278 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.769515366 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.768212308 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.766996461 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.777098684 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.792531688 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.767117004 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.766482038 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.772688361 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.778746434 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768613816 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.772822572 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.767906108 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.764569477 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.764457431 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.769695509 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.767540223 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.769394498 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.768192699 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.770941689 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.765393916 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.767795513 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.768638835 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.770573095 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.77152626 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.770318088 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.771712362 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.771538413 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.768953455 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.770736854 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.77919542 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.771527781 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.771314454 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.771464169 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.766148725 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768966687 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.772663397 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.76990674 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.771596198 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.769519642 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.769421025 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.769785304 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768548186 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.768747457 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.768726158 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.770048894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.773620846 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.770753418 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.775403467 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.769819427 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.766580305 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.767961027 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.768382138 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.77025894 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.770119761 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.769366056 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.77348311 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.776808903 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.769409395 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.770085417 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.775091334 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.77057472 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772492861 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.77118579 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.773945979 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.778566236 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.771080951 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.780525135 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.770969871 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.771644621 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.770705487 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.771511059 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.771441211 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771378519 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.77410538 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.776954611 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.785718946 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780418284 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.773795118 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.774304633 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.772694904 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.775160663 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.778425622 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.771723244 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.771008358 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772381829 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771930518 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773241134 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.775322227 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.772392634 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.771727166 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.771871774 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.771111624 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.771660377 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.770585505 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.773606809 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775252202 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.769402545 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77191579 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772672372 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.773070649 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.769413246 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.771282546 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.772598235 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.772164118 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.772661655 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.784393799 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.769330717 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.774010358 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774309499 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.773746882 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.77268335 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.772702588 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.776092302 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.774590807 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781602458 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.774587448 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.775170885 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.781921236 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.774740596 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.773427786 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.776293075 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.773375186 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.769637558 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.777890288 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.778828113 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.773428817 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.775288394 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.774533159 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.774946647 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773155604 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.783748001 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.770340561 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.773507984 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.773181288 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.777858123 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.771759819 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.776063957 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.775960454 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.776545622 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.778887074 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.773434313 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.773698571 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778516377 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.776200062 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.776185149 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.775541665 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778545364 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.78256843 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.784282697 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.777027771 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.7796379 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.777407972 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.778808291 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.777489856 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.776889922 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.774988843 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.790730134 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.783498315 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783718163 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.77928158 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.775452923 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78347276 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.77769043 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.781163962 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777323228 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777500905 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.777701044 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.776107745 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.772614623 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.778178672 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.776557889 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778155234 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.778129711 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.779552269 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.775581092 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.776794932 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.777953365 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.777248782 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.77677021 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.776882501 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.77701176 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.78242351 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779473262 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.777041976 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.777472238 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784684628 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778762053 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.779983436 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.77676026 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.777773815 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.777762801 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.779780604 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.777947592 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.781438688 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.785666499 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.780749556 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.789009657 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.779172237 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789951925 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.778805443 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.781328972 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.78610253 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.77510385 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.778819732 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.77982813 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.777937573 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788134793 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.778842896 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.779724429 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.782087347 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778038818 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.779038858 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.777263796 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.778584384 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777752909 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.778071843 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789731159 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.780334706 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.783049415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781114107 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.775598928 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.778886455 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.778380488 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.778802274 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.786056134 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.780119524 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.78010396 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.779195943 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.780643629 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.778604815 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.779872502 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.778160591 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.776105612 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.778665206 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788819997 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.781211544 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.783236108 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.778559816 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.792414856 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780394344 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789304418 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.779866898 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.781912348 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.780563617 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.779763045 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.784114875 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.781329991 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.78324328 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.780840208 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.781711312 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.783240822 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.78068208 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.784440821 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.781439962 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.780627024 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.782084912 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790561183 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802051256 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.782367971 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784725596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.778696056 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.783361343 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.785908037 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.781511528 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.780398041 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.784280175 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791854525 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.788640323 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.783706917 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.782564052 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783504657 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78176486 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.781001746 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.781092872 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.781930484 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.781530278 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.784994426 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.782408615 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788911148 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.781169486 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.784347633 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785912817 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.783731822 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.795546076 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.782164308 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.785717493 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.782231837 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.782069003 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.78338394 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.78430912 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.784047148 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785344938 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781959236 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.784403797 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789125133 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.790473769 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.78724409 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.784156182 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.782811954 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.784804324 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.784883991 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78354641 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.783535124 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.783999514 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.785495235 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.784149808 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.787177911 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.783291831 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.783467178 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.784676454 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783239023 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787867772 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.790933232 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.785160089 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.781375159 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.783964419 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78386434 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.783720879 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.787186122 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.796980096 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.787524058 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.79469632 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.793260626 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.78771964 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.785986281 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.787606053 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.793356508 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.78548066 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.785830538 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.785663848 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.788284089 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.78654735 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.788537286 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78574557 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.795386411 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.786187005 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.786262671 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79582749 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.787348073 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786273106 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.786598216 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.790013849 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.786383183 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.781650719 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.784961984 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.785629506 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.795253277 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.789065616 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786407352 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787233193 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.784388087 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.787007853 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790068168 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.785752331 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.788367906 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.782316581 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.787309672 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.787255372 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784720979 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.782453833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.78758412 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.787779781 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.789767641 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.793634942 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.783507015 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.788848208 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.789351437 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.788804894 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.788062427 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78560644 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.782286114 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.783420497 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.787679703 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78692495 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.788657044 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.790493296 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.788030668 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.788560134 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.786609962 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78836229 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.790196462 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.797475853 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.793631373 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.7840133 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.787981375 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.788664683 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.793205135 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787772523 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.788706998 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789868495 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.792268074 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.78725895 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78865097 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.786569166 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.790884266 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80515795 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.787132721 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791166292 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.790367717 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796080923 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.788192026 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.785145318 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.788822957 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.794096474 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.791548791 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.795335539 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.789846673 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796956301 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789739821 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.79031522 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.790839687 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.792417412 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.797312645 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.793366327 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.789855773 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.789878852 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.79425791 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.80760784 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.788707562 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798654744 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818066598 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.790288043 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.792002688 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.790453024 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.789821081 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.790309754 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.79342097 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.790994019 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.789565186 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788814592 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.790698371 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.792270395 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797262335 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.793475543 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.790028171 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.789944539 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.791001686 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.79515625 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.786343422 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.790981188 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.790005883 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.790816663 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.791006433 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.791961108 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.793018809 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805613958 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.801991482 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.790170376 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.791041837 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.786600937 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.795338963 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.793590755 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801092043 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.796822852 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.79150249 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.791139471 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.793748693 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790936822 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.78784851 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.793271161 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.792372074 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.792893061 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.787900855 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.807812975 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799723125 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.798801417 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.793491831 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792219792 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.791706379 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793808149 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792837957 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792273226 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.79607757 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.793561646 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796470647 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.791761371 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.791289002 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.795488381 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.798511811 seconds)
  done (took 1062.122542822 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.790305743 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789232347 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790102267 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.790462709 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789793222 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.790134058 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79081263 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79024395 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.790022944 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.789845465 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.790277146 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790067331 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.789428541 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.790151212 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789357942 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.790298238 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790670375 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.790445672 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790194529 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789664055 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.790337416 seconds)
  done (took 39.320124005 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.792702748 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.7896005 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790003951 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.792769092 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789964237 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.794219459 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790301907 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793760817 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792543646 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790858644 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.79305419 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79282321 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.790552192 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.790833059 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790683567 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793635498 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.797320672 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791140322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.793623471 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791182421 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793456531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.792532386 seconds)
  done (took 41.156595233 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.794008164 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.795156579 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.794115941 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.791083293 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.796001938 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.791069331 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.794071315 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.79383069 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.793209379 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.796490837 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.794787952 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.795379375 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.799963526 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.797899104 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.797819488 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.793329473 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.937616491 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.796215051 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.796291993 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.794989116 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.791309104 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.802322977 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.792056795 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.792018794 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.794014984 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.795185236 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.79437477 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.794712083 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.79566083 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.797266769 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.799305875 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.795196152 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.796039778 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.798048685 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.795518341 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.79654197 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.797963794 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.796618413 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.792971292 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.794701107 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.805506052 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.815384962 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.796972069 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.803801941 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.795927013 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.794669195 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.799653507 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.803004334 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.792507012 seconds)
  done (took 89.893195592 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.794755967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.795936615 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.793796611 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.79555543 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.796212976 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.795051382 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.795766656 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.79641893 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.794105873 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.791800495 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.795729491 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.794800261 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.793650888 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.796687146 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.795965214 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793814841 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.794585094 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.794406453 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.794025538 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.793682828 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.79423719 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.79742858 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.796861877 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.793969498 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.797604933 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.794709243 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.794764449 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.797280582 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.795460446 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.796068941 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.797302137 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.796642301 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.79761964 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.795132787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.79509581 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.796605251 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.79708703 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.79514514 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.798252458 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.794246112 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.796537534 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.797255524 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.79674391 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.800302898 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.796394934 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.795272185 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.794362429 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.795128879 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.794150457 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.800200024 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.797568314 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.794456242 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.79782986 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.795986739 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.798306156 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.797023712 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.794849124 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.794232355 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.796457808 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.795815308 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.797441605 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.797396175 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.796079543 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.79674255 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.796858637 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.79486714 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.795716993 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.796759835 seconds)
  done (took 123.853507797 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.797504487 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.800430374 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799189325 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798629223 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.799561536 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.799317533 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.798450706 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.798413436 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.799828302 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79982428 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799617732 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.797138934 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.798406091 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.797887855 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.798963738 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.798471126 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.799265724 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797797389 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798416874 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798711811 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.797946373 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.79973042 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.798552401 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.799353754 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.799809821 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.799190786 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.798951554 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.799362467 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800084019 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.799348919 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.800270894 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.79923633 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.79952448 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.799965326 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.799609172 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.798521917 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.800716452 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799473411 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.801125635 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799267795 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.800052061 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79906089 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800055458 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.799884104 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799852286 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.798868221 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.804409883 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.800233721 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.799137025 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800369578 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.800493002 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800390089 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800064595 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.799616843 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.800900463 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.800585961 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800630771 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801225337 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803101768 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.801400368 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801634556 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.802209767 seconds)
  done (took 113.315003715 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800335279 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.80007326 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.79854899 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.798102203 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801181961 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796832311 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802960525 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.800670162 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.79972746 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.80015099 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80091011 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80151173 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79825944 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801254656 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.798473843 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797062622 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799258224 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.79932805 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800672414 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799275066 seconds)
  done (took 37.730372683 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.79831014 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.801475191 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.797951609 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.798521123 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.801220468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.798378892 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.800870941 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801570174 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799491473 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802301937 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.803371934 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801412709 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800446249 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798915546 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.802195573 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.799140071 seconds)
  done (took 30.54183498 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.800963149 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.8024365 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.8039477 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.802694157 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.800028251 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.798961195 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.80124797 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.801149729 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.800691573 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.802992748 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.803298863 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.803153547 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.803767319 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.803348664 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.799774802 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.803294835 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.800001999 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.799715159 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.804903385 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.805002729 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.801832019 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.801093815 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.8028997 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.806099113 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.801542898 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.802252902 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.80173181 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.799799159 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.801294061 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.804611226 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.799519542 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.80090774 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.800037046 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.801811998 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.806294175 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.802671135 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.804107251 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.803320269 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.803740493 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.804041894 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.804974851 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.800637515 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.804556549 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.803124288 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.800720516 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.804392279 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.801824902 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.80236601 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.801335979 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.800581963 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.804705374 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.807669953 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.805119415 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.805404815 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.804734739 seconds)
  done (took 100.882929441 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805140686 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806088946 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.801055888 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806288244 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.804677365 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.801975172 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.805175168 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.802334217 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803338177 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805389728 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804108233 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.805070161 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80487804 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804977455 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804790388 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805474551 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803277975 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.803951755 seconds)
  done (took 34.21843665 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.80316678 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.802520794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.805300959 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.802840206 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.802660718 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805655995 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802324649 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.804682877 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804941826 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.80455672 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803072263 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.805255622 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804202389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.805764482 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.802744809 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80612039 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.805642592 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80524894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.803372507 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803747929 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.80639098 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805874933 seconds)
  done (took 41.437290921 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.806338765 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.806979565 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.824366417 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.847868883 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.836058149 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.806139982 seconds)
  done (took 12.668246996 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804856996 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806633429 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803873819 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80741057 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806782035 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804904156 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804846528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803821329 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806795734 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805113518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803440492 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807276625 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807246563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804443266 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806749835 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808221238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805365212 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805267445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805918291 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808582406 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804666706 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808983635 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805208156 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805927532 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805939839 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805333578 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808445206 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805588171 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805878595 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809308129 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8080266 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80586158 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808356869 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806647467 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810122602 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809088729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805167002 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809563593 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808241607 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80538283 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.809245234 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807953086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807975677 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807055394 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808898465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807004257 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807746195 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806775068 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805943737 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809528781 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808384775 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808557808 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808905785 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808648562 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808430745 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809692695 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806502334 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808390769 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809313915 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807330142 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80744014 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80873031 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808132738 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807925533 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810274112 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807036318 seconds)
  done (took 121.015347814 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807581165 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80744433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806879415 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808992384 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80714816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807642605 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807873383 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809602412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807936201 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808221032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810587622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807828701 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808589794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807815884 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807595878 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808051468 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808866712 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807376158 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809264117 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811289865 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808290273 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80782673 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808906268 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810741405 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808894218 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811224328 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807947535 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808471477 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808016752 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810215606 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808134911 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809471379 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809212015 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.810522567 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810316361 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809266536 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809239712 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809777027 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809078027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811171858 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810426463 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811918147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809319772 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809273863 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809740095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809555748 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809495439 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809294871 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808433881 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809613805 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811186465 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810292514 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810166232 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81007596 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809350168 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809993094 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809588806 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808976574 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809973805 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812689672 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810314876 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809564198 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813879886 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811032742 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812076567 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811451794 seconds)
  done (took 121.168282857 seconds)
done (took 2474.56957837 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.802009958 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.861291366 seconds)
  done (took 15.411576447 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.975201117 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.931554269 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.814241927 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.815468276 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.813911311 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.831061196 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.816491505 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.81562793 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.813330135 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.81301716 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.816512435 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.001518579 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.868063671 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.816041982 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.813812809 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.908180103 seconds)
  done (took 51.415874742 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.819776595 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.820748918 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.83027978 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.819990988 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.817383396 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.830151957 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.848360819 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.82100229 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.854184998 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.829855822 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.889841249 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.827686675 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.818485275 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.867456858 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.829539055 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.832114959 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.904677688 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.892551095 seconds)
  done (took 34.902750188 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.897015439 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.82359842 seconds)
  done (took 10.475527415 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.8155734 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.833484621 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.839305848 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.836650326 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.845161044 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.86485059 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.824004728 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.829521326 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.839417348 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.838299942 seconds)
  done (took 70.120703287 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.825335722 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.821444811 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.819865828 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.816695849 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.812956828 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.816349027 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.821970776 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.819112055 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.504333118 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.856429653 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.825884539 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.828178361 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.819926033 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.821804106 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.816631997 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.844421219 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.958546895 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.818094816 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.815533289 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.824399311 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.819955232 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.88583786 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.832292856 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.818215321 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.848954523 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.500529447 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.827350749 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.825332211 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.936381895 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.816532355 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.819310861 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.820203556 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.821184766 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.211941445 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.10193522 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.818987793 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.829946442 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.826826583 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.817206884 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.950853812 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.820982195 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.825117616 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.813914894 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.084257618 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.900998499 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.862033137 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.147408556 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.824989934 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.82288751 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.851621368 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.823042316 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.822678403 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.834127476 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.342833083 seconds)
  done (took 129.948313816 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.815288053 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.393635709 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9813759 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.816524549 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09882354 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060528452 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.81641961 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865476333 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.820635315 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.065080435 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.992720861 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935930804 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.817016242 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.818380846 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.81923168 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.815583904 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.971282379 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.887519464 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.818824176 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.815513735 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851877663 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084529459 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.944043896 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.818770017 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.83987219 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04523874 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.942988414 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.933892996 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.424825536 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.815912295 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88535149 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.818090877 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.816101967 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.815869408 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.981854882 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.925488849 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914724146 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.818022624 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817550845 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.816451642 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.480380133 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040718595 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.928056646 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.95674963 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.066213332 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.047206702 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.464129673 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.816766739 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.464673799 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019480698 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.028622452 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.072446181 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.946463181 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.820542991 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.070850205 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.8175153 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.818229552 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081972664 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049023548 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931720118 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819286107 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.820172354 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.816586427 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133138563 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.820787695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.928643726 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819043784 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.818955211 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.931783544 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935315354 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.050394174 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063110569 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.849952459 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.715294177 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.33447778 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.102348004 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.893083017 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083930282 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.820226849 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.818803887 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912422935 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.575281806 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.993916484 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.136710796 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.08493399 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861765547 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.456760921 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.819235608 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.067744791 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069342755 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.050567655 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.064002216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.98831051 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.151158663 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.819214083 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.819907121 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.029049856 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.953292368 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.825894182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.182537691 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070187842 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.560805953 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.851793271 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125820131 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959737693 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.823805611 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.446441669 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.822706662 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.022348088 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.863488006 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.821267964 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822329098 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.06733064 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.691839736 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.821422676 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.595757227 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.887033123 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.821777447 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086370043 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.822801567 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063335369 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.824381412 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.131164088 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.327941124 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865578685 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.014030137 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.066731076 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.621485115 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.091303768 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137033886 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.946240707 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085132233 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.644692666 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.822082762 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105361897 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.823819437 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.82233792 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.99252514 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.823305533 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.977110646 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.827626621 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.083910122 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848847566 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994310771 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.828575397 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.095301079 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868222988 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875639713 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.826485931 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942743208 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825743837 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.868427428 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00792543 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82674425 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.823963978 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.388712282 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.824409928 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.971781369 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.12318085 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848077718 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.895620114 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.350876286 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.822481799 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917045983 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855518706 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.424944883 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.825114846 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.995649871 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.829424399 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.81599699 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.823016661 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.132832821 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.04832544 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825492726 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.824353096 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.618659754 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.532131856 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.824512694 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.001597001 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.095678441 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.473806753 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044117845 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.82737752 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957098284 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.827407638 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.907348816 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.175063111 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.825522964 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.824690424 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.824935986 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.825025642 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.823699797 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051869406 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.853871195 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.534232561 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.962747489 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073215109 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.138675617 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.089314857 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.875357182 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829453588 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091851326 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.827919718 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.892367192 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.827667375 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.849439788 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074497618 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.830437003 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056874886 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113816253 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.871896162 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.877719357 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.828909368 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825699211 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.825031169 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972316844 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927059621 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.828722204 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.827951555 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.945076334 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.953162035 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017944704 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.42091371 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.004079231 seconds)
  done (took 893.630482011 seconds)
done (took 1207.653490886 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.82701131 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.829955926 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.815076818 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.828428296 seconds)
  done (took 29.068017595 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.833625747 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.83092617 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.832661276 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.830737697 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.835363453 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.832830116 seconds)
  done (took 12.761806953 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.889656564 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.826703186 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.827789547 seconds)
  done (took 21.308888151 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.898804718 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.237651966 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.937487457 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.277640659 seconds)
  done (took 10.115423309 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.832719208 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.831932511 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.831625565 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.832629216 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.833427097 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.833999791 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.83324854 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.832106556 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.834343545 seconds)
  done (took 18.26089534 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.045826694 seconds)
done (took 97.326190657 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.080063089 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.125804123 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.546433279 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.934852848 seconds)
    (5/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.922806633 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.165088194 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.813061671 seconds)
    (8/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.913647129 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.849841633 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.170358003 seconds)
    (11/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.943070739 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.055939817 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.999073367 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.983623424 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.115102405 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.867659985 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.851566608 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.903347306 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.989458355 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.136439288 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.898798672 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.914236887 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.112394449 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.165140616 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.830420427 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.922314806 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.905736334 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.029412316 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.917437935 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.907918098 seconds)
    (31/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.994929331 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.935391451 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.179721906 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.853059049 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.965402117 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.163520193 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.158603185 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.42180002 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.738495267 seconds)
    (40/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.332547857 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.197967004 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.881223243 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.831598995 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.943162482 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.256061622 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.068664518 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.091212278 seconds)
    (48/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.835836641 seconds)
    (49/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.812264228 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.530468456 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.857568128 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.883665634 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.951970894 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.392050597 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.854692913 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.495022513 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.241320809 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.716942259 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.973342789 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.010819799 seconds)
    (61/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.119040938 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.695442683 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.126442397 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.842971079 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.07665529 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.83108463 seconds)
    (67/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.219884543 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.026139665 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.831428344 seconds)
    (70/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.715659305 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.839858838 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.009402365 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.974068422 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.547257321 seconds)
    (75/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.42297944 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.422629974 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.128133708 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.83399471 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.878782994 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.260575571 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.343167516 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.862516679 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.229571145 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.012639497 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.89804053 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.822758987 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.145876369 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.914409042 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.854012379 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.81329156 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.836595531 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.956024074 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.020810276 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.059263766 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.095129052 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.396534199 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.827627484 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.867768428 seconds)
    (99/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.022927304 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.839149182 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.115673888 seconds)
    (102/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.892486137 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.961543781 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.050343986 seconds)
    (105/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.935725549 seconds)
    (106/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.114158287 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.051157488 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.717068106 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.061887877 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.833633039 seconds)
    (111/309) benchmarking ("sort", BigInt, false)...
    done (took 6.844803966 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.938423209 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.836862504 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.837329152 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235187614 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.957205248 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.816611717 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.977687625 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.711673057 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.13736848 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.849584371 seconds)
    (122/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.163624398 seconds)
    (123/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.917196166 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.113560969 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.835094372 seconds)
    (126/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.085891879 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.29193359 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.857870239 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.425203311 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.834770623 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.085407034 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.217300999 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.053751883 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.931947769 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.10035354 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.335679251 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.975872917 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.753706376 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.823881162 seconds)
    (140/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.398653216 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.89830839 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.934384577 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.231601585 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.295410325 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.086216479 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.073639561 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.089545871 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.863453254 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.962999889 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.026309884 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.021728352 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.979709021 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.849172807 seconds)
    (154/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.432025536 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.374494946 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.835978851 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.955925294 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.104857134 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.838418157 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.20982986 seconds)
    (161/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.75557826 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.446452183 seconds)
    (163/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.933870671 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.857976971 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.495723277 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.859708159 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.483689002 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.84792092 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.836248378 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.901981887 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.501897275 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.046965109 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.825724567 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.272585484 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.84130605 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.824216884 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.849263812 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.866947869 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.880807044 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.835734776 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.158779909 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.82385743 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 3.395125001 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.861019096 seconds)
    (185/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.968928182 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.884139025 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.903613469 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.840953963 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.480650713 seconds)
    (190/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.109438669 seconds)
    (191/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.355635006 seconds)
    (192/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.92841341 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.192750841 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.823847217 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.882459152 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.899636509 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.218359031 seconds)
    (198/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.866551646 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.671389865 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.795291158 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.91376862 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.837229048 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 5.614120859 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.846573574 seconds)
    (205/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.934725903 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.765870609 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.056837984 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.93674759 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.470797351 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.045108119 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.838604674 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.348098139 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.825464493 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.221072812 seconds)
    (215/309) benchmarking ("sort", Float64, false)...
    done (took 5.644022869 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.892083499 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.923579333 seconds)
    (218/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.971328583 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.895161721 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.075842515 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.863620337 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.863977086 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.159173915 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.729741455 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.891216961 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.135336304 seconds)
    (227/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.8271794 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.308128313 seconds)
    (229/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.595248087 seconds)
    (230/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.97176594 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.825384049 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.973940592 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.824476731 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.89742451 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.223450659 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.771157861 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.990585857 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.84588164 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.486029711 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.014821109 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.126240319 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.135241196 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.517763946 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.152030186 seconds)
    (245/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.973199682 seconds)
    (246/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.227484342 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.252046304 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 9.021608036 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.984583701 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.958458363 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.934513597 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.932549655 seconds)
    (253/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.342345305 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.877669233 seconds)
    (255/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.009202551 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.873003478 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.09571074 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.833513305 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.858773488 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.242515524 seconds)
    (261/309) benchmarking ("sort", Float32, false)...
    done (took 5.602611837 seconds)
    (262/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.006046094 seconds)
    (263/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.193618275 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.654980243 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.202130264 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.993846217 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.86960531 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.530685838 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.181403071 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.969239239 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.141642616 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.095590061 seconds)
    (273/309) benchmarking ("sort", Int8, false)...
    done (took 4.852122003 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.094004808 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.218298987 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.832989042 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.019189122 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.962224076 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.673942542 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.962967055 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.861810417 seconds)
    (282/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.926774534 seconds)
    (283/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.949783478 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.358494698 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.92782842 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.926299589 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.040279769 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.175964032 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.123090847 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.96688894 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.35282757 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.23880175 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.0420255 seconds)
    (294/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.831155535 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.567717915 seconds)
    (296/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.974205205 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.870196606 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.886532487 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.832478807 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.634010477 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.91559274 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.940198858 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.868055311 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.223682597 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.993338082 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.917204598 seconds)
    (307/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.957441022 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.152873188 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.944915802 seconds)
  done (took 1014.386405791 seconds)
done (took 1016.167488125 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.881027838 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874469319 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.857616625 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.878427611 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.969228487 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.88826589 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.868089074 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.859461146 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.906438172 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.90682785 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.857395035 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.885596025 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.859650984 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.858413898 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.85763522 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871779106 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.164132925 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.881452263 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.873762755 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.86750033 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.874791458 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.85702079 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.908053994 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.885809954 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.861616397 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.861641189 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.862230459 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.877487041 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.970589339 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.861707779 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.860153723 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.870246696 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.164957259 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.878980551 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.85444011 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.878787859 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.87000829 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.867397239 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.861305364 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.891744828 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.295297299 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.865989015 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.860832027 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.859215324 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.861007549 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.864807826 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.860832492 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.864867341 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.872863131 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.874269761 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.293959351 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.880736915 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.862952759 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.860386558 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.870275648 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.860027095 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.863627395 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.876391859 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.879005412 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.876090183 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.156010556 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.886430786 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.861812148 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.877436754 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.86705462 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.330588553 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.861187574 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.865215845 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.297320747 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.872016368 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.331778856 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.875824868 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.862010598 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.874638433 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.891595182 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.164692706 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.879329186 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.860107882 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.869286435 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.859037239 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.871561202 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873916621 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.866438436 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.862818283 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87525584 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.890412171 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.872140759 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.861637331 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.870901527 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.881629134 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.868975506 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.875689268 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.864517811 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.85721781 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.872735651 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.865691121 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.864752288 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.866022933 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.867032215 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.873390585 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.297038866 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884431829 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.861149087 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.859427404 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.861657494 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.877187882 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.298219411 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.868567931 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.884789119 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.909694009 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.863979245 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.156255767 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.889059693 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87836286 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.873095138 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.866909996 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.858739798 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.158802226 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.320781121 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.883770583 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.865105443 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.862741515 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.879947764 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.865576134 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.860233651 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.168815167 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.888146029 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.877394488 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.985012742 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.874826539 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.89526165 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.863040264 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.868106943 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.891586705 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.879854434 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.896615375 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.867387604 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.880813737 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.882214954 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.861638905 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.876115656 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.875795001 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.866831805 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.871392542 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.85973255 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.898281492 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877731946 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876192795 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.886485577 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.986378678 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.862796614 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.15966498 seconds)
done (took 292.595819848 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.932547035 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.854308099 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.96415549 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.861500304 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.945619484 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.948815907 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.859072218 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.859366127 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.858438414 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.240664787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.85821576 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.859122963 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.862015992 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.859522844 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.94464959 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.861536318 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.860214347 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.205710996 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.862850009 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.933210727 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.862777132 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.859840343 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.862297244 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.243576132 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.860256023 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.855544149 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.933963292 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.862930188 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.20838363 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.864206174 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.857422149 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.208879258 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.952845698 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.88121438 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.873066142 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.870387364 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.947321168 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.866535909 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.944797599 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.944761025 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.96746259 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.903880897 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.864216064 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.856733746 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.865662337 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.865552736 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.861156918 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.891198002 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.858065606 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.862147428 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.206193536 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.87346858 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.871744044 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.861933179 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.860990603 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.887244028 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.861765036 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.864944579 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.954535521 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.865936289 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.927099169 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.245008777 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.243487505 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.864464592 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.862930697 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.861852038 seconds)
  done (took 183.897723104 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.93318644 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.940944654 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.932715006 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.869489445 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.919422059 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.938375009 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.869384894 seconds)
  done (took 15.2001228 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.87282442 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.866092956 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.917148861 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.917007818 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.867203225 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.018799402 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.866426708 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.87975498 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.864387267 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.921722438 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.867218456 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.866030365 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.873121875 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.859789837 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.915637546 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.878453635 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.983002076 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.868208407 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.867013645 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.024777535 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.864460154 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.87263897 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.922405171 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.879260645 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.866715514 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.87389839 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.45065405 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.868331329 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863724558 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.867878877 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.86426965 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.911877778 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.868194331 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.865512683 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863853427 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.984342568 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.867487776 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865834619 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.867393367 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.862187418 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.867836312 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.86801376 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.868717181 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.865100542 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.868977393 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.892460082 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.867759231 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.868620596 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.869097736 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.867389468 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.918824059 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.868176828 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.866304179 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.865761293 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.344662497 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.874757825 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.870661899 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.865540658 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.869748976 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.86659484 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.027215893 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.916759876 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.868082345 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.917701324 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869485231 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.868612871 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.86842941 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.867835947 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.924882528 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.870569468 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.918574224 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.866039947 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.030080664 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.893243663 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.869955281 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.873177361 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.872032779 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870586898 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.863145659 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.877725688 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.867041404 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.871758513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.87742028 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.876123799 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.86625873 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.984547752 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.979859072 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.866481886 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.88292698 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.879127514 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.867415426 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.924070554 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.869577061 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.867158819 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.924030167 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.987254405 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.928400199 seconds)
  done (took 206.115584351 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.875601669 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.879261395 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.872757993 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.886481202 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.871985456 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.870989713 seconds)
  done (took 13.059401566 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.873037698 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.87182538 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.87150222 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.87043892 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.871257419 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.87127844 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.873251233 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.873621095 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.87491623 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.869958828 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.871683354 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.872991161 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.872843076 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.871617005 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.872074769 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.870772944 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.871930248 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.867730014 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.871258686 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871871961 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.014924094 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.871857005 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.87253581 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.873305096 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.875329929 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.871489573 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.880172086 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.87180818 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.870894154 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.880288373 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.875824882 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.872325076 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.873109668 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.877233537 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.876063565 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.874415416 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874351577 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.873664656 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.869706073 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.873669248 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.873491277 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.875183865 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.871882915 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.874159263 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.875139151 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.878387743 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.879008385 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.881765454 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.8745604 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.875169509 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.875852348 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.872248436 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.875029248 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.87501204 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.877733239 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878274756 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.878391751 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.87616606 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.875033575 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.875879454 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.873633391 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.8738513 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.875811512 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.879378191 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.880495035 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.8750695 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.876806245 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.878515112 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.876132414 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.873446341 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.875928165 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.871312808 seconds)
  done (took 137.893111696 seconds)
done (took 557.973354179 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.155554017 seconds)
  done (took 8.961822249 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.033314138 seconds)
  done (took 8.935312134 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.386490494 seconds)
  done (took 10.193233337 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.871169108 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.912998117 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.881310115 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.874194602 seconds)
  done (took 29.354368267 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.938785599 seconds)
  done (took 8.745813434 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.880433361 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.866940814 seconds)
  done (took 15.589613838 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.964850139 seconds)
  done (took 8.77179524 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.933825932 seconds)
  done (took 8.742805172 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.874127313 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.877689266 seconds)
  done (took 15.572355927 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.854798575 seconds)
  done (took 8.661191152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.576074816 seconds)
  done (took 11.391582025 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.874720781 seconds)
  done (took 8.6924242 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.867886544 seconds)
  done (took 8.670616745 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.977125446 seconds)
  done (took 9.77908311 seconds)
done (took 163.868131275 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.868087069 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.871247731 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.867911714 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.866897145 seconds)
  done (took 29.276526284 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.904184213 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.904030355 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.906115991 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.9147464 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.906963959 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.905857554 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.896426897 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.895827589 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.914435987 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.908050483 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.907013313 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.905867291 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.904971564 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.897002465 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.906469381 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.906053216 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.915262349 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.906150272 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.89635007 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.90799597 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.87185566 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.917528228 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.908484028 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.87341091 seconds)
  done (took 47.484738709 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.071445162 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.944774072 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.02701221 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.924859744 seconds)
  done (took 9.77218298 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.923031309 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.924914009 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.936152 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.975640592 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.012966049 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.934779407 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.898793423 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.893810492 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.880180957 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.926116069 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.000767963 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.94233288 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.010070685 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.872100384 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.059482466 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.872066244 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.873194626 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.925040686 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.977073587 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.989876807 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.87253238 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.92426355 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.928164405 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.942202453 seconds)
  done (took 48.300997855 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.870912056 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.880318097 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.878510925 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.872225182 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.872246478 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.87354812 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.878392655 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.874147513 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.893942304 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.873326697 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.872023107 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.873324322 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.872319876 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.87289321 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.872058295 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.885099341 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.885568526 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.873522936 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.875619649 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.879374639 seconds)
  done (took 39.335393604 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.868822124 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.723620103 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.220385141 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.125302431 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.869410636 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.869254255 seconds)
  done (took 31.483894502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.887148414 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.936374638 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.881472839 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.930350893 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.010500842 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.881703391 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.875021071 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.941408155 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.981672413 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.945430749 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.893910087 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.900371155 seconds)
  done (took 24.872135356 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.870385087 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.872328123 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.872118067 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.888954959 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.886777457 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.88209222 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.88254961 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.868734936 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.889125476 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.892996639 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.883178366 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.886318727 seconds)
  done (took 44.385714164 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957623648 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.913788034 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.915647141 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558079178 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24901421 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081399784 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.476852024 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199237462 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.87367117 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14309543 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.957929172 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973209512 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126039844 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300384464 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.90127228 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35258103 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169248529 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079344893 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898963772 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577962303 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935790187 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.006359152 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.639105131 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.928866125 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08290914 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.004640437 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.133147786 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.871357091 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011606716 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910560455 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881833224 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871072146 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145400323 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251406308 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977826852 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88181223 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.491489235 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.584879083 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.857899709 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.660428832 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.633007241 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.997250687 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882416571 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872816825 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.806527798 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95821471 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241762773 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.877499623 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.583474142 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872410154 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882829074 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966568955 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.87658172 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.686962776 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820176586 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.874346407 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.870827843 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879686316 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.447090128 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.018542425 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.003557553 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.843303858 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.96677062 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.67322573 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266739254 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.025455284 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.87651041 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876817075 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807793571 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.653844877 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930332596 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203302606 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.894471383 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523484244 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186950535 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.019046627 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815647644 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141222167 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.346452878 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.843739342 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102903441 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874472027 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809843203 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.825693509 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809264682 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138729638 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911934286 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.646501685 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92107065 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202996006 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.886116215 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891145554 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899538718 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.098484591 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.7624523 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874652484 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.741181946 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025777097 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897120158 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202409941 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810189081 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.879431829 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132676526 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.086204874 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.887464491 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.389967957 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032086382 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384056434 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.924583685 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.970322234 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918784064 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.148065429 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936321223 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.020103747 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930754716 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875681578 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170613239 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413746606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.010172285 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.98176546 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002766509 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205071051 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904925413 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95858189 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88590265 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876579974 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.65781211 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42865365 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.876770833 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.878873934 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.891275296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921693122 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.879074175 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827091358 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.506815685 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.980560782 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.890523314 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101164615 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394925285 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189868434 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813055493 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208019954 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.934208337 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.102135635 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.531392283 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.954987001 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13985518 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.893471466 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.922568013 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92278243 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897378507 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976793356 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900242466 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.969213966 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.1680078 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.88265712 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.882308275 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.688129939 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91788398 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879552592 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.884702431 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627707417 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159278861 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903909831 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885631944 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.769704505 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.893029776 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943546935 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885384379 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88948963 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.419745091 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.593029265 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.885498394 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.471050704 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105719192 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890590706 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.66185112 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995359284 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.962368404 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161496619 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940957703 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.814719859 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.591838352 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.573666106 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880364596 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821152644 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.8815297 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88979055 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891338955 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.07763066 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158261139 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928067221 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.588650264 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.923329567 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892067593 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.885798456 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881050331 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.394240808 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.030110673 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011050982 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923534969 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024939429 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.89580817 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.815626055 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.885383304 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888070815 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882303092 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.883385039 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915466369 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.59644563 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256585029 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143904403 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.493169461 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895602643 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.62095616 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.941290315 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.880514319 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.765466657 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.000441217 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.003062336 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894018098 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.894173037 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.678453098 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.591551506 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454064778 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195162824 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194415499 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321884083 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.049763762 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.90910222 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217319099 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817917943 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.448815566 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939841204 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22355458 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827910261 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966427268 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.536494337 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227788002 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897761706 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112244009 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271573808 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.68617495 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02784838 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095238328 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918805135 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.982627842 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843021792 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.408817657 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026358736 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.61467482 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089557408 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21560202 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.625665735 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.011700091 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.885266755 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571249847 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972369236 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.599565035 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.056117262 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.037221615 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.882711147 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353942359 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.891587413 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.111309616 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235959016 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.025345012 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.001670069 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822384895 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.89596827 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.896003986 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.886462476 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.885416931 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.74996828 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.14036488 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89635816 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818763455 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.966170539 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174984176 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.78880361 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.891383349 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886425277 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185981277 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.381362824 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05547416 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.931713083 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402752614 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894628745 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820532346 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821050408 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.57976316 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892810417 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.862191267 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094958629 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.989325747 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810819963 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911961414 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964731481 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144392496 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.901746695 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162739957 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164324852 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.587727278 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910602562 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.988029121 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.62096364 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.997911178 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.888093274 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.122608692 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640681623 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115081045 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.932722851 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.846927987 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.888479534 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102870569 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887510073 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.861129817 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119527135 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.610635074 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.013334428 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200043104 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964855963 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.861571666 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.934192587 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.981789846 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898967383 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96736357 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898621175 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.899569157 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898955568 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934268179 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869887272 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013117949 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.903794773 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983036025 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.039903359 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.418938943 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.895049563 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165903205 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256745946 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219683332 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948811786 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.889957687 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89331427 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824465403 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038616115 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.116020778 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163057339 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.018886062 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.006081436 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914775451 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626362917 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.053954509 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129034484 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165570614 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.784576365 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356676049 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.927906056 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.890732684 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901070766 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.101310713 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1004198 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189112724 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026863731 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.926440074 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.248119942 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164866307 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.892109927 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890732663 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.480926896 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.893762811 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.687944788 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.937230082 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.867081158 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165015195 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901939853 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27205406 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.913964763 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.051800724 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.663960871 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612992884 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182580512 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.884223457 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958021471 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168114026 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.28183118 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205515529 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959862042 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902681583 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.993289781 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039121624 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.75821937 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895807839 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892880456 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.108565553 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.602997144 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902424996 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172212013 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210237659 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.891068575 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.76970031 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921707162 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.903837614 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1169714 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157031855 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146272444 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903248488 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898927581 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.709983243 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169735899 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953186265 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827229817 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.898158282 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994221691 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.142543971 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917327128 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.347208718 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.605632343 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16391064 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.894830521 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917176232 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.008097824 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258290942 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221392996 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.434235788 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102908477 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.483883214 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.429591779 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193070516 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.899764151 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.023440577 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196574109 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.898755866 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.919251072 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932413972 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.16915313 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208466561 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.91257076 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7362801 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.865617972 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236963112 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460385937 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834649953 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903998956 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.956314202 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895929038 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.026496309 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907368359 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.769122397 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014546257 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.655524941 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169804873 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.9014261 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.889842808 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.717761018 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.124504204 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930636058 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038775493 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898817098 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.572065479 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.246821147 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152440219 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.926317072 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.906003465 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.900469011 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897257044 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88560268 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093757182 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.094247142 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172177952 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.957079336 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.933463765 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900655359 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.114012632 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10845806 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.880944635 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036398409 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917857643 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940148261 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.804172883 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406079272 seconds)
  done (took 1681.572793366 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.909024538 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.913799768 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.933776227 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.99259031 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.915498366 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912238588 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.053590758 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956320665 seconds)
  done (took 57.422675743 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.900222021 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.121584345 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.907607673 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.899282104 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.907811439 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.899077117 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.063960627 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.909103641 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.908416776 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.909605339 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.89971052 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.899384881 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.205031611 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.920649672 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.900717893 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.886906892 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.908512772 seconds)
  done (took 74.903815899 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.90126959 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.942383993 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.920625913 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.912898932 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.953093334 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.91059115 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.751571413 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.916386201 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.903487045 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.043315971 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.527797507 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.902495667 seconds)
  done (took 87.423779657 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.908339907 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.906464044 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.906960692 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.906897876 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.907658314 seconds)
  done (took 11.37563858 seconds)
done (took 2189.438391113 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.155753197 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.112474755 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.123235053 seconds)
  done (took 6.072874518 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.049916044 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.098079865 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.219581354 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.224907168 seconds)
  done (took 10.432917499 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.186399475 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.288843719 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.104575432 seconds)
  done (took 8.417758755 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.302117666 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.905999695 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.008821199 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.899840401 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.904554336 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.902617595 seconds)
  done (took 22.545622818 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.903991016 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.906680772 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.90440792 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.906765618 seconds)
  done (took 9.45878616 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.885274995 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.683975203 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.890947224 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.902346235 seconds)
  done (took 21.200755904 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.653806601 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.663622823 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.648016791 seconds)
  done (took 9.803505522 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.658696982 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.834015722 seconds)
  done (took 9.330866296 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.170527672 seconds)
  done (took 4.009509461 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.035948462 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.170658173 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.377606566 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.401087273 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.459593422 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.77192069 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.209358931 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.146767959 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.296574908 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.331650279 seconds)
  done (took 25.040540295 seconds)
done (took 141.523336793 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.288569848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.151571029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.110469883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.245942814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.132055097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.109082618 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.324613052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.230044075 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.766214756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.753805705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.245177716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.130117019 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.062447777 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.152250698 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.062436099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.904207163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.206910619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.310988158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.983113488 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.14210887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.327504443 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.887133263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.085453855 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.904881357 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.158459223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.060675948 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.465484894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.904567547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.133316998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.47878378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.062650853 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.292019957 seconds)
  done (took 171.91340907 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.675243569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.906448126 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.90510269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.906017709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.493857129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.905619193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.905560244 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.905321611 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.161362844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.12733808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.906317048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.486017924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905858252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.905442781 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.908650251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.905173449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.275259089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.73969085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.915854744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.917565745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.920884748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.431424825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.92486081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.491362901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.312171009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.925695809 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.906282145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.929149037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.917894887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.921960418 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.922788256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.906784261 seconds)
  done (took 210.112381548 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.906623393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.90813849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930710623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.907816302 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.907962065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.908400695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.908591709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.906556946 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.527688295 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.548754239 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.942353553 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.919844416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.913825631 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.908686209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.921189593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.907297929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.954193093 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.909080781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.917817918 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.920372871 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.926814777 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.722001064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.909173709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.730316782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.945289449 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.917894685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.908625204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.918373925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.919545437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.919677749 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.919446598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.909770424 seconds)
  done (took 222.087539978 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.114325607 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.918680164 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.919353268 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.871322062 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.919295564 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.918359281 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.910832993 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.115661837 seconds)
  done (took 20.044686473 seconds)
done (took 626.009549706 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.496620628 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.259898047 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.107992088 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.943253672 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.188369316 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.984808239 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.940606215 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.007759776 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.67307222 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.012677798 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.648514247 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.960220071 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.734664557 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.964739663 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.070033316 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.000164463 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.494480769 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.585014515 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.120298329 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.018423301 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.122616491 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.947185895 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.017629173 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.696294361 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.755781071 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.953430522 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.14749668 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.500101788 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.952454448 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.107583539 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.687175342 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.331069523 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.954959421 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.939252116 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.991818347 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.975716941 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.308434916 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.952848313 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.068448798 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.712757183 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.007009217 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.551915753 seconds)
  done (took 105.743940996 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.912118888 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.909737552 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.909681353 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.910032186 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.910882917 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.909106895 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.909313505 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.909450075 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.909823729 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.90927538 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.909789948 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.911220971 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.909446925 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.910328665 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.910061298 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.909420789 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.910745315 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.912409282 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.910614237 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.91072114 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.91146502 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.912563388 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.911479788 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.909190162 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.910388251 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.911123483 seconds)
  done (took 51.535241267 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.923056912 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.068616078 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.16042344 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.94408278 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.924059185 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.928070647 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.944307858 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.928548195 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.926957207 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.926459244 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.022691889 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.930623354 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.944381188 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.162533526 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.942081654 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.923815097 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.925306722 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.92542977 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.074130514 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.94371774 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.946294791 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.929800716 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.944959163 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.938959409 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.927821087 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926989103 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.928959026 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.359695246 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.934917988 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.023871105 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.027623715 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.951830015 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.319718517 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.171138262 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.994631355 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.932135006 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.925528869 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.028978951 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.932169228 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.928042355 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.945329061 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.930682566 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.161450524 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.425824975 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.940405919 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.926041068 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.369919264 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.035811115 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.969197954 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.938052203 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.16486854 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.94375301 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.927735011 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.927563389 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.963785684 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.937141569 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.926828791 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.235980611 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.938414801 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.945760737 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.931726088 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.927629576 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.081666951 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.936053693 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.072370955 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.936886132 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.935136672 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.928265254 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.162074178 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.943861929 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.4241396 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.941706417 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.926407936 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.026124602 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.075066518 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.399004674 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.942244984 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087164639 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.337906008 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.953484059 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.935466362 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.349465944 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.956507309 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.935845473 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.927942034 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.929530214 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.927829188 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.972003436 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.945440458 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.36202213 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.428659934 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250440253 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.956952655 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.945040684 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.929818362 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.23943548 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.937514986 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.928664943 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.15622777 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.44454431 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.943247543 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.936821825 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.41300261 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.944797778 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.949247298 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.938408019 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.167596212 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.944803812 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.972486202 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.929949569 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.937503535 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.931925942 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.949207023 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.937401382 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.929830827 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.401971348 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.044908372 seconds)
  done (took 238.658038089 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.925361424 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.939692607 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.924069496 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.924767423 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.923407324 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.930493817 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.933546397 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.923624329 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.93072054 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.924011797 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.924120687 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.926152407 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.926450267 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.926380574 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.969375899 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.932127784 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.537801829 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.926714742 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.92575052 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.925499535 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.578959225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.930692469 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.924393331 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.932113508 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.925662793 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.926494276 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.932094811 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.962580283 seconds)
  done (took 169.175967822 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.931251318 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.047544429 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.949991608 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.96073779 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.939123695 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.928751024 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.955873165 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.947504818 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.937074933 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.929018319 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.92979422 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.992346504 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.942440417 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.031609762 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.963931455 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.962238388 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.034683031 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.938824056 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.930149399 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.92999662 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.961262828 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.927789633 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.993705974 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.058366871 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.948512942 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.04847532 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.936649737 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.933300408 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.93232737 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.0491776 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.946206808 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.991379223 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.960685332 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.950780754 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.053584186 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.047845975 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.037903298 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.96324637 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.937376671 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.931353919 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.931510696 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.92217071 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.048715136 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.950904906 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.935345582 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.039929264 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.949918341 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.934489546 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.941863378 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.931109347 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.947494012 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.951765507 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.001695816 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.06544872 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.965264823 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.958600195 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.959868237 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.2330107 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.948259741 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.033342608 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.92788601 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.051671114 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.952125052 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.921508484 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.933383696 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.938829003 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.961046575 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.966299059 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.039863831 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.942511511 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.034339255 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.969312291 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.941822294 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.933456901 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.935711281 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.050974608 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.052339431 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.968306955 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.971693971 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.96610092 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.930052662 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.934751833 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.923445821 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.953147606 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.938207936 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.051791763 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.052284254 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.942441249 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.935725127 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.935893556 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.936476281 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.961901428 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.059654142 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.970225321 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.033153557 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.004603397 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.009885415 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.949355368 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.947702763 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.939062403 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.999616837 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.949602453 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.947360447 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.284447418 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.011943197 seconds)
  done (took 209.371192929 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.029752871 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.410274708 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.99206066 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.991632124 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.238691421 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.361157727 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.710449704 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.983720231 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.98508223 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.011034403 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.139961949 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.039136237 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.997083458 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.972748741 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.384298974 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.978711211 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.98609993 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.005670058 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.987285427 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.536305111 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.312626173 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.10568772 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.984320623 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.136905389 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.969118403 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.273066638 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.308386729 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.367185661 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.019438154 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.336614114 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.318331962 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.678518754 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.196781429 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.226559192 seconds)
  done (took 76.847832487 seconds)
done (took 853.181937371 seconds)
SAVING RESULT...
DONE!
