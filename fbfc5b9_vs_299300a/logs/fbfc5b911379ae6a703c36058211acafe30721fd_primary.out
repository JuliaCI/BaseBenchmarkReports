cset: moving following pidspec: 28771
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.374151105 seconds)
loading group "string"... done (took 0.505555899 seconds)
loading group "linalg"... done (took 8.45385335 seconds)
loading group "parallel"... done (took 0.174774604 seconds)
loading group "find"... done (took 1.356196773 seconds)
loading group "tuple"... done (took 1.951614412 seconds)
loading group "dates"... done (took 1.338081292 seconds)
loading group "micro"... done (took 0.208719348 seconds)
loading group "io"... done (took 0.57113587 seconds)
loading group "scalar"... done (took 40.903061374 seconds)
loading group "sparse"... done (took 12.889701357 seconds)
loading group "broadcast"... done (took 1.032187982 seconds)
loading group "union"... done (took 14.016694772 seconds)
loading group "simd"... done (took 4.843848131 seconds)
loading group "random"... done (took 9.738186617 seconds)
loading group "problem"... done (took 2.077600983 seconds)
loading group "array"... done (took 23.338318767 seconds)
loading group "misc"... done (took 1.068560361 seconds)
loading group "sort"... done (took 3.533390601 seconds)
loading group "collection"... done (took 20.957817896 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.577494305 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132230896 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145407876 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172980488 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202209042 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136846467 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153596812 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.458344957 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.042399101 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.229280451 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.124783582 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534592552 seconds)
done (took 5.657248776 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222754586 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.071885185 seconds)
    (2/2) benchmarking "String"...
    done (took 0.124632496 seconds)
  done (took 0.893160638 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073247075 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1705687 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091427503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107678374 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10764954 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107922743 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091650809 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107246052 seconds)
  done (took 1.483397307 seconds)
done (took 3.376818985 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.759144156 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.831203013 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.485604513 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.12694816 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154336487 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127388832 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.30799678 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.156716186 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.103123458 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112026908 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173591872 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.351082508 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.423482148 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.929794356 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091710991 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.12649931 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078805833 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.715191423 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078147122 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128995291 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.49810097 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.1100902 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117424116 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123013692 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205014329 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12964818 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17909321 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10078456 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681716181 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098687507 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18094514 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095281101 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158749921 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.225241783 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.075334176 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10466905 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673564619 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187126563 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108900537 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092007292 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66972865 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077629517 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.201259958 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107697248 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110701778 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192350772 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114328118 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.074739961 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097214909 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084002873 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167703666 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.455276378 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104740022 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140794128 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106737319 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.677523546 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093075558 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152950207 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121603609 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106339474 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095238389 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.11374656 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155000333 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.121242606 seconds)
  done (took 19.48523428 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116263436 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137309489 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091886188 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136172614 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136190226 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094005458 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081285149 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091547298 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.1065136 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17965174 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135444681 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141374795 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089179154 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078334056 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117775912 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247775165 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103935597 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120754001 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080065976 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105487026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138261815 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093914577 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107072087 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091015241 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16752317 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216082022 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10819898 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122571869 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092154548 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096951225 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139970017 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157273402 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073250649 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091442702 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176314179 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118263419 seconds)
  done (took 5.09630664 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194248752 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116320538 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188555358 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172675915 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144928376 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161629386 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115096972 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259540478 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.227136733 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162146311 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128312982 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113371455 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076326215 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093827326 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077063758 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.771235925 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183981066 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144398727 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121045073 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099426069 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07908931 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368752029 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096885315 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07804839 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098795107 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068256018 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167707415 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100611927 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.22343966 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.097620086 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104636351 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127629731 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190691983 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123296178 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158369206 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11350671 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10148571 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076398733 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216631402 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086154874 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.091959485 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100072435 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131398653 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130596778 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094836894 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.102958482 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224582421 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095478498 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.094852524 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.024741126 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.213181688 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093630025 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096179384 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.341161406 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09753808 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099891884 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076160372 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288639371 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130943981 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095461237 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075698278 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099606095 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07650706 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393301412 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101354389 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.951712738 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0798289 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152194808 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096447922 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099742263 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082974655 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099348558 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097762659 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09427504 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07883449 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09519888 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076360017 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092972756 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080772022 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094317227 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111407326 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081373899 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092310641 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144382984 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113681558 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09621524 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122147736 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096856283 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07616824 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124719677 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077772967 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096235168 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118039218 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10104054 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11147201 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094896413 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12287287 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093314409 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077400687 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.175087781 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078393087 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121808674 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095425912 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109205929 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113756653 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093982809 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08054269 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093952165 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077455727 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155845605 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077549784 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076231679 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096854483 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106246375 seconds)
  done (took 23.215475095 seconds)
done (took 48.491754178 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.415077329 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109972143 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110550366 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109417271 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108489836 seconds)
  done (took 1.629385078 seconds)
done (took 2.380413801 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316862647 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192448355 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083417986 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185200526 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083934746 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190735441 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157993506 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095351441 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201653698 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078325008 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180599883 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079782169 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10046806 seconds)
  done (took 2.724041178 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08843329 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113015421 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077595432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103135459 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071573422 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086249121 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104255958 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124981862 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086456155 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08062381 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089361155 seconds)
  done (took 1.772683676 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087055782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111307122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077007872 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08680701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08854698 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086066119 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103349275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096535271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104195995 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081624777 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088550706 seconds)
  done (took 1.759706739 seconds)
done (took 6.998923491 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.137984003 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.881383984 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098855686 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.190634442 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.325285465 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214019058 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.63546093 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114070672 seconds)
  done (took 16.523760497 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.123148221 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.096588928 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078216336 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093221084 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076150585 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091659789 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076989035 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090881386 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076001073 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093844235 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075214962 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090771356 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078234808 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094483902 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075700692 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09263288 seconds)
  done (took 2.215258306 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111260355 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110031111 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098413836 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084550739 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097527068 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.095568401 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082591071 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09753432 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077987 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09534172 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.084439491 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098819653 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.082462724 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093577989 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097842513 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085043348 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093770053 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081895494 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098694682 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082132692 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101001899 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094912097 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083448801 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100290894 seconds)
  done (took 3.083506347 seconds)
done (took 22.573604878 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161068333 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081032406 seconds)
  done (took 0.995520268 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096588306 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114744244 seconds)
  done (took 0.972746714 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102897998 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092733238 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131203033 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108979725 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.077301842 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076331172 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124257176 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093355129 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.076506437 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093716408 seconds)
  done (took 1.739199193 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081013182 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096960751 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08569833 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113783663 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104102683 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.078959363 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097714166 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081226944 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098628544 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076059651 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101778827 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096408647 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100884973 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.112927393 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.081441728 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09874419 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103418242 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080319811 seconds)
  done (took 2.44946182 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076642406 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078410007 seconds)
  done (took 0.918232611 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080740503 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091527915 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078542678 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095171901 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075142316 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09137432 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075077442 seconds)
  done (took 1.349399047 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.464173306 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.175954045 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316813862 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109707159 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128024967 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336089088 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147986557 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08990565 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107374377 seconds)
  done (took 2.677551139 seconds)
done (took 11.860227331 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.086974524 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.127741929 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.589014164 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111429108 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073919601 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154309997 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.257814819 seconds)
done (took 2.163582784 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332688618 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117684111 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085048723 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077107952 seconds)
  done (took 1.374274038 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075408562 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081186272 seconds)
  done (took 0.926940645 seconds)
done (took 3.07044512 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.104326006 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092742489 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071545779 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091963635 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073401126 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.071310447 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.091843733 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.071361163 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08798335 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073408131 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090344754 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.073419123 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073618393 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090022044 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071303254 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088036625 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073983344 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087996978 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071708238 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07204519 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090914736 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071371197 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088259897 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07351174 seconds)
  done (took 2.747542797 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100647168 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092984588 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080340186 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097451127 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078808953 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097180987 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097067685 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07509188 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.097475115 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077827713 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094883933 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07819054 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094166353 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078567584 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094082115 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077958412 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097257359 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074790365 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093158005 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07793042 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096300668 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075571532 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094519429 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096632335 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077540882 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095347214 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076583128 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092205393 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079086946 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094917579 seconds)
  done (took 3.405660265 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081036046 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071513309 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089189089 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084014776 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088736188 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076108713 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089095982 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075927463 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09442481 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07282655 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094402996 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071648603 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075145116 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093243643 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076263004 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096249856 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089632085 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092199907 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074664397 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094094534 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077646478 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092255431 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074978877 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071638867 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088959416 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071328243 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089357025 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071755548 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089721818 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072029659 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078253552 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095200192 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072443747 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101995573 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078604925 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088683537 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080106043 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089265894 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076726152 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089251012 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072403375 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071905464 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092648534 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082930708 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092146654 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073904554 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092527779 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078019659 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093640521 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.079188127 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088728025 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.074926283 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077541568 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094648197 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077630365 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089234047 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073611771 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089997522 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.078239638 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090707571 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072777906 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07165987 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095499092 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.074249557 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114494759 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101659463 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.074808163 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077405663 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093985204 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079534931 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094800316 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090348742 seconds)
  done (took 6.808921373 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077074813 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100036707 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07439989 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09248725 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070543796 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072114775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096252552 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0723142 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091010947 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090990248 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089658591 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073654506 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090709588 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076443956 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090191241 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074184808 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100869022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070680563 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09017821 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076153043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091167324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079378808 seconds)
  done (took 2.618581043 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214795582 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10061404 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136120232 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109887833 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093763507 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109349562 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079807052 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098606127 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097405593 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083561001 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100564136 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08070969 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11114195 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101697635 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084432769 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104898676 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081916026 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101905184 seconds)
  done (took 2.671293866 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088254646 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093472279 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099848429 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093084581 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076115893 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09565382 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08211721 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108858742 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077935697 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093405543 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.104014804 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078478362 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095223353 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076879461 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09665758 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077264671 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097623396 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078233537 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105027113 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084118283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101464521 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086769271 seconds)
  done (took 2.770350668 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092867253 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095131691 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096655792 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097970701 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07450071 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094404641 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083035521 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094311963 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085595139 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09475551 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076519004 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093684627 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083381307 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094102177 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101574005 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076123882 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095405541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076593923 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0779236 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091585455 seconds)
  done (took 2.558955808 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115934878 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107045519 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089145074 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117948372 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11060186 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090677172 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118884176 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089120697 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106797425 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120184246 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090047235 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108379049 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10061322 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114149772 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107387652 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100530385 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117789288 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118307697 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089452496 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106940034 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120514376 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089797624 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119238247 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089241721 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.1071677 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089629391 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107079439 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115689944 seconds)
  done (took 3.743207379 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075522392 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07497488 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090341297 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07269496 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090053035 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.072407679 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072409108 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090677452 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074479156 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089607982 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074465833 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091612498 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074749807 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074440195 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092319494 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.074407739 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092333326 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073591715 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089813094 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072834558 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.075478936 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093784652 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.074841883 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089744896 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072404463 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09287534 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072518818 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072195467 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092126503 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072750085 seconds)
  done (took 3.206590708 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082863923 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10420934 seconds)
  done (took 0.974014946 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073453311 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109901359 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072473182 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096493197 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081252916 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093847317 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084774256 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099004543 seconds)
  done (took 1.496802082 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099216041 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113256181 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081782105 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105283697 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094788001 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112288096 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156283844 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082014291 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102263736 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076951137 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113437594 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075656644 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.102368955 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08171902 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.101805688 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090963126 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094945969 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086330837 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102375505 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078474443 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099515442 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110481593 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086943045 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102313419 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078691574 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105743409 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090157622 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105792053 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082212743 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106377483 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083185397 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087978183 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080291045 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099874282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077538686 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111289955 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093075423 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099629359 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.104160628 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082243453 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104453875 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074768505 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105047721 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084054796 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107481695 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081466764 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101083092 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075194852 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095816995 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080722365 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093407885 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080151506 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071191791 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104550195 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103991917 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094845095 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098005471 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081190801 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.099046909 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079421838 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.102536621 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080574474 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105325344 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079507873 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104798548 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085906473 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103201779 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074808104 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088297368 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.076929399 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104763745 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101298635 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105399655 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100062025 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082528814 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077767346 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101042024 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100317693 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08492608 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105383118 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080848813 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1023967 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087287376 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098624597 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080665338 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101787699 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078318965 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09732038 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077120444 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114574436 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078474292 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094923741 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077141273 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105655119 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081123945 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098157773 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077039254 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104108233 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070179411 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100305183 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082426792 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102384402 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088322316 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100038772 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082685326 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.103537732 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087541807 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099490614 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080091516 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091163337 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082560275 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097141184 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085289725 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088854135 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082480274 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099376469 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082343916 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10488854 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078853065 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099404045 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087212481 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106531418 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078954337 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091276915 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080914614 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100011814 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086151565 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106289709 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078537967 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093178025 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075601353 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10356699 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081923373 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101560734 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082294803 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099484771 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071433599 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095713027 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082054131 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105260999 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079965546 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102026046 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104246857 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083727312 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080039553 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104393316 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097725559 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077597375 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104052444 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080640257 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093361756 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087335028 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098243726 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078592328 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099913161 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086613268 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099647452 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082772957 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098188231 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081747566 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101094804 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07764663 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100162882 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078835937 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10744263 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081007764 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093422328 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074125802 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082956465 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096179015 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080825639 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095350025 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081126254 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101002824 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077763832 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098839799 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080810561 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110244737 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090435618 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101220385 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10275283 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088750039 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099044285 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083397813 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098369175 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082677137 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101194595 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086522518 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.101544055 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082786732 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099116152 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073835418 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101450303 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087261895 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.095668281 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078229268 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076607292 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098861178 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087997188 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099519204 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082596956 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096622877 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083268567 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104771616 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.098897415 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080803558 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.076657634 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099113586 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085976869 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100508477 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083234253 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10617344 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099950868 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074817606 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104524547 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078671603 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103132789 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076070969 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077360931 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096073101 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083034965 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097789526 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080022127 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.08925902 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086451093 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106238957 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081545177 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.095306001 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081979992 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108650149 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079768195 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104653692 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08147685 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.102462692 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113971509 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076906169 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099430739 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098235248 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099597423 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071068761 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103298401 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079083407 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095034097 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079656142 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078777575 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101337699 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083461715 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101250699 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070621403 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099423624 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078423336 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.09660361 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075816216 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104785173 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.081930775 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10034066 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108568053 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083345732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101672359 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082208888 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09942147 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08382079 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101774922 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083249603 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100817355 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.079773072 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077579801 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100987757 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077178413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096815214 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080420604 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100169328 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081962633 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10179458 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0802798 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10496548 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09989445 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083467327 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118566925 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079522829 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095924625 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0830134 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102988316 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081298913 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100240776 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075939742 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105597227 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080835549 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105533494 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081069552 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092609511 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082721949 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09997793 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083007765 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101990512 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083661515 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.098604649 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080919999 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100702727 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0910565 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096321061 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088577249 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102735572 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0840992 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100600462 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082483256 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099064817 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077493983 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100847365 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083753945 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101277702 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.080818877 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102802671 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081899596 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099768021 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080742632 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102582555 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08256214 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101748572 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.072036075 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096364732 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078033068 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100421177 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086502417 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101267388 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080645379 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098487649 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083825914 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098727378 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07393388 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103660722 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084125908 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101427346 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090553718 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095834593 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082562341 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110573221 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071043888 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097829685 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077884072 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097001907 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087878707 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102385757 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087445435 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101186701 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078131084 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092407 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083230971 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098231528 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071573247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096067399 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085463032 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098736695 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079915294 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082234578 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102833354 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101675832 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085298597 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098914898 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081703305 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10152537 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074417685 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077886877 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09674916 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081841675 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102178749 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078655611 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092598786 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082191715 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100721044 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082068883 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099590527 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081185382 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106344978 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081634114 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.100899976 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087508072 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.090461285 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082558246 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099942093 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081654825 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096939915 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083844186 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102279819 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084947498 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105591608 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082353876 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10334308 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08225273 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098035854 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082544242 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101144706 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08309907 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096865147 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084162761 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107169305 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.07881935 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101216421 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083213292 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097974639 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083448363 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101842713 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082559688 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103759176 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082753831 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100814721 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085905346 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10017609 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083491324 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102350363 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.080773095 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105183799 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078419171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107681932 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083553244 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102640336 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081046606 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097183469 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08149811 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099883093 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081002567 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106213278 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083262314 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097201892 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078593681 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097694603 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082439225 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106232845 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088837182 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101057583 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083265738 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095536476 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074697964 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10315391 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079614675 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100235664 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085064876 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10629821 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08368096 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098593017 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080980337 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10649357 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086835094 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103689013 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079268523 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103056276 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083998761 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10079692 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080427829 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100271343 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084526939 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103231412 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081357048 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09729449 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091008699 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105629756 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083554382 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099943984 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08367561 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100136978 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076736453 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102075252 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082567223 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104413973 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08270775 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101101781 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110546745 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.077790875 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100400747 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087795431 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099694204 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087362768 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095024156 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083633244 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102861116 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084506066 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095544608 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078378585 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097934072 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082278038 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.078027227 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09568689 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110821784 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088011871 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102252175 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080679491 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09925829 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077087124 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076875357 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.098472422 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085720927 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100795278 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.108954066 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079247154 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077955064 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095513075 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08246464 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102849158 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08439863 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094609947 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077480809 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.097910222 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084429879 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.1087049 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080928378 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102190016 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084235256 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101771812 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080085247 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106841679 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.074513438 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.102861803 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093734527 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103736563 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084851517 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.104400219 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10763612 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084147578 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.075684045 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102494579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102038663 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083583462 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102758402 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084143235 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116894976 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083679741 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097027121 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081333413 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101162767 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07924241 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109164773 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084839808 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102716565 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085599011 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09984269 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084873372 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108391834 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084953691 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103562108 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083123041 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100526974 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081529956 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098861002 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081508528 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103345475 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084735288 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101149705 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085279517 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.097718969 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093112485 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.10888622 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084423332 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094038403 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079793413 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098071261 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077276944 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104056673 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076936922 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099483985 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080054783 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080040435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104909736 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103776424 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08358118 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103525374 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082670001 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072779664 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105613442 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102808336 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085817986 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074589494 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102045206 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.083759297 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.106503466 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106953629 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0805036 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.101409463 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081531831 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104235849 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077239688 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105223013 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080698382 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080627429 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098079363 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081994633 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103772082 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083368302 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102819689 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085055479 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101996334 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.085946197 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106071806 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.07514394 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.094884447 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085147623 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098794634 seconds)
  done (took 55.486765847 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143412273 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083384365 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072994416 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093807189 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119027899 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078551452 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092872474 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07766693 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097144861 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088432422 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092028829 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073844164 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113819554 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120978237 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118147665 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088055883 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092492592 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077729673 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092891269 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078079271 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113266154 seconds)
  done (took 2.84321661 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099078429 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111405154 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110232077 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095891345 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104207681 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.110559869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090086032 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111511191 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114581024 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085626697 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114741937 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110189038 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085981653 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106585278 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104096925 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089558259 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115134728 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103309465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092456712 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110090835 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107898273 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090281275 seconds)
  done (took 3.09892527 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086443508 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08095209 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107246447 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.075886325 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101000078 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076235519 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105579157 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.077762781 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106274899 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082111662 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.099702181 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.083288208 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10929195 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.079248403 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101895589 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.080406873 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107840719 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082354275 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103129385 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.076030746 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121653963 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.076142079 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096177152 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079581188 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11088193 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083159379 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101565301 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.083025054 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.098733259 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08263399 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.097665946 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084478586 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104497105 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.080664563 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.099434314 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.081994295 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082201577 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096228677 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.079098788 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106114811 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.077758101 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103030839 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089144771 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098950459 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.078419045 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.103926472 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082589508 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095871764 seconds)
  done (took 5.238658074 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113164027 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150790523 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08158199 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140570411 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.116800544 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091591962 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103552173 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140286071 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.07606911 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101082642 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121061352 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.095117448 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103364325 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107307034 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.082458835 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101183173 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084922396 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097406801 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088346625 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101369467 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08782904 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10482557 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115572065 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.114058314 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087287711 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101376097 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078238245 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106643967 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113851489 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089243091 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108365691 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090243949 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117742582 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103407991 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081978152 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104863973 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.118776471 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084090848 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104430416 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076518515 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104152562 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088159087 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105125392 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118717839 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084215047 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10333762 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082514771 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095098729 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114361631 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085470211 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11214567 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115675859 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087361985 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102686011 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088679988 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117434439 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10260948 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081658632 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105769546 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092810851 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096985302 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087214637 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114726858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104148073 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091241498 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116072059 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103272553 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087613089 seconds)
  done (took 7.858605539 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110595131 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10739562 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120156941 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099926779 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107735861 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087276118 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108704262 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10746902 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087932025 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114424712 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087775133 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.154906456 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.104607774 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11396617 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088218839 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107216771 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.087846798 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107562297 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088421965 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107610858 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10677986 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100015819 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109868789 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122995365 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124382497 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088766024 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11179021 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091876926 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124348566 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111575625 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105430191 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112153389 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111832002 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10404864 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12478673 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10871026 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082378685 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107523928 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.08848001 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107937261 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084833204 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119301586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107252509 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084998728 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10765429 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088021662 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120368638 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121923837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114685144 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095214243 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107459924 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118685536 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088464378 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108944308 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119704232 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12812416 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099681654 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120055857 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107920431 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119462312 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100182021 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128958331 seconds)
  done (took 7.487533736 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079585874 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078727997 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097424335 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.076707362 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099589606 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078088258 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07837576 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.099139323 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079593319 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09932008 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079380858 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095893463 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077073551 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078217519 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096530451 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077807172 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096125071 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077638505 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098570199 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07757184 seconds)
  done (took 2.572146982 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087962967 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120593727 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079601425 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107199663 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083088429 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107009963 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081266041 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102065406 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083337733 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10229292 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113347018 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093615693 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100301922 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086838439 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112286657 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106706818 seconds)
  done (took 2.422652236 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100305282 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121157652 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125184889 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084861382 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.098382762 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087826213 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102189982 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075435155 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.074962827 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109448138 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105059202 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.085280129 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102662125 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.077959619 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079766661 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10695393 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.074903276 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104392419 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08171442 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12488369 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104511567 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08299007 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104028803 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08209933 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102417057 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084996881 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106533355 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077608417 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099125093 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083390744 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102916527 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087506011 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096906019 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.0842172 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.0988495 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077414899 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102718557 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083730352 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105654016 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082576473 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.098350396 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082335038 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102688411 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.085071818 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096493943 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083967042 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096113814 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.085849397 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103019812 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083105727 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102696352 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087886471 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107055334 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.091145355 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110317278 seconds)
  done (took 6.04345623 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095287511 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103490979 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085286048 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097508104 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083191477 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108071199 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08482211 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102726885 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083035984 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096742304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082732459 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103687929 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083322447 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103543043 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082452078 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104265718 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074824335 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100837694 seconds)
  done (took 2.53620854 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085179791 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079236505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108372053 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079421458 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100400997 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081667641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096370502 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0784459 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097761485 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079924961 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100270993 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082533541 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098422896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082778353 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099490288 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080791972 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.101410634 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078522723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07884409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096064301 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082088129 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098229882 seconds)
  done (took 2.825059102 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.098473932 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131632472 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093630711 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142469052 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.107418414 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.084421574 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.114105559 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084072456 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.122206546 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083164269 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.103494126 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.084603091 seconds)
  done (took 2.109767263 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104514848 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137807149 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080674253 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102890833 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114398594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086332715 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10541013 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085503284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118634575 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118136035 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085302846 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120667896 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118312479 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117621069 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093814456 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114474229 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105303684 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08471961 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100812717 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108037516 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105856956 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118722528 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08480165 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105616453 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105256414 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097657597 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119655235 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118057348 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085048191 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119423105 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114346331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08550422 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120080655 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11802384 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082965748 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1187509 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104828302 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128767988 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094450536 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116769391 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102105857 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093177804 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120456754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112009451 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098260378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105600638 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112269 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08572205 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105816967 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134497937 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114602774 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097757811 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1144692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119369694 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098574896 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134338732 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119547681 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117545316 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113998838 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118592413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097543347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114541791 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117770884 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119628825 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094600532 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117027439 seconds)
  done (took 7.997608193 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119811043 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102811718 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084745384 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121006119 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117158949 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105042339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085917953 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105791246 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085688408 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102200951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151465487 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085360699 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117804279 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116340269 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084928419 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106167219 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104883202 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096999082 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102948244 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134331674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085011487 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11850912 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117830889 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117958496 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118391867 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094236331 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10578776 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085442492 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106603166 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105406998 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093195438 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106498559 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117622251 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083188524 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116881931 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085729792 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106470423 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113285165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085776384 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114907798 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117314015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128343953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086397836 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.344663713 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098839404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106711929 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105620815 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082513053 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106397742 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083176453 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120486579 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120379391 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119159483 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096370596 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105891828 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106014274 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086233596 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106091829 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085123741 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114445718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117680756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085571418 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135478201 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106303168 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08555716 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117804671 seconds)
  done (took 8.049472926 seconds)
done (took 150.340477534 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098719105 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136360977 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09403869 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164533637 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080170583 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135701639 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.113697127 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116268307 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080068444 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101265521 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.080935877 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104451956 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146569163 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.100998755 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080837537 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10324387 seconds)
  done (took 2.607101266 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176253707 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.28097248 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101620444 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107428135 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086084774 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104348597 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085832434 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108067208 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081430437 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112154164 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102480904 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083824848 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.112343948 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.084061611 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10186309 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08278885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.112731355 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.082895666 seconds)
  done (took 2.881054001 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110490612 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14524737 seconds)
  done (took 1.135594501 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116340324 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180317313 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290000241 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153813207 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.109070092 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12412955 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154881789 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120488069 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198378952 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12454851 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103534441 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108138661 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133613565 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092485549 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.110703035 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08670169 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135415042 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.108756277 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088622579 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.108466208 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.111368025 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.111494515 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092017744 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110135799 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181444483 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123693921 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088081103 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109019737 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108108004 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.089144347 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112925212 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100806259 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123115067 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184689908 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092467354 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.181683778 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094184289 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106866858 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088752094 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.106834289 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.090979031 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112613368 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122530692 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.087204162 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108343595 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094389715 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10917072 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087558999 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116304061 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116735721 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095212922 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113739425 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159078089 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117361496 seconds)
  done (took 7.371440873 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796321941 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149559241 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086429383 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.897977255 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140946777 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101424275 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.798542345 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132015413 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235194368 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.813455948 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101281102 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122974829 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228776493 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.249274664 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143826969 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313135887 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694657668 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099275445 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137043526 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147190756 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093244334 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136914758 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12751255 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42643385 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108350542 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086558489 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114269033 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099151053 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179175727 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086381129 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111291687 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179991138 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263257271 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202089987 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087631934 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106776619 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085494836 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.164998196 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266890287 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215955596 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173161379 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083231463 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106421454 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099337486 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129359181 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.081435378 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184296195 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172165437 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17202949 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112112562 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121026077 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096094178 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11877406 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160383294 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083282182 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336041607 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338404817 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106898887 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094600478 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127359955 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264436209 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08709439 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224395461 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134245925 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191132527 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10708643 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785819766 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165171717 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085562002 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117241864 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092938745 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113624408 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119142121 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163264049 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389890183 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101752338 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111432558 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085481583 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23825932 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086118225 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106729034 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162378379 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087025364 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1170243 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124145803 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099803362 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191636992 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248060405 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122933582 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094600694 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114669122 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098054685 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109538454 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208275052 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22060825 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157438257 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209555101 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122290422 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162217419 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185034292 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099124608 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167200252 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116293674 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127087402 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120096346 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19201989 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13906364 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10809408 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091633523 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114868496 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.143366992 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089861311 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120068575 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167669066 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456471231 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186367465 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083296812 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111956183 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094903192 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158792361 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115242179 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25844664 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095489926 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165611686 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116566957 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103864718 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094669908 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161273077 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12288308 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117113006 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099527406 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11665055 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.246700941 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22012758 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123863423 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218593724 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177308483 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11935195 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172941478 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117135643 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166665754 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095558765 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119911035 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108981057 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765193561 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121919565 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11551524 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091451352 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183407685 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107972304 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087594514 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107274782 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082499172 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797550849 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089576229 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104771414 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087555453 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118286344 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.094107616 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114505865 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092453972 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182694445 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232227513 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100206596 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115519901 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085522993 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158545858 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110406345 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085419875 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10811006 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086675478 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117778726 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112853077 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088085479 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171631131 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155553101 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221965136 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576817621 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086723482 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108139996 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231418526 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086414589 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304666202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094056439 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226198801 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166391229 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105622371 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.33697361 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167247385 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184327092 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089007035 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191704221 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083357191 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114686831 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.159733338 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086199699 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115742362 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.158071426 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124972525 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100349864 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143411046 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108158608 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225084001 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08296534 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190417284 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088229828 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120937711 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308584665 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086129468 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128552806 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160905657 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113181362 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086791878 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.699590421 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109240866 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118392491 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096879978 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222123511 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162976974 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116069966 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116175494 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100671093 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159266548 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233175232 seconds)
  done (took 43.437661778 seconds)
done (took 58.305289535 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308583446 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259085758 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.291148888 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191509831 seconds)
  done (took 2.026079848 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175782351 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148076128 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120454337 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10562343 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150989255 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082965161 seconds)
  done (took 1.685937492 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.465171738 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.36907282 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.341545257 seconds)
  done (took 2.080953441 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.249411429 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274761944 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.318703844 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.423136066 seconds)
  done (took 2.273903718 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.201591701 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121864652 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.095344512 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.134766852 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.167107534 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.171279033 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138715054 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.148304261 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12541258 seconds)
  done (took 2.251013714 seconds)
done (took 11.224817268 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.156086946 seconds)
    (2/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.255296755 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.257883639 seconds)
    (4/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122765331 seconds)
    (5/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.170009749 seconds)
    (6/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.25949288 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108591193 seconds)
    (8/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116811905 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100059769 seconds)
    (10/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184450721 seconds)
    (11/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.266874981 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095777134 seconds)
    (13/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.202400651 seconds)
    (14/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.205499946 seconds)
    (15/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.207262586 seconds)
    (16/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.247192481 seconds)
    (17/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.177239309 seconds)
    (18/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125844838 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.137620231 seconds)
    (20/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097171753 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.206631201 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.215698513 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134342091 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.115148331 seconds)
    (25/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091649098 seconds)
    (26/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.178505683 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.178023626 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.115072984 seconds)
    (29/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121691554 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.216296721 seconds)
    (31/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120784854 seconds)
    (32/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096867388 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123022146 seconds)
    (34/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.090813907 seconds)
    (35/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158814248 seconds)
    (36/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.16929156 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.129545923 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115438109 seconds)
    (39/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.153317282 seconds)
    (40/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136953561 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116331395 seconds)
    (42/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.13782706 seconds)
    (43/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.181239192 seconds)
    (44/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.14417926 seconds)
    (45/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103742757 seconds)
    (46/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109858668 seconds)
    (47/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09825333 seconds)
    (48/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181526392 seconds)
    (49/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.107332431 seconds)
    (50/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.235466097 seconds)
    (51/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.167896707 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114028349 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13609458 seconds)
    (54/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092951369 seconds)
    (55/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.226368563 seconds)
    (56/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11736916 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086319735 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121845916 seconds)
    (59/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.14661107 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09000402 seconds)
    (61/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.108032804 seconds)
    (62/286) benchmarking ("sort", Float64, false)...
    done (took 0.144650182 seconds)
    (63/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131629644 seconds)
    (64/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.181262912 seconds)
    (65/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091823761 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.120751523 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.204219059 seconds)
    (68/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.133618305 seconds)
    (69/286) benchmarking ("sort", Int8, false)...
    done (took 0.187266016 seconds)
    (70/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.188541741 seconds)
    (71/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.120970538 seconds)
    (72/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076667941 seconds)
    (73/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117755186 seconds)
    (74/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.182666375 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.203121539 seconds)
    (76/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10977822 seconds)
    (77/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.180995758 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.107786424 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.209433476 seconds)
    (80/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.122966914 seconds)
    (81/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.199879014 seconds)
    (82/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179081088 seconds)
    (83/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163066259 seconds)
    (84/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072100599 seconds)
    (85/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180537128 seconds)
    (86/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.202163751 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.144612593 seconds)
    (88/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093974157 seconds)
    (89/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.110934249 seconds)
    (90/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09794859 seconds)
    (91/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113790453 seconds)
    (92/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087740723 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116161255 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078020925 seconds)
    (95/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.144537309 seconds)
    (96/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.131617679 seconds)
    (97/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095168882 seconds)
    (98/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.148351865 seconds)
    (99/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.088621282 seconds)
    (100/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.182583499 seconds)
    (101/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137324199 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099637385 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114312093 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.191948643 seconds)
    (105/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071290346 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.130502835 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096386295 seconds)
    (108/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12171905 seconds)
    (109/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088593709 seconds)
    (110/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.111748 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172540403 seconds)
    (112/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.074526606 seconds)
    (113/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132217892 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104642551 seconds)
    (115/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.120694059 seconds)
    (116/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086935257 seconds)
    (117/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175282139 seconds)
    (118/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133147102 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10463608 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113976802 seconds)
    (121/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072566815 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.180471255 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.11903833 seconds)
    (124/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072298748 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.113266965 seconds)
    (126/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.158473498 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118465092 seconds)
    (128/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072653306 seconds)
    (129/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.100933858 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090167887 seconds)
    (131/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.119911956 seconds)
    (132/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097736855 seconds)
    (133/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110087358 seconds)
    (134/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088610928 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112682016 seconds)
    (136/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07537889 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.100925433 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.08928525 seconds)
    (139/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119423816 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090246139 seconds)
    (141/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131029968 seconds)
    (142/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094585843 seconds)
    (143/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.100580306 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118420533 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.138190814 seconds)
    (146/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.102440842 seconds)
    (147/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098741967 seconds)
    (148/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.10838342 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100178616 seconds)
    (150/286) benchmarking ("sort", Float32, true)...
    done (took 0.225162792 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.145598987 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107531418 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091377493 seconds)
    (154/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072484202 seconds)
    (155/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.153304047 seconds)
    (156/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.111043137 seconds)
    (157/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091421534 seconds)
    (158/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.111179663 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096080991 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12238304 seconds)
    (161/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.090229324 seconds)
    (162/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.101624936 seconds)
    (163/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089543158 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.098663752 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083845821 seconds)
    (166/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122700749 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090411122 seconds)
    (168/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.096090009 seconds)
    (169/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088006269 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.098455993 seconds)
    (171/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098979915 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122213854 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074761592 seconds)
    (174/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110278495 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090909854 seconds)
    (176/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114388268 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097334464 seconds)
    (178/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095607643 seconds)
    (179/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089393249 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.139234267 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.106939069 seconds)
    (182/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.189191668 seconds)
    (183/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.101947855 seconds)
    (184/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084622347 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113689793 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.216512941 seconds)
    (187/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095249334 seconds)
    (188/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112090439 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087417323 seconds)
    (190/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.10001031 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088808423 seconds)
    (192/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11270355 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074520703 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.109493615 seconds)
    (195/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.19363752 seconds)
    (196/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072249653 seconds)
    (197/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.182663546 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099177999 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120471971 seconds)
    (200/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.243045508 seconds)
    (201/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075494883 seconds)
    (202/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107818767 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.115939997 seconds)
    (204/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155708318 seconds)
    (205/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.095172291 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072765571 seconds)
    (207/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132564794 seconds)
    (208/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170111769 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085536375 seconds)
    (210/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.097439773 seconds)
    (211/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102003438 seconds)
    (212/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113359315 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08745252 seconds)
    (214/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177758118 seconds)
    (215/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.087895258 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122248391 seconds)
    (217/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086990577 seconds)
    (218/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.103880279 seconds)
    (219/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092074712 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112530192 seconds)
    (221/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090438784 seconds)
    (222/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119028273 seconds)
    (223/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.178935718 seconds)
    (224/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.073363031 seconds)
    (225/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.096649228 seconds)
    (226/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164602655 seconds)
    (227/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.106218068 seconds)
    (228/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154550582 seconds)
    (229/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.074041705 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072208497 seconds)
    (231/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.103525112 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090654821 seconds)
    (233/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109642231 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.078418525 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116886865 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083880408 seconds)
    (237/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.102772947 seconds)
    (238/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.076793429 seconds)
    (239/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156276286 seconds)
    (240/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091462439 seconds)
    (241/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.096291731 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083957938 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114663641 seconds)
    (244/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08894371 seconds)
    (245/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.095176386 seconds)
    (246/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.072180979 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121036261 seconds)
    (248/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084425652 seconds)
    (249/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.096206594 seconds)
    (250/286) benchmarking ("sort", Float64, true)...
    done (took 0.227590769 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084153219 seconds)
    (252/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.106697146 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091011513 seconds)
    (254/286) benchmarking ("sort", Int8, true)...
    done (took 0.21751889 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.114246397 seconds)
    (256/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076497372 seconds)
    (257/286) benchmarking ("sort", Float32, false)...
    done (took 0.173447398 seconds)
    (258/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073354001 seconds)
    (259/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.096194629 seconds)
    (260/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.074681928 seconds)
    (261/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.107767581 seconds)
    (262/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091084252 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116282304 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.107850037 seconds)
    (265/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11324277 seconds)
    (266/286) benchmarking ("sort", BigInt, true)...
    done (took 0.245631397 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084927192 seconds)
    (268/286) benchmarking ("sort", BigInt, false)...
    done (took 0.251909913 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085318575 seconds)
    (270/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.103306628 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097901029 seconds)
    (272/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.097462857 seconds)
    (273/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075640689 seconds)
    (274/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.072735686 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115747372 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110881076 seconds)
    (277/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074880307 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113570362 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091177454 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.108937864 seconds)
    (281/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.088814058 seconds)
    (282/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112301036 seconds)
    (283/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080128774 seconds)
    (284/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.097784589 seconds)
    (285/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088309532 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.121699946 seconds)
  done (took 36.58662117 seconds)
done (took 37.495351315 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098240967 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147748593 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094687881 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139111155 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122775309 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099556624 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117263939 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097198951 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122277053 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099363379 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.120558445 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.078837909 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119509817 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09480859 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.118840538 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13813373 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097956583 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114352917 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086880759 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110667823 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086983469 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111484694 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.08939313 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102264182 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095087025 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116926864 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090201407 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119050795 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088028441 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111202745 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085737285 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114949114 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085815459 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121234535 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.089235103 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.111271136 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096176511 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.117064975 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089142776 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111806712 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.091657394 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.111323491 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090193561 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.115890909 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088414732 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109853066 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087018244 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123173799 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114345068 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112792134 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092301476 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118650319 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095206958 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115564888 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.086276716 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.111202477 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.088401277 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138506868 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110253907 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088358586 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115421808 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091341705 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.110212997 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.086834283 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111403216 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094880537 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119194544 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086360619 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117737229 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.090234727 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106764329 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.088025586 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.109363547 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084899598 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093144907 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118698036 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081870904 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.111585228 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090995145 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113698455 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087365698 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110028048 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089331306 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112045543 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085449771 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103920259 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085019913 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113675011 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086632861 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.111546656 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090878107 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.113996921 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089209926 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119756075 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086706941 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112165692 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087707218 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111982969 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.08917283 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110379748 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083201361 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109684141 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.091829022 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.108615466 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.088092269 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121471345 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086576421 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113592341 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08651436 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111191224 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100994664 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119626583 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088203465 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112849993 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083985616 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.115441945 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085979427 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109036562 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08573577 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130232875 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088519331 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111201689 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085664515 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.114703903 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097786237 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107161393 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.085908227 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109540597 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087901027 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114761424 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088514992 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108786052 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.08669852 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.106370316 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086410417 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108928002 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090357559 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110211976 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087121779 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111468614 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087903947 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.113170468 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088491081 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112410328 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085044973 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.10450423 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088555533 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085188839 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113563634 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088038942 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11282179 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.083361356 seconds)
done (took 16.504210719 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093537552 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18448879 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145532397 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14791019 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.144713224 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.105528883 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123924552 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143277351 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.095626401 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141175484 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144146503 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108963672 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148668924 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120064667 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129688382 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093908577 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117725376 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104227528 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.151815494 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138835309 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145060685 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0954398 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.139728237 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139201229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093582413 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.148468239 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.123073307 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094495992 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121610616 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102670684 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134853611 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122464431 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096849858 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131155183 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101594007 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118150393 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.130460448 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089902432 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119154355 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09396998 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.131923262 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130052825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091326944 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127072595 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118958157 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09752314 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.118265867 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.093273046 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120013075 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089458672 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124504655 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140721523 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092682334 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121487413 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.094100845 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119284921 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121161858 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.097743594 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121216609 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097421993 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11921634 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122776836 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.09962603 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13641024 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118979479 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.096406949 seconds)
  done (took 8.826051896 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.1096688 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14619867 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.12539823 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101320128 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122545208 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083548459 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107834839 seconds)
  done (took 1.7695146 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085427877 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13942926 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116900821 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142370964 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133017204 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.119980409 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126087121 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08502239 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132923257 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120015658 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112531224 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165812257 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112603565 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097039965 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.145723641 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08549207 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14385881 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11178264 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092808843 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142219998 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090515535 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131345304 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123239677 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085820864 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131541815 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086867895 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174631544 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121980296 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08424183 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089903388 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114090149 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179698412 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.132420445 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.095227084 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108711738 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113310191 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.131383707 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114647021 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.109397502 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114980163 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.105876952 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117242852 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092518854 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115956966 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092047062 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124689062 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120907945 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092744278 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11534786 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113811422 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120991734 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.10684877 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111837915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088984277 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121248115 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091100428 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124591564 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114832324 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114334668 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117925688 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110508792 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136542004 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130825459 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110881146 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127403808 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107394469 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.131453681 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115638639 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092749359 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118440229 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111126926 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114987373 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095475728 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125490862 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118312381 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113753931 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137611446 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089256288 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123901869 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089599327 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113646939 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085900727 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.126802076 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088609607 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112978838 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102482841 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12355368 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.089828127 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114957509 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132431476 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08973309 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122181651 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096134594 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114843154 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125780727 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114202332 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.122364778 seconds)
  done (took 12.099880117 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08814443 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087657512 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117544977 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088061163 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.11231 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088397836 seconds)
  done (took 1.562495134 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116446756 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114806626 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101915384 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118493019 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154355733 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110763422 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.138322053 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09637452 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.130975273 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126227905 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110074302 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137285379 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14267022 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.093331834 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135863276 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.093471114 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136414856 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090444301 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126062267 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090043571 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.128609226 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11919739 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089807067 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134137116 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094224301 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120738065 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093747102 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126987009 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100260674 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121755723 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117971898 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.094206706 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11987698 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.096335708 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136721414 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.119064779 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089713517 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120878997 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095041688 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121117887 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112133629 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115221181 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.100037634 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121331091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095765339 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119652541 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121313861 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093053208 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135350214 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09575339 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122275125 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093434279 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119720464 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096084026 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119905129 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121249403 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096243012 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136781067 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.092786964 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119684923 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090210864 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12019212 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096159676 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120239508 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120362866 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096052795 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120047944 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090360053 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115582408 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.093209872 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122301674 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090107454 seconds)
  done (took 9.094820772 seconds)
done (took 34.320713946 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.667330158 seconds)
  done (took 1.645693798 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.820227732 seconds)
  done (took 1.800393131 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.940230229 seconds)
  done (took 18.949054417 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.486043959 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.580223153 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.972522223 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161515446 seconds)
  done (took 3.180356384 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.961188984 seconds)
  done (took 1.963115983 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297525176 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263238942 seconds)
  done (took 1.548113305 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.812169151 seconds)
  done (took 1.803705406 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.503057219 seconds)
  done (took 2.496759559 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.345539191 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197834451 seconds)
  done (took 1.546580498 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56695929 seconds)
  done (took 1.564595993 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.777681937 seconds)
  done (took 15.78042085 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237948187 seconds)
  done (took 1.2480561 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290832938 seconds)
  done (took 1.290418618 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.634925867 seconds)
  done (took 4.634668786 seconds)
done (took 60.442796128 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095575933 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124745281 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.099782972 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122113695 seconds)
  done (took 1.4366316 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100905378 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120138087 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097074833 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119881583 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101143009 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120689609 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.093093419 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.163764435 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119292202 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094404089 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120366599 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.092951842 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122095741 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092603943 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117159878 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095600576 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122422413 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.093773029 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121044107 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119884977 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.090859994 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120219148 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.096309966 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118363355 seconds)
  done (took 3.655397184 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09659245 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090474992 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117566066 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089304446 seconds)
  done (took 1.399952364 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099642107 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132976563 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105340911 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125941546 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106264257 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131538844 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116087655 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.08872574 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117334238 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098758582 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116567666 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.109802965 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13364889 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085197661 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12767033 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087546824 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.111605472 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106398893 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124455775 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126347231 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.089468006 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124390245 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096591009 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129865414 seconds)
  done (took 3.703558818 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170979466 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12820007 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138405728 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095085642 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164757796 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141122768 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087561335 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141374146 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088657982 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126243981 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092025219 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165716453 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124779347 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.091725162 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115862275 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.120708488 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097830791 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123830842 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091116147 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129335885 seconds)
  done (took 3.447700013 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096586755 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115879882 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086525691 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087434125 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122323938 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09148094 seconds)
  done (took 1.615048616 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085896175 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084669444 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112151368 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084726997 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116051327 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085266446 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.109400189 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.085713294 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084924133 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111650662 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084317364 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110202807 seconds)
  done (took 2.175173029 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.37888566 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115388416 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114561877 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089312212 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122026293 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088333957 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127691186 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.088109778 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145165868 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088735527 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114768377 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090977634 seconds)
  done (took 2.580504868 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207229803 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093778239 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262078324 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373323724 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130168008 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162416835 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279756233 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160896054 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206720622 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109030577 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220105681 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129284453 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152470234 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178015205 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137086662 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.174783433 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175008648 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198814351 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147324744 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203018714 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161387452 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16597099 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177812218 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149081636 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134159174 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1286591 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116715522 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125374738 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171573675 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16878771 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172599399 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145929579 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110378369 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226845066 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211011893 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20315061 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.302984054 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105625652 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.210456141 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180548989 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227450629 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138548335 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193049816 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153114469 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126715933 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179946399 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158102976 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.180470151 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10290518 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138826116 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182616459 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175146544 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204127041 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108124227 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326941937 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119675452 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145124718 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180600816 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185253723 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214881342 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13935394 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118624822 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183663075 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179341475 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178170194 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143095466 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164431617 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123301965 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174278201 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193471966 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175814144 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163640236 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21134924 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105836355 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163478745 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166439607 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153196878 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176911295 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161758794 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119239089 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122191757 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136348856 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125565802 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157215924 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121273366 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202390636 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134180661 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.187966028 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202153453 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157625586 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160268855 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164126787 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165060156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145887687 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089314214 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145846026 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160593624 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158090481 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101785151 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155267427 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143079413 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126184501 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124416202 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122183241 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157931271 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132566292 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166226123 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162128349 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100143325 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163619619 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148310861 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155473444 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169822233 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186038731 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102817115 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12968152 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191839077 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157503682 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135598674 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173510324 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184012762 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.164735449 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106929046 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197215717 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192220516 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111795618 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215062046 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11212022 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132668409 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.149276983 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158227062 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154884971 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127192484 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128319628 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153141554 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192284899 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124627474 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105924516 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173873333 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125416254 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098448538 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14163248 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134503325 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140809692 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118664541 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137894654 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155636708 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160289726 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151801923 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157855123 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111868511 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218403186 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103653248 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.158528741 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147016992 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088735692 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.206511217 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183400229 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099379929 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226904013 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167492219 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195185323 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160771736 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12991975 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17629714 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097593129 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118472032 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165551387 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158801907 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160773472 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.181092881 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193150611 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163274504 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151367637 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149733357 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166510819 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172827685 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15437465 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142634411 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132583063 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194852187 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092602875 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121100219 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097926032 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141137451 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128126857 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102364472 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179546605 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163759343 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213038524 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160367219 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112114988 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180335981 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124199126 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164986987 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170469008 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137818009 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182002931 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180307832 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166152861 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139865385 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174475472 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089709805 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121349777 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103438288 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163720294 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130598346 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104832888 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141148211 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179531649 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174138082 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148257447 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226926452 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167819189 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190027654 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.091787639 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162076363 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169660996 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157721118 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180967084 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105023544 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157995601 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175627215 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142015983 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188130956 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161869877 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167608119 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225993914 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.127146094 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12897098 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147189472 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1657281 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110385851 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163581539 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144241354 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133900062 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153551385 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104240043 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125132325 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181565834 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142367714 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178616625 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155612285 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17124658 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124942587 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112801331 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157861956 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14583805 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114393961 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169786813 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185387063 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142736599 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158133166 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174555831 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100047354 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307989672 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213907514 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184746792 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106331364 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141384951 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160219005 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158332257 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164307335 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178557465 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142225063 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178176329 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156196469 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112945975 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134231889 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146000007 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120096672 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.149674384 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131906752 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152020373 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142919135 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185128719 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140932182 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128649634 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163112958 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146087139 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14615644 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113344101 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22884552 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12918397 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204643892 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.124785444 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163868062 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227218588 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093786629 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127665251 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096930396 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176841303 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132556768 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15836616 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183622809 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194906046 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156710838 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165321988 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137600102 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091026204 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157374731 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149409885 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194973659 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138569074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135112373 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189638258 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.149862787 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098935288 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16243428 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311429155 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115887894 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174034103 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115436135 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272934573 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09519928 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127655013 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158626366 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170011688 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135783542 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152091383 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162557827 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142939789 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158394613 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107612923 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215822951 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203618849 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171240649 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174002578 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141774598 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157130625 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163268029 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176015653 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141743242 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.114151129 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161294859 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181061687 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.185493998 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132286599 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163848944 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162063986 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15862581 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173861827 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132041954 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199185801 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100890819 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163961089 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137834681 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123055843 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159603607 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18372133 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129244242 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176443565 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157206522 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102263178 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124915849 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149177744 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129505917 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141839918 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127479869 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178765622 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094183506 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162077108 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17865014 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12926953 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154027698 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114725073 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13643984 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141626018 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144120025 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105223234 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169387838 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181561161 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128217955 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177394174 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176087778 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165627402 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159619624 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113449909 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664997131 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126953977 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181590973 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146101838 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184144521 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117691717 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165244456 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15956275 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148918902 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167714027 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14955431 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220039885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16591648 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157576379 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100643852 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144749316 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142536056 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099941992 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149626213 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162600349 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141130241 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.107701997 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15578175 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144892907 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14356972 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107948058 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210954975 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117975673 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181112657 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177962913 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13667399 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16576096 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172266592 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130691698 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15889915 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170616235 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138931124 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119278357 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.12939078 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132450594 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178554253 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093549815 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160756394 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159563994 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162663572 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163792936 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103128978 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159159524 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141216656 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160209883 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128109852 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.122646343 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156061427 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129344247 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.096481793 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15311392 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158284458 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.157259012 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123626266 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141081452 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177754693 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123565011 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102591347 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284370759 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155068083 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188731388 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.150038797 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133479995 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142441494 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125058303 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151271583 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159027537 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126932353 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101008896 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129426036 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.17948497 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152740321 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152770715 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182977975 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160385868 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199899202 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.102926836 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.261835355 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138735258 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152712321 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099484594 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128824982 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141730196 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104296144 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142905086 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188832129 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177367942 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150575426 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142666124 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096130351 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126168045 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101553459 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16016561 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1533381 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159054886 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141538652 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.087135948 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143062603 seconds)
  done (took 75.787733309 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144074015 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129334394 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146056796 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191701745 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163882664 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239483707 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202554128 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223095604 seconds)
  done (took 2.539544748 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.097458608 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155651863 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137689482 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.12245585 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088932593 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.328643113 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.134678579 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120342259 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.144691861 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.131543434 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.08929651 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.559862214 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.091453181 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.123654782 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.110980903 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.087623957 seconds)
  done (took 3.619200117 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.257622008 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535449629 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.069977322 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.22866876 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.222066765 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170048067 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.75180666 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.159686723 seconds)
  done (took 12.498556532 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118594688 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137388553 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.13092265 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160386042 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115989382 seconds)
  done (took 1.77307962 seconds)
done (took 117.226834969 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092704663 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123466003 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.093722588 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.124755583 seconds)
  done (took 1.526994372 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.105364008 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077612776 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108131897 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077321486 seconds)
  done (took 1.469149956 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420350572 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107473128 seconds)
  done (took 1.665943924 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112850898 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131301899 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103968684 seconds)
  done (took 1.452909729 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10072873 seconds)
  done (took 1.208537264 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094507592 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095633245 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138270817 seconds)
  done (took 1.437820984 seconds)
done (took 9.869907447 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108862373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.523717475 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382619369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135272207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.718708998 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.376404367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032975685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154480694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134889803 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116364539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104877061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697637954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.017948812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.433904539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004050122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.339124557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671778306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118404971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093469699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118798919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014278057 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087197366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088968067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.670419154 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419793174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088337602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.380070172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115290147 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0922417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.406353545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088557067 seconds)
  done (took 16.952560444 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093871279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177056274 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095927277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119224924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092769132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118537517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097705057 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.130952002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180150289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087875172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134924683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087304766 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122920719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08808649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137675173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087574515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120211717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090154519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12434779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090287253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137151803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087192705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119149342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089582176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117131573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100425538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117371925 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100725755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116952269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092181978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122030715 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08824373 seconds)
  done (took 4.679434566 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138278641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185934269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125621767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122494541 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168017574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118609224 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173200967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15572384 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182645611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117528384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105496253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117138343 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124292852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118630828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108589807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117470914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090110674 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119789973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094682974 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118588261 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107713996 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116615854 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089399383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118838656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089215119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131483333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089070683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130450796 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115822229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092997395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122026682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08898354 seconds)
  done (took 5.013333231 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096041382 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126239736 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.104470547 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133385984 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090725624 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12488275 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096531349 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119984392 seconds)
  done (took 2.011847976 seconds)
done (took 29.766670164 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106260446 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093792168 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130654202 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100202201 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127188348 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101807371 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116710007 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099382211 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130532104 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096896369 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133363054 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.087148483 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.118267374 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.086632993 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129595786 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092610571 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132196551 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097696807 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137386204 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.103695363 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118118954 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100018482 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.096984958 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138321173 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137750177 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108727801 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133731583 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.093556698 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118678813 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089016139 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131849412 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110295041 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119765471 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10419062 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122230984 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092250894 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118760198 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.089928816 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131785885 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.09979915 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123356763 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099831195 seconds)
  done (took 5.808454249 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115113052 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161238101 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088139604 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118756244 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.08894835 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156821517 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.153001566 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.088519855 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.118520075 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.113761982 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.143590141 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089032909 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.118638898 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.08898784 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.118082061 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.090264909 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.14135069 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.114826155 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148890694 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.118804465 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.162937352 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149392959 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.122698415 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.14296646 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160137513 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.152497773 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.109738067 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.154744049 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115624226 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117250828 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.148273044 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.120283013 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.118291552 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.08864911 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.158852549 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.123932238 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.145813494 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158978966 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.148676759 seconds)
  done (took 6.101307758 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097199581 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132287477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111134642 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182641053 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.126408438 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.131412458 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098636998 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136853218 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104018401 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118070285 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089393142 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14857189 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136684378 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.096877347 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089145488 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133019291 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138643397 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09097573 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12303423 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107955566 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135947773 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101174104 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131905421 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098806359 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118569549 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097071866 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121477441 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.10399897 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123583495 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096991178 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12200186 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093498933 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120747705 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100227792 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121283613 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096406587 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141473587 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097643541 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130417467 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120500113 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130498509 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.092571008 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140688295 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158014967 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089667179 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124943061 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095682069 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096959745 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.116639478 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106383426 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12822591 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088995628 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133874044 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117490867 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087422098 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102877064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11919223 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09154191 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126839797 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095009122 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138588377 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093691674 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134417631 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089539788 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12489488 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088850547 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.118521535 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093856239 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140144589 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092038911 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158270932 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089191229 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124758407 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.09590403 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125468542 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098693472 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118882302 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10281395 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129324463 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093294834 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129647439 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.093093209 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122557291 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.107216324 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13346749 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096616148 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123904598 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.095501794 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122223064 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089763449 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132604231 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091674243 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123179119 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107355829 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119794393 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092338668 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125672516 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093723922 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117432343 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101089043 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12401975 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088691291 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128245793 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090003751 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122995642 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098376516 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121896352 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089073469 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12293434 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095807597 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118012156 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092396999 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092500792 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121336163 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101359888 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126632449 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091599815 seconds)
  done (took 14.336447579 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233699232 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215814971 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191115084 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.299634166 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141626744 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114939308 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212873322 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.164637482 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089648877 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15931542 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176535945 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186200231 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176018357 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185712279 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171933387 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121106431 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.10789042 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172191923 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215789649 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.298176511 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109086896 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135898611 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162238782 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161034559 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107925444 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135703918 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143224564 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110592375 seconds)
  done (took 5.844032719 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105153929 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155168351 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096782994 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145924452 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146699912 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090003573 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124714268 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.089687788 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.132728576 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.103375939 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.121262884 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.09652602 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.125866223 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.09972341 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120678276 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098208291 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130455604 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.098363586 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122942279 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092362935 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133131531 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107105604 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124542252 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091184462 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136391969 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121660537 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09076197 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141169748 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126434916 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11612482 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117023242 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097978479 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134489154 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.089465832 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092011691 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123034055 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091576998 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.123019225 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.090752802 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117860499 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089426444 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111292622 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.092784062 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134875399 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095635889 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.117575649 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094524845 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124427805 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095906868 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.116706583 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09111608 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091539453 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123410083 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.100113044 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123114673 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.095961185 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.123651086 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091096141 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128664245 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092070437 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117536942 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091076364 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12644828 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092543705 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128897084 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.096119443 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12142025 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091277933 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125634105 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096248899 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122207276 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.09797303 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116574561 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090356548 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130130783 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09848579 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.122346581 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091242267 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092224072 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11938576 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078725694 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119464991 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07636016 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123819886 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088292422 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.091312432 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.122433987 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.094306838 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135852655 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128762836 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096976352 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119498154 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093081577 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124736977 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087351958 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124300582 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107192012 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140391195 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088831587 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117733051 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105314243 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122164321 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.08725776 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.11238199 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.098838576 seconds)
  done (took 12.700625379 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131537899 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170927079 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121270969 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108447205 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155159888 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162651488 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098407238 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127724726 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.585409224 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107800395 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123541291 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099634528 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123227125 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103827135 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160332001 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130364304 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.091118795 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134461756 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.094699459 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173547582 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139568544 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.12913069 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.160582007 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123669291 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095401951 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157453056 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164050902 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10335446 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133015882 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131645876 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.13377193 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164879728 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.132053123 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125091928 seconds)
  done (took 6.056671515 seconds)
done (took 51.959749651 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.223931645 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.433845837 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.206287663 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.20509143 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.260331564 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.225789246 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.211855219 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.400633991 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.988232708 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.200721446 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.206265312 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.206135189 seconds)
done (took 27.910918343 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.28395851 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.369790776 seconds)
    (2/2) benchmarking "String"...
    done (took 1.500220747 seconds)
  done (took 4.008714427 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.208649752 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.206729538 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.449765101 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.212556254 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.205487917 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.223300723 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.207206202 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.21124201 seconds)
  done (took 15.85538389 seconds)
done (took 25.497968898 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.261510471 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.397870254 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.468936236 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.225235789 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.22660631 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.216781116 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.211485936 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.247978995 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.214572055 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.20896071 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.216567413 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.472125175 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.224485046 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.591867157 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.216821147 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.223022708 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.224963824 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.434856068 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.219860742 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.260015543 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.195672256 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.218610241 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.229965649 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.245144643 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.218895236 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.209749632 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.252436217 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.209284041 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.408641582 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.221742559 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.250399904 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.209498593 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.241582974 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.219778628 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.322103534 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.240088113 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.388229337 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.217758679 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.205898041 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.222345739 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.382947401 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.619980499 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.210575581 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.209362517 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.229594693 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.279678729 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.201326357 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.934963095 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.216969084 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.210892455 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.211886971 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.599230557 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.21298292 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.217889122 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.221459441 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.457162233 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.211086607 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.252762742 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.241584258 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.217070781 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.211033448 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.213386089 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.272732479 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.211945728 seconds)
  done (took 144.082433266 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.211093954 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.217318068 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.216410916 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.232969302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.215808018 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.216412658 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.211868604 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.210822176 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.217489479 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.240758442 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.215495911 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.211477166 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.217360948 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.174016147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.214635198 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.234119521 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.218392062 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.213288384 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.215083108 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.212579474 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.232859851 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.213511392 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.229197154 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.212851883 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.26088154 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.311317976 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.257482864 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.214042772 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.216377964 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.211904357 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.257113373 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.236926299 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.85281587 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.071464878 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.217474266 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.243087315 seconds)
  done (took 80.700742118 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.213464766 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211929559 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213102834 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24636315 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213599753 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791894693 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793087284 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.943200903 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.499545362 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.654716714 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491858747 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.212763633 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308377115 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.228900226 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215158915 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.230651532 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.241198982 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212696996 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214039244 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79307057 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.227416221 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.331588037 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.409908132 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.230792646 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247151089 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.615447202 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214970021 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247565724 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.551740327 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.264515686 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215133282 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.622191377 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.408674085 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331394221 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.214940104 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216700291 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248617486 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216458649 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.498707374 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216087173 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216172076 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.219622642 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924579923 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.21938431 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.7957666 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215929327 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.181228095 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.214642701 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216480069 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.268666159 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.940834159 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237427971 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216751861 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219685901 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.216956929 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216710229 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.250850383 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.23002978 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.33367867 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.218276585 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.220608114 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249340384 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.216951374 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.422720405 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217625992 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.332765292 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.277622722 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.426280134 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799959121 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217730906 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316513598 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338682934 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.217147016 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.218571209 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.217479764 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217054524 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.218675006 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.329456564 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.217838669 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218063083 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.647437196 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.397479122 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.235353443 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.663655077 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.321794513 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.218808894 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629234685 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.224554991 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.218731438 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979295848 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316621911 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.218727592 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.21992916 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219182119 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.653890072 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801309478 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490085896 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.224130369 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.219044742 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.518159701 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.227149786 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.660797811 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.792447696 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.904262736 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.220918466 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334159337 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.39847385 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.236111905 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219662383 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.664151411 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.224163462 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.279442191 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.219290676 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.619490184 seconds)
  done (took 367.474944654 seconds)
done (took 593.399609806 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.955964622 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.912676462 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.042037892 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.934513741 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.901879997 seconds)
  done (took 10.89839285 seconds)
done (took 12.050468176 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.413626761 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.414185214 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285293417 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415649351 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255526864 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432720983 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398236657 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.241081613 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.327407657 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.30459009 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325742074 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276774965 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25665158 seconds)
  done (took 18.500902111 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.561375098 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.223065864 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304116321 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.571720234 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263518031 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.593685697 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429616039 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.241188746 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423225518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237419818 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236681815 seconds)
  done (took 18.239536962 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607435274 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.222514543 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306652891 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573820648 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264016471 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.577532394 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.451611938 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.241690829 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426219742 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236886136 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236603829 seconds)
  done (took 18.297763773 seconds)
done (took 56.192392627 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265477979 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.39180834 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.248743394 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.237689251 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.231723051 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.233985888 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.239681918 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.234409649 seconds)
  done (took 11.238615077 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.230963945 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.23174747 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.232045981 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22926623 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.229158309 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.229385931 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231170103 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.229374077 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.2299933 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.23121374 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.229805872 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.230110887 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.232246606 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.231350787 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.230001991 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.23318405 seconds)
  done (took 20.846620671 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23119337 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.229416032 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.229859397 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.230424977 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.230749411 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.230016567 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.231703245 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.230728993 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.231152924 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231099113 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.232006558 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.230900557 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.231170218 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.230472525 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.232075217 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.231942222 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.230903314 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.230859839 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.235994999 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.230814959 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.231484631 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.231133713 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229790904 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.230638028 seconds)
  done (took 30.704538409 seconds)
done (took 63.942771471 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.226664126 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.246828323 seconds)
  done (took 5.629491193 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.293971336 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.293371269 seconds)
  done (took 3.748379021 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233985257 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.235717465 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.234566553 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.233579743 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.235901111 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.234177521 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.235289664 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233892336 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.234133969 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.23424088 seconds)
  done (took 13.502284648 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234109796 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.234488757 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.231179775 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.23484601 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.23565509 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.232493784 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.234648812 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.23550737 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.235773533 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.232930517 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235750718 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233545463 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.234719245 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.233685222 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.235114643 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232410227 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.23246642 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.232716716 seconds)
  done (took 23.36958824 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.249552399 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.256893575 seconds)
  done (took 3.664136424 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.363596874 seconds)
    (2/7) benchmarking "second"...
    done (took 1.274868405 seconds)
    (3/7) benchmarking "month"...
    done (took 1.35086924 seconds)
    (4/7) benchmarking "year"...
    done (took 1.332121448 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.275033187 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.256357251 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.276351377 seconds)
  done (took 10.288353408 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.237271272 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.430649149 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.540848508 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.817239299 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.238263667 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.241179034 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.125977947 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.240914536 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.243097184 seconds)
  done (took 14.275014198 seconds)
done (took 75.63449472 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.230074807 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.249617856 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.243761648 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.246045568 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.572092258 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.259845033 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.236835902 seconds)
done (took 16.198779652 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.220973209 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.227316345 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.22734609 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.233372383 seconds)
  done (took 10.06845989 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.243061968 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552730634 seconds)
  done (took 4.956091203 seconds)
done (took 16.186104965 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.235028173 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238476915 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.235118603 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.237344396 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.2365615 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.235096695 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.238613363 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.234953608 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.23627279 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.238832454 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23872432 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.237716088 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.238100053 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237966717 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235605379 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235050374 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238934204 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.235843939 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235589375 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235622241 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238682652 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.235407625 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.236443367 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.239747269 seconds)
  done (took 30.846112753 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.238856327 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.234900835 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.239495443 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.237983921 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.236914706 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.239091123 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.238925865 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.236807029 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.240387625 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.239659637 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237051648 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.236872926 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240221304 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.236791556 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240043131 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.236416262 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240235038 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237633759 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240660972 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.237830457 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.239401507 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238074959 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.236748302 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240170117 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.238280528 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238992896 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.240702049 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.238676961 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240586746 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.238366505 seconds)
  done (took 38.318470281 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.246274924 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.248885919 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.239254545 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.240948068 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.241051583 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.244869026 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.246388241 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24145399 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.24163881 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241379264 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241492848 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.241880961 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.241313828 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.241437803 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.239983241 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241469459 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.24329886 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.241697048 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.24116307 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.242522729 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.24221506 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.241121232 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.243190485 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242900462 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.24211092 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.242565397 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.24255957 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.242560176 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.241106155 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.243118433 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.241687872 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242927602 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.242152886 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.242539267 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.243085545 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.24332698 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.247074901 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.250712742 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.243690358 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.243726092 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.243498319 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243704294 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.243607359 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.242672476 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.243752047 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.243500018 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.243842931 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.243468938 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.241635004 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.244661854 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.243319474 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.243462157 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.243535922 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.243692414 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.242912421 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.242256882 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.243186419 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.2447696 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.24342865 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.245407485 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.244737226 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.243435357 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.243784259 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.244487689 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245500768 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.244652942 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245424238 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.24544342 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.244912778 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.245315363 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.245247086 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.244150882 seconds)
  done (took 90.685152952 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245390176 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.241937655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243818849 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242621539 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243138145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.245046616 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243547401 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244928289 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243171703 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244595163 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245695108 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243065559 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243605593 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246208143 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24582338 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.243311831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245708288 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244122983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.247578408 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246482056 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244845056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244638035 seconds)
  done (took 28.546950479 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247529503 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248597602 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.244780272 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250117452 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245719415 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248284189 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246264577 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247739585 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247190284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244696449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245159439 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248358328 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246684108 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244042685 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242483362 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246105299 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248672008 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246631716 seconds)
  done (took 23.607206104 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.245402245 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245272631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.247058342 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.250930201 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.248498648 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24716239 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244763137 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248236948 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.24859034 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.244775827 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247700661 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247307694 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.247743986 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2447252 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248249189 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244679649 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.247339429 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243702709 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248414023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246244619 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.245743518 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250339586 seconds)
  done (took 28.603924072 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250288269 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248590072 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.245591104 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.246744953 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.245832239 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.248235268 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.24814798 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.246725616 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.250109537 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249075606 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244902498 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.249202024 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.24852686 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247407518 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.246946093 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246505592 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250248581 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245403471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248991172 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.245847292 seconds)
  done (took 26.12531652 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.250032585 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250340338 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249998052 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251380282 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249331061 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.249703912 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24953793 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24772253 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249230597 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249169704 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250085314 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251041414 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249030714 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248344847 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247954171 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248611782 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248040605 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248138118 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248751853 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248919115 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249481472 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248126564 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248981301 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249498404 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248583595 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249112658 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24890187 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249816243 seconds)
  done (took 36.148816739 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247286758 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248121488 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.246119446 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.245444919 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.24590428 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246084937 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.24778552 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.244907243 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24726627 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245339899 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247717432 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24702392 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247672013 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.247201635 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249760133 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.247460401 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246511535 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.245385451 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2462837 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244649467 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.249255068 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247612821 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.248351354 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244910417 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245012669 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.247573984 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245375429 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245023261 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248066538 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246155158 seconds)
  done (took 38.572149074 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.292540696 seconds)
    (2/2) benchmarking "in"...
    done (took 1.292096191 seconds)
  done (took 3.754626297 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.245432993 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248316175 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.248149335 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245079934 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.245105496 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249799458 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24769404 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244874805 seconds)
  done (took 11.144400022 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247326526 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.248645309 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.249051113 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.249356465 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.248508243 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.248075004 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254100163 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.267791851 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.248498806 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.248562873 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254169558 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.254590587 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.251712523 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248340892 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247327151 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251066205 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248389367 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.248248695 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248072267 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.248222498 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249504379 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249211654 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250678535 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.246825725 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.249976287 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258398615 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250816126 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.249639195 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247944912 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.250809964 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246359674 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.246250076 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249198352 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.249865173 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.249488663 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.250115719 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2577925 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270548457 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25554217 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251397152 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250581502 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.247507619 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248981649 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250989337 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250356318 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250203175 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.24921334 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.247205249 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.248729204 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.253943806 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.254761474 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249188596 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.247936167 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252316493 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250680119 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257596014 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.269628199 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.254482426 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259542108 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260458708 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.263846934 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.274966444 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251868747 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.252413569 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262258725 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.27451412 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258668071 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.269958111 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.249307255 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.251089728 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256947267 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262910381 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.27652337 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.25351294 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252572677 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25290415 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25241096 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252833796 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258731397 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.274200897 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.253513984 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253748224 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262923754 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275690855 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.253189132 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.252888915 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252843104 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.254737868 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.25372193 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262681795 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.273229273 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.254352113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252956905 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253463069 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.254985301 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.253566488 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25154885 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253546712 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.250143113 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.254653099 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254067525 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256748006 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.26352255 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254853243 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254099293 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.259618928 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.254073268 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253495467 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.25885048 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.253313144 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255180768 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254595082 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260152666 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.251472288 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257802142 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262830931 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.254040414 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.25491336 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25312133 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.254027126 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265201843 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280114429 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.255733699 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255160646 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.260278986 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.269193048 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255421688 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.257945525 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.256168125 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.253078279 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.253673159 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.256100027 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257053247 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.256900032 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25827265 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254931776 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.251806749 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.257857201 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255838222 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.25552593 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256178712 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.256543237 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.256619397 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257402859 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.257451766 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257217972 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.262926125 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254866913 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.257671256 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.256832236 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.253100572 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257046241 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.256707302 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.257613795 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254789484 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257177423 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.256137311 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.258320081 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258847581 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.257204375 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257976072 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.258247285 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261633068 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.258142572 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.260039114 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.257662813 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.254780538 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.257331445 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.258287716 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.256513035 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.258337531 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.258394242 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.262353191 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.266285687 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.257745051 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258924276 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.260175816 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257996042 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258707503 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259261736 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.261127347 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.265413104 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259259216 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264489148 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258755254 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258951049 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25910377 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.25869742 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.258103539 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259353655 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.261155016 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.266585787 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271209675 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284340053 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.260053029 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263845267 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260399997 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.264204668 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.261980466 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259422484 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.25995421 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25938598 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259217495 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261305042 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259961975 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.260196581 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258134407 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.260649808 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.261878939 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.259763586 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262553316 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.258961654 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259368786 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.256736625 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259284678 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260104218 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258689203 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257783747 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257942535 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258766573 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.261689915 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260046673 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.26585286 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.257099624 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260063289 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260988219 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.259763646 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.257824059 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.261092103 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260841332 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258312256 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266564003 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.278757472 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.259651436 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265965378 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.279378679 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257300285 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.261335942 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.260239973 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257335408 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262581415 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.269173493 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.259429071 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.261218511 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.261147992 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259180333 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261843634 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.265958418 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.257232816 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259727672 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.261080249 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260125675 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.257486785 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260225903 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260793984 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259438075 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262075927 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260365238 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.26123502 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26052663 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260378074 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.262653493 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261253764 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262321641 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267472242 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.299514069 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.264721072 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262021166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.261172701 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.264788971 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260350156 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.260592766 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260854693 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272580788 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.287202816 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266002232 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.281678434 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261754266 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265821254 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.283491538 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.26453097 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26129517 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262643979 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261533606 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261630847 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.258948974 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262850883 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.263299817 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262974861 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.263470572 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.266630473 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26188391 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.261498529 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.262820663 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262915995 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.263695488 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.261755852 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263540006 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.263486448 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263888408 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.260206802 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261678831 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268620981 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280866758 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264046626 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.263055557 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262013981 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261822525 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.261797824 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.262783395 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.2645232 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270671044 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265444177 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271792124 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26309707 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270303341 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.262650061 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265833239 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270375784 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.260669937 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260589647 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262242899 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.263042009 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268852396 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282227341 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263557333 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266125978 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263427197 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263706005 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.263539371 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262441168 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263043464 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262857813 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270471217 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283468698 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266908056 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263321619 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261225257 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.262436026 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262220635 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261287886 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265176099 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.262639037 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263264369 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261041854 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261274146 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26224651 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261927642 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262820131 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259783451 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261417519 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268030073 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282928941 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267328429 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264564888 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268379439 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262624186 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268648823 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281656501 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262393406 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26402162 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.263501639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262748907 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262467268 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.261701072 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.265015544 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264376948 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266485356 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.262989085 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264447555 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261846352 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.264551422 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.26225533 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273947268 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2874896 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265778625 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269648351 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261219613 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.264149345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267832329 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.264238273 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.262463561 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267193483 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273995723 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273167119 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.264170387 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264288432 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264782729 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265102941 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263788129 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265438832 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264748341 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.265889796 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264527454 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264500124 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267683333 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266292618 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.265985216 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266165283 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265314476 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.276073903 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266591804 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.26686823 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265954188 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267257178 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.264616327 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266200434 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266401996 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264939449 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266481529 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266574061 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27230268 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.271974344 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.26728275 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264627948 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266647772 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265899147 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265265101 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266865556 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267598474 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266415591 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.26772026 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267120114 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.267245681 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265144388 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267654032 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266114858 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267586858 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269247113 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274429125 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267252137 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264410358 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.265677593 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269613412 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264969176 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267209968 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.275409309 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27259117 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278399071 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.276366132 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271374666 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269946482 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269792436 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273586082 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266348014 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267552067 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267954952 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.268541646 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268526278 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270429833 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269542032 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27372047 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267069171 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267688534 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27639406 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.291357843 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26800506 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269175025 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.271083514 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.269202347 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265167253 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268145015 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267084093 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275251728 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285744729 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268665749 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269197122 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266379664 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267977924 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272711739 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269083447 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268676952 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265118251 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26866199 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267327037 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269406148 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.265683635 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.266943758 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.267743009 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272349879 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27422112 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.26689609 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269126217 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.266830004 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268234091 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269409448 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268644487 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266019653 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267153477 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.266875931 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268291157 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.267774924 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.269882443 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.265534826 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27030719 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272258871 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269969576 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271166323 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277471163 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277259821 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.26600304 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267021624 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269356084 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270642961 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268513609 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268762258 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267883255 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.268518287 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.268786015 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267465629 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268904095 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272097402 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28201309 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28968796 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268281765 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26786884 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270407302 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.268558898 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267634029 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.267890011 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.269178289 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270684186 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277411497 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.270560308 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275090196 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286162429 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27110605 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.272507884 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.270479372 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.274282893 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26839864 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268402118 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267690823 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.273236398 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.283529867 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267792869 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276006197 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295950815 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.285937866 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267969583 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.271776944 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26591773 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.269244305 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268934951 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.268852182 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.268028838 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269876603 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.268691461 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269434431 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27210972 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.269390413 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.270026862 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26752179 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267947247 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268225307 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.267646944 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268606969 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.268942158 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.268989372 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269446191 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.269200682 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.268723413 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280179366 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.294426264 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.268604098 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270630169 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.267941094 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.269078398 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.271072443 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278128112 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277087458 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.269734152 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269319793 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.270738293 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268715309 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.266664514 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.266311849 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.267698958 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269076482 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.266693095 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.280106411 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29262661 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.273435287 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.267403162 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269995934 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.269037163 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269038664 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268277053 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268692552 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.270208557 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271836063 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273383652 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.269293969 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270256884 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.271155353 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.277086884 seconds)
  done (took 754.333473101 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268474392 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265737756 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265709847 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265885522 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267770455 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266673617 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267798832 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267564702 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267720692 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26731453 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26699125 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266249777 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2655331 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267551367 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266928434 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266593366 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268057875 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265754634 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267016972 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26588297 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265884103 seconds)
  done (took 27.792862914 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269050597 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.265576351 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266701835 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26802842 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266931995 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268049445 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266779162 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269042389 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268552152 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267765899 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269722234 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269547344 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.265559485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.266303042 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266784969 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269119153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268509176 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266779676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.270441653 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266429169 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269298246 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267129459 seconds)
  done (took 29.080852477 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.270392221 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270207924 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.269146204 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.267480942 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.269402347 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.266711226 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.271473182 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.270689152 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.269966671 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.269661421 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.270143383 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.270854521 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.27646941 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.273716958 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.272627819 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.269847635 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.271282475 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.271595573 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.270879806 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.268330956 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274621519 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.287297382 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.268164966 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.269447533 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.271259117 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.271063059 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.271543613 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.271344781 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.271039636 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.274567018 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.271346106 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270707465 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273144852 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.268366681 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.272932116 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273592197 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.271710108 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.268202605 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.271865961 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.280451083 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.288186934 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.272381062 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.277464785 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.291031515 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.26998708 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.271634942 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277435336 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.268116488 seconds)
  done (took 62.27221555 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.271311215 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271049004 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.270354684 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273156371 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.271631958 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.271628733 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.27248421 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272698407 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.269278389 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270361271 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.27158519 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268699722 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269018456 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.272984794 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.274810765 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271091893 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269834858 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.27010806 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.26909627 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270275976 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.269246342 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.272557834 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273283606 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.270407358 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.275198054 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269946688 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27000883 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.274294014 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.272974812 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.271193763 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272983558 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273890722 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.276724192 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270641812 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271647687 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.272764258 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274375802 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.270746208 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274977635 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.272368123 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.275658509 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273699432 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274128701 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274574033 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273181417 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273888482 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273642007 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.272842898 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.273850366 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275279916 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274572087 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.273253749 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276408742 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.27309924 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276689956 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.274941131 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.2721535 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.274877779 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.276695008 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271366624 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.273237483 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275931263 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272679542 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.278390479 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.276462527 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272816141 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.273579088 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274565892 seconds)
  done (took 87.74531621 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27807921 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277178015 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277645362 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277126443 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277907258 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278555393 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278173885 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.279360406 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278371809 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277674754 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2787427 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278020348 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278149104 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278460546 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279029199 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278944732 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279320594 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279419648 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28070013 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28045235 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279105283 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280886813 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279525086 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279742587 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281210801 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280729265 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279396298 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280019749 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280455827 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279924404 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281012275 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.279153006 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279064181 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278898355 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.278843226 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.278243365 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279850306 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278089507 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279654647 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279137326 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277863218 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279150961 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278514717 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.278182386 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278448412 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279792884 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278436891 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280367966 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278347282 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279276524 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279990086 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27827562 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279231052 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278957531 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277844293 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.279249527 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280025254 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282314235 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27999638 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279788369 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27982427 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.280235269 seconds)
  done (took 80.505567536 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279833157 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281151766 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279352412 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276238901 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.27915367 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276698245 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279156287 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279908151 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279207101 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279076841 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280499187 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278310404 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279176943 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280304723 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278481401 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27837792 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27737028 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277490046 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280535806 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278133731 seconds)
  done (took 26.775308832 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277424964 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279024319 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.279528947 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277652625 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.281785331 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279742905 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.280934202 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281352153 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277785768 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280725967 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281579537 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280535829 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278963817 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280150054 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280394352 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277854637 seconds)
  done (took 21.673162534 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.27793158 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281743711 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280572926 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280776971 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281016511 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.279472639 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281755865 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.280228206 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.280214216 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283429537 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.282272402 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28258672 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283828213 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.283884509 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281413819 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282525633 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.280575466 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.280577683 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.282192198 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283837304 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28204335 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.281820695 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283712667 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.28591398 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28169679 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.282836231 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281185633 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.281364696 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.281612451 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283750406 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.280219733 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.28359008 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28096673 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.282437543 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.284441684 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.282854865 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285511506 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283742924 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.284077363 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.284421553 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284139436 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282074563 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.285454961 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284774058 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.283353372 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.285616756 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283219687 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283243092 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.284481221 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.284177161 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.285008376 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287223745 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.286327243 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286752319 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.286246577 seconds)
  done (took 71.761539751 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286246607 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285679472 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282771048 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285606069 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285794924 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282673831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.285116052 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28499587 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281773654 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285469545 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282495652 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286884441 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282972513 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284903292 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283983603 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286386024 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283138371 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283876694 seconds)
  done (took 24.323927525 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283644675 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283019292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286070864 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283274162 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.283895595 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28565708 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282918453 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286293855 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286921839 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284407673 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282657515 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287127196 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287834991 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287553447 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283359802 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28426711 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.286531079 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286722388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284714879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286269112 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292166646 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288052524 seconds)
  done (took 29.487296981 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.285293629 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.285762462 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.28615926 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.301091664 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.303359902 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.285527442 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.285398372 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.285702338 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.308244752 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.33445268 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.32862975 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.303616451 seconds)
  done (took 16.798478203 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286256449 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287315992 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287431631 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287778985 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288225406 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285176987 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286288275 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286155837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288791007 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286908786 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286237499 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287386514 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287840593 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287754968 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289243782 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289188525 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286458099 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285790835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286477326 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289875329 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286589546 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289428206 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287030837 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288200975 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287251524 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287770899 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289704637 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288273961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286885332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290360666 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290945835 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28782712 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291846236 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287730975 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28865564 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291313531 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287085628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290636883 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293436752 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288791064 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291563247 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290781091 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289978461 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287851232 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291212626 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288080837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289060601 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288868466 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289009896 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291471227 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291928736 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288161143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293734942 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291098598 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290714977 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292395009 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290359753 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289258208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291829487 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289303641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290539904 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292287568 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28991475 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290513397 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292809812 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289891885 seconds)
  done (took 86.286696357 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289578427 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290860092 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29015046 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290054379 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289063945 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291871755 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29088762 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290010681 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290465308 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290312753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293616127 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290672698 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290602529 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290524784 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290207467 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291432003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29061952 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290026502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291694288 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294698407 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292244726 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290635605 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290576549 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290651543 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290912374 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292836044 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29170357 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290446896 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291766702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291173836 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293094674 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292074103 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291770867 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291851855 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292204388 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290477536 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292365295 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291448439 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292126087 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293682778 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291693694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295604567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292474574 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293526896 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290050542 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288967513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29030399 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289121157 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289037059 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289902713 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28962662 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288249048 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283767055 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284654331 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28343444 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283443745 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283061479 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282694622 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281958168 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282400504 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275034224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275672685 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279516695 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275836309 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276293179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275948572 seconds)
  done (took 86.274542723 seconds)
done (took 1762.625154886 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.431438571 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.386651535 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.270899495 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.278523866 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.270901936 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.267903918 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.27803603 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.264383243 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.264666365 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.265093272 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.264331802 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.453546499 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.259085514 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.259815242 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.258136918 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.352949316 seconds)
  done (took 26.020203438 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.285505811 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.265271087 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.368234311 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.286299474 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.287050968 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.442092834 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.321402362 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.264682387 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.425180347 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.311944246 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.2621451 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.29192169 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.264422343 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.263294512 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.286234252 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.442174652 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.498925413 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.255111518 seconds)
  done (took 28.002530842 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.679734702 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.295393489 seconds)
  done (took 5.155887496 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.281981719 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.262356776 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.264630373 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.26097462 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.253475495 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.254810674 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.26119319 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.259949691 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.260617361 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.380409064 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.265449003 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.274913289 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.281489723 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.265077648 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.261886284 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.301623747 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.407694263 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.262109094 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.260201694 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.270609198 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.264750528 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.347180406 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.302911047 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.262187528 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.381973978 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.264125531 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.271421985 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.27253258 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.397994878 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.263253652 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.263166385 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.265107912 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.267344036 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.155694187 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.71373778 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.262976888 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.288764433 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.273080163 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.262489309 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.402379243 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.266187712 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.271703532 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.257709981 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.691460577 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.407848265 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.374679367 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.275243631 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.266330736 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.268352219 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.325387234 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.266205781 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.268031261 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.308971261 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.03503327 seconds)
  done (took 81.250991308 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.305635059 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.259081171 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.435643042 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.279933242 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.257933992 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283416237 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.258068913 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.527574317 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.32460005 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.258990616 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.527453091 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792300135 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.272933132 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.294728093 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.101916588 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.306435195 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.263520727 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.258961864 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.274475993 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.265616797 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.795875023 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265674717 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.259353675 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.418415582 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.297101464 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.739887212 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.25910256 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.259453588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.259690694 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.26011939 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.748970425 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.27768676 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.315729121 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.260817934 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.514637179 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.616038638 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582311919 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.262841311 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.294920184 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.262973275 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.278795206 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.745144793 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.599471011 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.262093156 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.276715216 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746112543 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.26099357 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.266668369 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.272080994 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507220483 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.260528006 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.2637996 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.260817174 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.277909329 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.260640419 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.330505441 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.328126472 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740906618 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.260791736 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.26280763 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.297887815 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.261557253 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.270740426 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.263794227 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.26273339 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.602811013 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45276886 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.267927956 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.601287543 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.746310404 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.2780561 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838817329 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.277899861 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.28199232 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.275512104 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.264157405 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.26421626 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739554658 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.268774432 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.263151919 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.585887023 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.265774297 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.53289956 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.281498411 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263483843 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808275302 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.274202052 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.267929693 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.268670456 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.263991352 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.263698344 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.267290449 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.535932816 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.33230956 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.263069921 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.262968122 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.271279182 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.264873563 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.281920538 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.270720652 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82404933 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.290298889 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.265217674 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.265935351 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265364004 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.278328621 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.264438213 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.263881136 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526390921 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.264926579 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.267397698 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.266991448 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.270002005 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.270003224 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.407429479 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.27302566 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.557604642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.2664441 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264268293 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.271572914 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265117522 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.316491955 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.266106192 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.273454129 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.178570643 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.564179856 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.28383373 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.266578679 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268021103 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.265265351 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.265509525 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.265527597 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.289086323 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.267909237 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001710166 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.302426347 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.292251836 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.26628823 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.270620734 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266226607 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.270119774 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.269026521 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.557340136 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.523149111 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.419495576 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.270349178 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.266168705 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975604008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.286259642 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445511419 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286459736 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.266373336 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513505284 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.470821769 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.268418392 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.26576608 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.270912995 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522935262 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.28097021 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570940404 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.781575326 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.284422795 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.276717503 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002944649 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.993052345 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.267776169 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.271318639 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.538189692 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.285591322 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.269047005 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.267694289 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.278357083 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.268877389 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.286914578 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.273959162 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.267837123 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.269934126 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.401805079 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.457814985 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.285054773 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.276375032 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746824306 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.269110323 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26941176 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.27426726 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.272765897 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.270103809 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.358413794 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.273257187 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.2699573 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.270353557 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.277920113 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817054123 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.270674068 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.270078517 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.45982942 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930099906 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.285948372 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.269185261 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.286037216 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.147735513 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.771191265 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.282604764 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.564181435 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.272282766 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.308978219 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284586864 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311925222 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778210271 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273667592 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.269995603 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895777446 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.287667695 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.796883017 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.271418158 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.281980529 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.837696531 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.288315829 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.270934404 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.27205255 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272220946 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559887308 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.272327575 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.309550438 seconds)
  done (took 482.149441138 seconds)
done (took 623.775044135 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.271364765 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.271689588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.266076118 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.276097258 seconds)
  done (took 10.282628451 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.280419807 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.278698664 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.279354685 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.277745361 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.280412342 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.279024405 seconds)
  done (took 8.873189817 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.271176912 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.273333356 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.279285373 seconds)
  done (took 8.02083535 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.473705247 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.291115974 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.580147754 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.304277273 seconds)
  done (took 8.848037488 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.278264781 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.279395249 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.278474077 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.280512584 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.282802017 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.282619459 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.281324566 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.280603785 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.281680409 seconds)
  done (took 12.7224019 seconds)
done (took 49.945386977 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.27953693 seconds)
    (2/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.294714664 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.829092967 seconds)
    (4/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.272224771 seconds)
    (5/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.321002152 seconds)
    (6/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.273482528 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.521293186 seconds)
    (8/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.294207581 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.348452351 seconds)
    (10/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.398387021 seconds)
    (11/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.267994141 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.316781782 seconds)
    (13/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.599916538 seconds)
    (14/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.262849135 seconds)
    (15/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.446628987 seconds)
    (16/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.261932358 seconds)
    (17/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.223920362 seconds)
    (18/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.263399846 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.280396254 seconds)
    (20/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.295268729 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.278424941 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.261192213 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.30232536 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.383337874 seconds)
    (25/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.301045938 seconds)
    (26/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.261166711 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.298226381 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.145263613 seconds)
    (29/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.364619972 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 2.273744397 seconds)
    (31/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.301136815 seconds)
    (32/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.31182604 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.383051747 seconds)
    (34/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.301528571 seconds)
    (35/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.27044223 seconds)
    (36/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.280708168 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.292666356 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.596807869 seconds)
    (39/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.984174632 seconds)
    (40/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.008714447 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.294563428 seconds)
    (42/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.329614874 seconds)
    (43/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.262931534 seconds)
    (44/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.460173377 seconds)
    (45/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.515201605 seconds)
    (46/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.294864854 seconds)
    (47/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.361885593 seconds)
    (48/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.999350831 seconds)
    (49/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.26836999 seconds)
    (50/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.804099555 seconds)
    (51/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.195524018 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.387189463 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.531812312 seconds)
    (54/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.381077272 seconds)
    (55/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.262483276 seconds)
    (56/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.322463986 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.332413192 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.27618043 seconds)
    (59/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.828241627 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.661265799 seconds)
    (61/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.375665336 seconds)
    (62/286) benchmarking ("sort", Float64, false)...
    done (took 2.277965399 seconds)
    (63/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.312108889 seconds)
    (64/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.263105085 seconds)
    (65/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.028901521 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.285028696 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.757999448 seconds)
    (68/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.425514697 seconds)
    (69/286) benchmarking ("sort", Int8, false)...
    done (took 2.276791751 seconds)
    (70/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.158426685 seconds)
    (71/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.270617783 seconds)
    (72/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.270608539 seconds)
    (73/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.387888397 seconds)
    (74/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.266577119 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.273132765 seconds)
    (76/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.300737632 seconds)
    (77/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.279138872 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 2.278444049 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.272397868 seconds)
    (80/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.856442841 seconds)
    (81/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.27161273 seconds)
    (82/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.408173801 seconds)
    (83/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.279999574 seconds)
    (84/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.762060722 seconds)
    (85/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.266485732 seconds)
    (86/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.271794076 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.277804261 seconds)
    (88/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.440588489 seconds)
    (89/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.26439578 seconds)
    (90/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.30368843 seconds)
    (91/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.304790632 seconds)
    (92/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.279108709 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.323320639 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.26872096 seconds)
    (95/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.444091219 seconds)
    (96/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.268015165 seconds)
    (97/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.272395421 seconds)
    (98/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.858470924 seconds)
    (99/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.272314951 seconds)
    (100/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.286599815 seconds)
    (101/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.322076534 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.599709495 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.899142761 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.267405955 seconds)
    (105/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.097470325 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.283896806 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.495630866 seconds)
    (108/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.278931026 seconds)
    (109/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.375214997 seconds)
    (110/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.295399284 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.267402547 seconds)
    (112/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.393943369 seconds)
    (113/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.320555468 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.288643519 seconds)
    (115/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.468735124 seconds)
    (116/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.362843293 seconds)
    (117/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.266628929 seconds)
    (118/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.094680935 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.032740671 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.100650401 seconds)
    (121/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.273851151 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.795407795 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.304190333 seconds)
    (124/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.273284955 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.266533203 seconds)
    (126/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.274080995 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.559031592 seconds)
    (128/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.02703296 seconds)
    (129/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.614359922 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.287506625 seconds)
    (131/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.188836471 seconds)
    (132/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.308498037 seconds)
    (133/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.345557387 seconds)
    (134/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.291798891 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.091874126 seconds)
    (136/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.288187108 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.27685491 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.020489583 seconds)
    (139/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.549651089 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.665159537 seconds)
    (141/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.304470591 seconds)
    (142/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.373810143 seconds)
    (143/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.297244875 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.395424066 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.308282865 seconds)
    (146/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.270118281 seconds)
    (147/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.298922137 seconds)
    (148/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.273064889 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.37346121 seconds)
    (150/286) benchmarking ("sort", Float32, true)...
    done (took 2.281000261 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.281945656 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.019237567 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.315521863 seconds)
    (154/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.268930221 seconds)
    (155/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.290750642 seconds)
    (156/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.314079463 seconds)
    (157/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.30058764 seconds)
    (158/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.369165476 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.305564367 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.282238312 seconds)
    (161/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.433892839 seconds)
    (162/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.616269071 seconds)
    (163/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.2913673 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.285507592 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.149146984 seconds)
    (166/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.301938129 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.672786965 seconds)
    (168/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.770221209 seconds)
    (169/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.409728966 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.272182716 seconds)
    (171/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.368195262 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.017133937 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.289965469 seconds)
    (174/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.391281032 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.311297081 seconds)
    (176/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.308836667 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.325293895 seconds)
    (178/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.542968882 seconds)
    (179/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.294237479 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.093452008 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.105621997 seconds)
    (182/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.294476469 seconds)
    (183/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.273863699 seconds)
    (184/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.296348021 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.289617485 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 2.290519968 seconds)
    (187/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.345197139 seconds)
    (188/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.404738462 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.34216815 seconds)
    (190/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.270934887 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.396406219 seconds)
    (192/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.424329847 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.274329974 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.31075436 seconds)
    (195/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.273950548 seconds)
    (196/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.290871164 seconds)
    (197/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.431200378 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.270698103 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.491311671 seconds)
    (200/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.285570835 seconds)
    (201/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.27261478 seconds)
    (202/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.49377512 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.305979376 seconds)
    (204/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.273965186 seconds)
    (205/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.844451278 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.279011449 seconds)
    (207/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.291616472 seconds)
    (208/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.28043451 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.308882143 seconds)
    (210/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.27378954 seconds)
    (211/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.303718749 seconds)
    (212/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.350255934 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.328301573 seconds)
    (214/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.273544118 seconds)
    (215/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.367210529 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.292134876 seconds)
    (217/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.306120412 seconds)
    (218/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.273554375 seconds)
    (219/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.335068068 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.744125771 seconds)
    (221/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.424464618 seconds)
    (222/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.294915564 seconds)
    (223/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.284014658 seconds)
    (224/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.524948749 seconds)
    (225/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.274133068 seconds)
    (226/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.281357851 seconds)
    (227/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.290169354 seconds)
    (228/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.27375449 seconds)
    (229/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.139989843 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.274406418 seconds)
    (231/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.012224324 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.156704073 seconds)
    (233/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.28770554 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.627058748 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.299762162 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.495787441 seconds)
    (237/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.652047161 seconds)
    (238/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.277437964 seconds)
    (239/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.434602059 seconds)
    (240/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.314488096 seconds)
    (241/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.276329684 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.742038999 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.313548791 seconds)
    (244/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.287669313 seconds)
    (245/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.282962592 seconds)
    (246/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.616163761 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.67290155 seconds)
    (248/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.115120045 seconds)
    (249/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.213090388 seconds)
    (250/286) benchmarking ("sort", Float64, true)...
    done (took 2.289566323 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.011912796 seconds)
    (252/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.320137523 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.914878967 seconds)
    (254/286) benchmarking ("sort", Int8, true)...
    done (took 2.287872915 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.66181888 seconds)
    (256/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.299205027 seconds)
    (257/286) benchmarking ("sort", Float32, false)...
    done (took 2.288833946 seconds)
    (258/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.19260771 seconds)
    (259/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.818740566 seconds)
    (260/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.285601772 seconds)
    (261/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.280748574 seconds)
    (262/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.316833282 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.371417691 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.290498953 seconds)
    (265/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.290373046 seconds)
    (266/286) benchmarking ("sort", BigInt, true)...
    done (took 2.300285069 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.372647793 seconds)
    (268/286) benchmarking ("sort", BigInt, false)...
    done (took 2.290142928 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.406672451 seconds)
    (270/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.281027737 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.295254004 seconds)
    (272/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.278367164 seconds)
    (273/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.299051454 seconds)
    (274/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.280481732 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.297070992 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.333498427 seconds)
    (277/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.278184853 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.176054039 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.160834823 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.314086255 seconds)
    (281/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.398171943 seconds)
    (282/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.290603302 seconds)
    (283/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.309945694 seconds)
    (284/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.278577128 seconds)
    (285/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.400769695 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.290319396 seconds)
  done (took 550.624027256 seconds)
done (took 551.821272357 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.327776071 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.335888483 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.305654367 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.326321834 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.416279365 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.479411148 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.315928029 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.307170933 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.355223185 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.35517437 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.30284054 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.479800942 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.304779738 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.303476105 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.303800748 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333357269 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.301504179 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.303993998 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.32039488 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.31423148 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.319621069 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.302635879 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.354315239 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.479032641 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.307795242 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.307614705 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.308260191 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.323464913 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.415777707 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.306603457 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.309358466 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.313766823 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.301715606 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.303707587 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.300860557 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.324206991 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.315335928 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.315530054 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.310531951 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.336134506 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.295006967 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.30366854 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.307023918 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.308285329 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.307304813 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.311738039 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.306809962 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.31186972 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335369826 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335722834 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.304476676 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.320181705 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.30901479 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.310233483 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.318692909 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.306467356 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.311415528 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338670944 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.325413546 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338834506 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.295811108 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.31119316 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.309571443 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.324250603 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.313454911 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.295922843 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.3228296 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.311767238 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.29528334 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.311066104 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.296657611 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.317046244 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.31016784 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.320957414 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.338181755 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.30752718 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.302463527 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.307525336 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.315186022 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.30797195 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.317850822 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337930284 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.314033189 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.309209247 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3359716 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.484275879 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.319890744 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.309702397 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.318385352 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.327374162 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.314969864 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.318279134 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.313681116 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.304970481 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.319407264 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.31299417 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.311964656 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.312795047 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.316916283 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.321383669 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.297587225 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342156249 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.306473796 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.30631086 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.309904952 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.324028039 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.297960667 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.310059359 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.333139405 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.359041148 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.312437285 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.298540773 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.314352303 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341681057 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.320527931 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.315462344 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.30739201 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.297825315 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.311086581 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.323749011 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.313761342 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.30837779 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342023833 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.313614241 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.308741587 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.310643 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.312506803 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338913108 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.431383767 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.322749086 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.342558643 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.31035643 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.315591919 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.341426559 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343221034 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.341938479 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.316530194 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344388742 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.32854806 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.310337241 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.322480492 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.321821236 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.314480008 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.31908405 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.307291455 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.346693856 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339934078 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.34069314 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.3347729 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.435472015 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.319333552 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.302041772 seconds)
done (took 218.543800514 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.370109822 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.306650421 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.395472643 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.307972599 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.407099984 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.40779103 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.305192131 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.306830131 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.305850976 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.686581212 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.305603679 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.305286624 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.306198054 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.305950387 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.390066986 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.308252998 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.307165431 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.650520317 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.309941327 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.380181895 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.30782355 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.306659087 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.309089342 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.689875137 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.306445768 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.304474267 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.379708711 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.309943809 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.656811319 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.303737097 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.307079887 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.694894664 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.39955462 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.32744609 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.318961243 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.31710581 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.409420457 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.326928937 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.391793818 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.391503242 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.39735251 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.33844245 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.303650984 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.309139501 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.311368471 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.310612562 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.307714603 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.337408168 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.308910944 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.307957447 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.65318713 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.321012548 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.318416826 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.308109251 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.30871756 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.330753119 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.309992264 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.311484996 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.401533102 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.311531266 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.373298484 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.691488487 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.689177165 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.312407776 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.310042121 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.308963392 seconds)
  done (took 102.845591476 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.377154698 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.386180117 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.421680708 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.328237688 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.362799769 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.427202484 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.328742343 seconds)
  done (took 10.857619803 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.317564806 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.312355437 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.361977398 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.362254264 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.312242783 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.525473337 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.314580712 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.324716377 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.310473842 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.3892075 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.314715609 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31379427 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.318829978 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.31076201 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.361270528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.323895361 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.426271921 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.314353313 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.313035802 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.464816162 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309737263 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.320986884 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.385983615 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.324338241 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.314920779 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.319858802 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.254317908 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313737873 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.311696311 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.314612694 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311084666 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.415462707 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.316074665 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.309816691 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3120467 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473561369 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.31288555 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.311357988 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.315439688 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.315344326 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.315717699 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.31526398 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.315581356 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.312854295 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.315616294 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.337437356 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.316433303 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.315412995 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.316145293 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.315951938 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.389209976 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.315180774 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.314749415 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.314323148 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.39262735 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3229728 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.31677359 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.314123975 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.318513257 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.313533799 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.467946597 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363270793 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.315383127 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.366109229 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.317403378 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.317083449 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.316329362 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.317808681 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409115257 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.317741363 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364065373 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.314522648 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.537511648 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.341368312 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.320166573 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.319897332 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.319482796 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.316970444 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.313617498 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.323630841 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.314154051 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.317776548 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.322468477 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.315721851 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.315941771 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.500552452 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473476455 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.316042423 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.330323474 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.325871233 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.316655873 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.393881535 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.319226407 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.315786986 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369663037 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.433038617 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.396808521 seconds)
  done (took 136.330607582 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.323556457 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.325533668 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.320952633 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.340327062 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.318213943 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.319761822 seconds)
  done (took 9.181796546 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.320705552 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.319685284 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.318151934 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.318902488 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.318674409 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.318994531 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.320490572 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319098841 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.321935157 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.320004366 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.321795074 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.322113006 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.321533464 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.320296266 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.320370316 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.320196562 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.319575243 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.318855019 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.321261349 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319246278 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.319841063 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.319403482 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.321832872 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.320117497 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.323483647 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.323019648 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328158278 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.321206519 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.321722059 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.328530202 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.338377442 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.321247588 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.322644301 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.326664752 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.324404793 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.322782091 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325623358 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.322932919 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.320394345 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.322058213 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.32490674 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.321499732 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.322280969 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.323856346 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.323628742 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.326256616 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.327022779 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331786876 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.324020115 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.325553757 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.323084436 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.323333752 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.322336851 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.323880218 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.324506752 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343999838 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.327392717 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.323157046 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.321225773 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.324430139 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.325250629 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.323377439 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.324937396 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.326475018 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.321776027 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.324125567 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.325151666 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.327251368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323054264 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.323222581 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.325425896 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.321146406 seconds)
  done (took 97.51181593 seconds)
done (took 357.950462743 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.743333951 seconds)
  done (took 3.982407273 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.399399581 seconds)
  done (took 3.638921508 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.842577485 seconds)
  done (took 22.091861696 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.362689238 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.330677646 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.318574455 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.32618129 seconds)
  done (took 10.580326375 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.539401073 seconds)
  done (took 3.779164484 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.319709315 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.345630877 seconds)
  done (took 5.908177551 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.600770692 seconds)
  done (took 3.841305999 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.669472229 seconds)
  done (took 3.919512116 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.34006906 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.333876188 seconds)
  done (took 5.92280773 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.305848543 seconds)
  done (took 3.546304744 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.031773267 seconds)
  done (took 16.273193285 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.331553075 seconds)
  done (took 3.5750921 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.354698689 seconds)
  done (took 3.595014268 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.785284717 seconds)
  done (took 6.02560854 seconds)
done (took 97.918436328 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.318765223 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.320225013 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.319076929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.319200722 seconds)
  done (took 10.5171875 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.35983054 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.360142148 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.361721872 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.369515273 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.36245993 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.358443388 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.352499341 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.352733422 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.372247762 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.363364266 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.361970953 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.367831038 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.361680864 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.353529629 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.363632015 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.361648144 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.372632596 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.371850172 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.354630337 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.36351571 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.32937651 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.372348768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.366084492 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.329240481 seconds)
  done (took 33.884011646 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.845219592 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.400231651 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.480322199 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.396543784 seconds)
  done (took 7.364791331 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.380843447 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.380457612 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.393573749 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.432002426 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.458474999 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.391129778 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.355355867 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.350077384 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.336295516 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.381512776 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.456334147 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.396973798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.466220982 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.32744622 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.515402746 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.329656681 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.328899328 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.380928615 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.434470287 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.457625584 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.329995554 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.380533099 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.385506795 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.397853103 seconds)
  done (took 34.691330967 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.329362622 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.347787857 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.329058434 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.327857165 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.337173124 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.329034782 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.328773456 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.330820971 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.32817412 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.334992832 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.328451248 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.341628007 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.328336342 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.330005892 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.335944424 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.332020701 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.336019213 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.328517883 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.330183964 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.336302827 seconds)
  done (took 27.894975567 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.32140737 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.323014893 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.673855701 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.579908152 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.322199589 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.322563095 seconds)
  done (took 13.788343495 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.399819087 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.552032754 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.332691784 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.678857124 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.756153221 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.332831596 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.333385475 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.57617097 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.884226245 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.864056214 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.396378749 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.400695429 seconds)
  done (took 19.751571414 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.32618063 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.334871723 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.340643476 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.34799174 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.384868748 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.35156676 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.339000891 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.326135141 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.392781455 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.404737073 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.351943414 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.387675362 seconds)
  done (took 21.537312033 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41454739 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327715304 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336331309 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410743414 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352040035 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538470771 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404675784 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059040873 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.349914624 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602445672 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330476917 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425654428 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.585012448 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331485635 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332269551 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.311878135 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560971937 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815708243 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336328691 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329242616 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378189304 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329439884 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3396976 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.550404515 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329456268 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330106104 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.591685089 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330503238 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608766087 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350592893 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341782614 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329911582 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604577807 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985786501 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446187683 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541984716 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345684536 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339068056 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.342025992 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.34485841 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350920143 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339992577 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341641548 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331205017 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331535124 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340421518 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052799211 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.355626153 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.329396016 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332067852 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584238326 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434599379 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.335577215 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330938573 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385765123 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339489173 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.33525349 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426312576 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905380829 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34771075 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349408836 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.338861469 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335606441 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339628505 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949007323 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.337916161 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.337463169 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33583554 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332092812 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341135431 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357739374 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332415665 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.358616602 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333346961 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032282939 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350419406 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342019528 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875433801 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335947788 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.340844183 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560600986 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332081007 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333690032 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.332719322 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334498365 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033734632 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349489005 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.321800292 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361650747 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060895419 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.567887044 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351807327 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358532958 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557751488 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.318898596 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335033473 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.334179428 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344173431 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356888974 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046170437 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353169653 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.339162029 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590538941 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.54748625 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336197696 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.329839101 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820763879 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36164228 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.357557992 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336254257 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569995429 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.913554502 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357933948 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336175587 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375507979 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33570622 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074444065 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35213345 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.443267646 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336529512 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613644374 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.118614155 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344892155 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403819873 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341606395 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337589864 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350050991 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344957076 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337768908 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.541618147 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356264055 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.370252489 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.33724855 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337558516 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.335170543 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344362749 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.362386821 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.561261836 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346648615 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620635947 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337349592 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339151202 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336957662 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.561641373 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.337378681 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.676077876 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598977798 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33893562 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344681091 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35668773 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358060688 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438147758 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3607802 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.348887891 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602486189 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.343151771 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.343801472 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339466369 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36275483 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346117942 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.345410102 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339126568 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923572217 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326567213 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341159619 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227492623 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.353129097 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407759059 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345155154 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554304024 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.349032655 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348012487 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.363014663 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.338028376 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571378639 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349542017 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.352049472 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427637449 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.815764882 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935179647 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360857379 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.340372839 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.337835811 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.337340584 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339094265 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33992225 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342560097 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551885163 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356096053 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356157587 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.928219631 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350721999 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355040314 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.354661165 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353486787 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.348258036 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342126008 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.339489979 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347603104 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350856361 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.361054433 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485473758 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.356988461 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341443694 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.859145315 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347688837 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34360987 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34234129 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376073173 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355691251 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160634149 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602748998 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354646683 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601458498 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366122629 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.366106663 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.341507055 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356163688 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349773617 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.360327106 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369369974 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.353016487 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356239272 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353270318 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908639497 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06576089 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883510943 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353395308 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.352684882 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347962634 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.059431394 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364307718 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344750128 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577026085 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07657821 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370712925 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825003756 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.363843823 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102634563 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607540516 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580787704 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345485666 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.368871071 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610338981 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565704338 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379385801 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352052738 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353245372 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.332278157 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902147611 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364274653 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430836612 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063533489 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379583516 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354894404 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.385205866 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.368322481 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755537934 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367182047 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345843072 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349721504 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353832811 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163099916 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34921804 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346856893 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972489088 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366170316 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.832579922 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364634453 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.561925726 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.359263 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.351758205 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.351882415 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.36463466 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.609423794 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602546669 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356412231 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362255338 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886804395 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.208357768 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.352874765 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347994437 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08674787 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370851555 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637860235 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.36814339 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.354714131 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357304561 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347820365 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348742165 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.345525515 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348575754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323616974 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836230255 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.360158097 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354075007 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362018486 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240118897 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.604438542 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.362947124 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927725873 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581139135 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357898477 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37785017 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.353771168 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349269238 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.341910837 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350927797 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586589132 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39243336 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.577199571 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364997019 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.339213546 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422479441 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584429827 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349345076 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349819356 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605820292 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.34851644 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.352662417 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078121313 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383890236 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350541362 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376225371 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353340744 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375185168 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422304187 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567969962 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.363378802 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.362840893 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760052079 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37040376 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360733258 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.366727473 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44639827 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351404493 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.359173965 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.129456708 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93614701 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087585848 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.944493353 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609616544 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35691052 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355311351 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35204566 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501681919 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351491212 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62827567 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351588631 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.369460146 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376472237 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352303352 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383011664 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571045554 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629499679 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352014233 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367650377 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359793939 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.353869904 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364198917 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.56355046 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844382002 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90270827 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355226045 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364649928 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078538561 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647220324 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352953746 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354958018 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354462126 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.375681982 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373775743 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.384495374 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363951481 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509079542 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60867289 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028417705 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.383703215 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.38243462 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.128638459 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355782806 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.616817959 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35288698 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579991761 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941567913 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.055467673 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625943256 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425518422 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572284509 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.355601541 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504010296 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.364613582 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364974895 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356311466 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200544022 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.35299657 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.36509615 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948953103 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622218359 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.36160866 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.364819033 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388155305 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.366491322 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579741371 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06848826 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58917771 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366767103 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35819174 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357063677 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94773635 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617389855 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359316743 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.360990234 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59691527 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359196699 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382708526 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.809694898 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.354655178 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912694455 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.3302278 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37914933 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358390186 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066114095 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956050974 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.361721722 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861088523 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367109003 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3579861 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641962084 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.364217158 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35995173 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645137403 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.36239329 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369634689 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585033482 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.944316851 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117917347 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.390586217 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377184701 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.368649861 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359386121 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387769354 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369564653 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369257432 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.785737589 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380288673 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359546638 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371090156 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.366622751 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371057308 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.365594426 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360387993 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.366070349 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.357094808 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.3551705 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370931277 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464602878 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923879436 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382095198 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.035624515 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.689907284 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616237277 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370534173 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.355718857 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.365163234 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360325296 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361860551 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360454748 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36481087 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913498258 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.374222598 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.379629205 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365191363 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.578850072 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573920365 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367172181 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588068903 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371822999 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385078273 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.348705568 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362108083 seconds)
  done (took 961.03600242 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.370542261 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.376264905 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.369396825 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.394161879 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.38804526 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.418037955 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.380864335 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391392627 seconds)
  done (took 20.367879586 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.363318088 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.38024009 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.362301134 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.379860289 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.362145984 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.835150168 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.378221281 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.375387137 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.369123146 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.363272467 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.366072699 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.031421312 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.383427381 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.356528365 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.365824265 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.374479304 seconds)
  done (took 32.328577499 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.296710226 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.488731866 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.221959885 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.392723465 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.40090278 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.358738047 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.576995811 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.374411014 seconds)
  done (took 26.387975362 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.369997472 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.368258956 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.3692431 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.369378149 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.369125267 seconds)
  done (took 8.122943171 seconds)
done (took 1218.915843816 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.362545911 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.364914198 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.36303205 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.366326845 seconds)
  done (took 6.732269165 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.347901131 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.34586327 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.345890812 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.36016239 seconds)
  done (took 9.676695897 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.056383333 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.990408084 seconds)
  done (took 5.323309028 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.35990302 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.121483111 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.094284937 seconds)
  done (took 7.852518623 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.656627861 seconds)
  done (took 2.931523008 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.768820289 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.742087829 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.553078514 seconds)
  done (took 6.340284731 seconds)
done (took 40.132264584 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.360373588 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.703602323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.515154783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.357027465 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.532298424 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51396935 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.096773011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.364683039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.371000956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.368294935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.36249123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.517766206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.077130509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.703274752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.077217643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.609797072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.517786962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.370756474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.357798581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.358212546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.11412991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.358575529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.37689628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.358934742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.54508942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.504942244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.367424032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.611657287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.358422351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.369607717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.514157697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.359133374 seconds)
  done (took 82.250771441 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.360908728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.370866313 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.371718842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.368059432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.366324379 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.368834458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.361313614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.358680034 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.358567704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367155226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.35829434 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.360506286 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36289866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.373894461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.360349799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.370487609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.360261064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.368578343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.373626747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.359419206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.360684342 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.368353085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.36288288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360267298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.367738266 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.359828515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379510017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.367376452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360466905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.361838701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.362050029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.377248852 seconds)
  done (took 76.967101686 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.371425215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.373290446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.361203868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361673221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.378374142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.362565118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.361681328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.374200345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364302841 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.362115811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.36078038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.379690648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.362227288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.361092417 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.363869052 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.362343382 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.36240759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.362693232 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.382440449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.362290948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.381678886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362670002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.364381051 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362771796 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.366301927 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364245295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361828947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.362825567 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.370645323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.367725237 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.371862724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.370593133 seconds)
  done (took 77.018834026 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.557691322 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.370089824 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.370259366 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.323349351 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.371603784 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.370505517 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.362921157 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.567681085 seconds)
  done (took 14.576154757 seconds)
done (took 252.08793762 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.369425735 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.371853094 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.574992232 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.392009995 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.363736538 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.400620575 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.391226443 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.58737681 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.361085967 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.612175216 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.38240867 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.389112636 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.3659531 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.389970099 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.642267225 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.517500265 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.249122265 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.360702674 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.703378214 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.383471 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.640411507 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.366297049 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.668232538 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.346638943 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.399819058 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.373291523 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.394871255 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.240605968 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.408018284 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.713495391 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.376589759 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.355303996 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.478469148 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.470945297 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.587573192 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.525737504 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.374277017 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.460512977 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.591869906 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.368739153 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.373721172 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.153271379 seconds)
  done (took 82.760313102 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.373080163 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.490789367 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.376238504 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.373528946 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.375154494 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.497872896 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.473075746 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.374975376 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.374063031 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.372743147 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.372577611 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.375039472 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.375196743 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.375465735 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.379104082 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.378834077 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.378708659 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.382293124 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.381632744 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.423139673 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.497989021 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.398232678 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.368905997 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.373241428 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.478002244 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.512080997 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.373124858 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.369375414 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.419663781 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.37639972 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.377776447 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.424289611 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.376984629 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.377906757 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.494858873 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.47894039 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.399133159 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.374901367 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.493429557 seconds)
  done (took 56.154122925 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.37704694 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.623987974 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.797593112 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.383554934 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.377424529 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.381831505 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.455819025 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.380786923 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.380883551 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.380963324 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.547580886 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.380301038 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410687286 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.824005995 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.380883218 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.378413658 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377830809 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.37794335 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.638806474 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.386981311 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.47676867 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.379691712 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.454679573 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.387880914 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.400725046 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.379889859 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.383211875 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.96774384 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.380389273 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.547338895 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.157572868 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.460683856 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.911020929 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.806772532 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.164700807 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.389244353 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378902832 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.55627377 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.380093293 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.379655206 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.455800575 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.387781423 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.80446685 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.07045239 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.397638377 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.379077102 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.989332964 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.55293791 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.620235978 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.398012466 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.830957194 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.391044662 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.382401781 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.381749339 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.618957054 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.396808016 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.381511489 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.995468643 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.404329773 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.458710099 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.389453616 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.379680896 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.646551749 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.382293944 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.634765462 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.383198148 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.388850667 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.401734514 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.808924545 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.384120508 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.082572957 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.400549159 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.380869989 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.550081224 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.631829603 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.021687255 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.384374141 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.647521449 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.921952393 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.458349507 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.393985639 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.956743429 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.463721064 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.393062699 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.384551742 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.383806735 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381188632 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.43413425 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.456977495 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.028233849 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.073181752 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.022127537 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.478416181 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.402857291 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.383350472 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.998805509 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.400492575 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.383397514 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.802624938 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.085856118 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.401617651 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390398735 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.083256131 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.4039057 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.462465782 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.390277834 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.81481535 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.386282263 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.43378106 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.385264087 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.391223758 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.407531791 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.462554165 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.389002739 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.385738588 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.053772541 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.58014035 seconds)
  done (took 182.584619859 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.39267638 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.377108872 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.388834788 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.381058098 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.375875897 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.386157874 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.377564967 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.379818952 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.384096638 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.377480025 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.378584817 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.379038525 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.380809058 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.386875479 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.389855066 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.385208045 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.378496525 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.37999733 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.38026282 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.378379623 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.378536452 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.40103755 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.379432685 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.379494412 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.380283683 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.380689542 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.386680872 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.382985757 seconds)
  done (took 64.002730477 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.389109115 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.938549418 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.387214862 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.516886264 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.407103829 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.384343889 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.513780311 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.444539159 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.388479705 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.384849489 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384546832 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.682624613 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.388032573 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.894099328 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.582270277 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.516071719 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.891398291 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.404403383 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.386902322 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.385933044 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.517680979 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.399766706 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.685629692 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.954902811 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.397775749 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.946956551 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.386793841 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.391009417 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.389501216 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.949762953 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.394910713 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.690544242 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.473465512 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.447870791 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.949221398 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.90392942 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.922281877 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.542514958 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.39144339 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.387586916 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.38743618 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.378870228 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.948385233 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.396598885 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.389366167 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.944844984 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.415555149 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.391070575 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.394463559 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.387701724 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.447823283 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.448249081 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.692508054 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.959585674 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.473705675 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.401623361 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.517312775 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.783099247 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.392907393 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.896953766 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.403276854 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.953081883 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.413600082 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.380782594 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.389734871 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.395623431 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.537807138 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.520439186 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.900265164 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.415158584 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.899315774 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.563003581 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.389681654 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.389442705 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.392682847 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.955085538 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.90491602 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.554667572 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.523520839 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.582107781 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.391268539 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.391281244 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.382092348 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.466839597 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.39114277 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.956731051 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.9155895 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.409858897 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.393144044 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.39336731 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.393227862 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.565854968 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.979696986 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.472938749 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.896850031 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.720904647 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.702485328 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.401628802 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.450205564 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.409792067 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.695180493 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.39637983 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.449326525 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.864095831 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.696902944 seconds)
  done (took 165.395249431 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.631212966 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.416399916 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.493404519 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.544384393 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.994697295 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.980515129 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.386947139 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.516469904 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.502178932 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.650683539 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.390989198 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.491177226 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.603008729 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.467555364 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.120203002 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.460018865 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.489795646 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.543937628 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.533966384 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.388492671 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.046874856 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.688050332 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.574987678 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.410976778 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.521039924 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.182860287 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.973019161 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.925838899 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.573963414 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.40464702 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.932908839 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.39138774 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.367711334 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.062143463 seconds)
  done (took 64.967544592 seconds)
done (took 617.146878717 seconds)
SAVING RESULT...
DONE!
