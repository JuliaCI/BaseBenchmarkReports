cset: moving following pidspec: 32513
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.411601257 seconds)
loading group "string"... done (took 0.509024837 seconds)
loading group "linalg"... done (took 8.665308016 seconds)
loading group "parallel"... done (took 0.174352223 seconds)
loading group "find"... done (took 1.306937258 seconds)
loading group "tuple"... done (took 2.078504645 seconds)
loading group "dates"... done (took 1.340668577 seconds)
loading group "micro"... done (took 0.212230589 seconds)
loading group "io"... done (took 0.582564242 seconds)
loading group "scalar"... done (took 41.038188377 seconds)
loading group "sparse"... done (took 12.942653474 seconds)
loading group "broadcast"... done (took 1.07393508 seconds)
loading group "union"... done (took 14.824630448 seconds)
loading group "simd"... done (took 4.902272377 seconds)
loading group "random"... done (took 9.990349989 seconds)
loading group "problem"... done (took 2.079771703 seconds)
loading group "array"... done (took 23.518943409 seconds)
loading group "misc"... done (took 1.099618452 seconds)
loading group "sort"... done (took 3.535888948 seconds)
loading group "collection"... done (took 21.065071029 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.592680789 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134751377 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14697321 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175879915 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206064093 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138478845 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15784327 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.460878199 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.018207153 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.229297046 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.124624975 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.537606168 seconds)
done (took 5.686624414 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253144085 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.074168244 seconds)
    (2/2) benchmarking "String"...
    done (took 0.127662321 seconds)
  done (took 0.908096485 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073392842 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.175209648 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09356149 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109637815 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110107153 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11069065 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093488591 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109138083 seconds)
  done (took 1.511069225 seconds)
done (took 3.464112018 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.775888878 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.819870671 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.517850538 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.122967135 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157906047 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.130920087 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.311962971 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.157104343 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.111951454 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.11701563 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17389675 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.362432756 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.432734563 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.954063761 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092853 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.12848382 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079860708 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700508575 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077832347 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13113382 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.510358016 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112285058 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118721188 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12480901 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.215779729 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128803239 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.188030178 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099701445 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.69686543 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101657023 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180160765 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096389636 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161111784 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.225525451 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076574262 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106453501 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683320092 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185806865 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107941989 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092118724 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682140152 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075860189 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194554881 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106029496 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109816998 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.199156508 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113296786 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075138592 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098952051 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086502388 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168953406 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.458823658 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10352724 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141931045 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.104832524 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.68872274 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092317684 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154352057 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123442994 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108659392 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095320465 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.115583122 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.164572918 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.119195791 seconds)
  done (took 19.704024873 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116833787 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138219756 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092932126 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137868023 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138038059 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095183678 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081874806 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09283335 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108577292 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180337393 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135025543 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143157333 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088960681 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07824401 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117710745 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248132959 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103576293 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118030566 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079625446 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104212859 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136686082 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095169582 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107692845 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09262064 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168228049 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216212523 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106838992 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122402419 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092364576 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098681352 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140524707 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158980247 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073885048 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091899027 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177981065 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119309781 seconds)
  done (took 5.12496866 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199195089 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119123303 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19268952 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.176850506 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149089333 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165693791 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117343835 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.264251847 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.179027438 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160712829 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160566294 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128108511 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116194208 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07712767 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095123011 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077745573 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.796832 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.123470644 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148564776 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162219777 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104931785 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104116377 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09851498 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082853141 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09686102 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083704073 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.130747823 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.337272353 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173791725 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10106483 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.227418666 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12209488 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107564435 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131088698 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19801949 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127115234 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119431575 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10278675 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078528764 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.218491038 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089636337 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097226685 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07567904 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121572073 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130568666 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117831744 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098764202 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107443102 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.229544841 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099141211 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114930486 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.048862249 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19686715 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093537868 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095851187 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.338178378 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116403362 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083629159 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097419939 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078857726 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28986112 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132053001 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079062172 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076449544 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101907734 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07705554 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405459664 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087144877 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.985325206 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094491055 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156329992 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098271008 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086587307 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101690863 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099676644 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10018324 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094706952 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079277371 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077502011 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095223877 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081240812 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115492441 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099762664 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076164168 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16089667 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117529551 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098252269 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124304084 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100149447 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078320404 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126003449 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079322198 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097968344 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.12302375 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10344016 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112786142 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097600198 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125452256 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096515767 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.183123385 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078368705 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122916872 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098202415 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111806011 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117226444 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095252584 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082484829 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09483688 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078143934 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157977744 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079589567 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076769043 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09905649 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108552511 seconds)
  done (took 23.562484046 seconds)
done (took 49.09969351 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.431786809 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.1098851 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110375753 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110506109 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107821993 seconds)
  done (took 1.656178179 seconds)
done (took 2.415233224 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.33093037 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202062941 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085761052 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194455941 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086257373 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200391017 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165574759 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098957258 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210801086 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080614335 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189431035 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08123286 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103061776 seconds)
  done (took 2.81603393 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091120088 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115412603 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079247586 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105456001 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07356664 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088208745 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106466636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.133718219 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088949708 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082221162 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090961048 seconds)
  done (took 1.808520615 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090000424 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112939242 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078756946 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087953779 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090872361 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087403647 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105426484 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099399837 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107019611 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082625208 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090227775 seconds)
  done (took 1.789530817 seconds)
done (took 7.161926593 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.147748208 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.67693275 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098495956 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.19122953 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.33726965 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216167227 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.624390831 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115192751 seconds)
  done (took 16.351232995 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.126824681 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099391953 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.078284146 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097268059 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080750968 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097944901 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080089238 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.096595182 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.077678049 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093294002 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078572397 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094240219 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.078230935 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095484051 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081151648 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095249661 seconds)
  done (took 2.274513629 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114618655 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113556211 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101227991 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087291052 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10034593 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100855586 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.083948036 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100070867 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081227394 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098718621 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087886536 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103463481 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086252375 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096916044 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101367365 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.088668269 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097750181 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084947634 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101458577 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08465145 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104085972 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099706085 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085913842 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104320559 seconds)
  done (took 3.1777805 seconds)
done (took 22.561635489 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164929248 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08253404 seconds)
  done (took 1.009943711 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101050627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117618415 seconds)
  done (took 0.98631431 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106231859 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095644549 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134450186 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114155109 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079435352 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079420865 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130562172 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096521847 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079247643 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096552557 seconds)
  done (took 1.780662283 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083337707 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100689745 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087915709 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116630363 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108975031 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081076301 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101928292 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083446548 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101669173 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077605855 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104510567 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099399614 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103417004 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116360285 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084405817 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102153848 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10642295 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083329739 seconds)
  done (took 2.509380796 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078445013 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08082116 seconds)
  done (took 0.929590662 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081046158 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09354996 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081223541 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097358147 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077865837 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093451138 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077494094 seconds)
  done (took 1.371933275 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486689855 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.185881439 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330015719 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.113033618 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.13164066 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.365388521 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.13335224 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.092695079 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111251517 seconds)
  done (took 2.761894475 seconds)
done (took 12.11602063 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090430533 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.133241821 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.606603665 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113756942 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.075932985 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157149133 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.262139884 seconds)
done (took 2.20917536 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34334583 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122622115 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087167379 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076363473 seconds)
  done (took 1.397746366 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076831137 seconds)
    (2/2) benchmarking "read"...
    done (took 0.084262972 seconds)
  done (took 0.934795551 seconds)
done (took 3.10742819 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075658433 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.124859441 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075017248 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.092815103 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075187796 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073768191 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092079054 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076236794 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094950382 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07559381 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.093201322 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.074986418 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075801821 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090340582 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073902758 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092818367 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076574316 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091102398 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073504326 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073770337 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092854448 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073771899 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091231857 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07399466 seconds)
  done (took 2.815728266 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102734217 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095249498 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08202366 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100310503 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081476784 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099587076 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099627027 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07731118 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099670491 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079240765 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097766708 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081561305 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095564341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08035201 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096244601 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.080700352 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099081293 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077573287 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095837102 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.080641167 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098905387 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077991417 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098908511 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099644242 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081937622 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097903034 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.079782818 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094094224 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083232891 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097758519 seconds)
  done (took 3.49006829 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084405673 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073778709 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092170983 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087070885 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090599505 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079081886 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091805749 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077657509 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096317901 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07386962 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096600936 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.074121328 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078167266 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096327968 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079110994 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098464997 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092538025 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095009541 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077931556 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09645471 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.0802073 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095255487 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077241898 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074146795 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091743493 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074466665 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092348245 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.074479762 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093034334 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.074777428 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097991868 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080715484 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073835448 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10461364 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081408456 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090851392 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083133943 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091455639 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079319989 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091596552 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074300384 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091741459 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077170784 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086144732 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094849441 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076448793 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094062917 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079564841 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09583513 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080909781 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.091230139 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077370925 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079550183 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096863585 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079881229 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090732181 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.075068625 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.091301578 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.078712772 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091767789 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.074112328 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07413374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098118261 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07536786 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114830523 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103084829 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076760353 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080123903 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095826793 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082874938 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096885634 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093246352 seconds)
  done (took 6.982650364 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079727634 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103451203 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076933861 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093849969 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072845696 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075628736 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099346074 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075369898 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094296663 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093451313 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092740077 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076371621 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094463272 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079288069 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09253766 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077221135 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103134014 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074166281 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092219938 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078609293 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093544215 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082260288 seconds)
  done (took 2.686492358 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219856952 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103741603 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140181922 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113312408 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095083143 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111352646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081926608 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102004351 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100474284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085460603 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103320552 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08245019 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11280094 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10274163 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085595753 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104427341 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083730878 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104160619 seconds)
  done (took 2.719964604 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09113727 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095183316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102638691 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096087786 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078140395 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098363159 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084914415 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110704217 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079750639 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096351119 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.106748708 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080279012 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09735648 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077889263 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097534192 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077942326 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097611586 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077179587 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106706575 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085304885 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102165122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088740138 seconds)
  done (took 2.815220427 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0953735 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097232861 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099370135 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099382218 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076967057 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09639888 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085532947 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095341271 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08763108 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098043615 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078348966 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096073788 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085880694 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096025985 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104791668 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078484584 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09749119 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078331156 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07965571 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094940617 seconds)
  done (took 2.610324197 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119379451 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110193224 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092072669 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122338117 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111065904 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095366229 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121756232 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092859645 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110720194 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123343503 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092846157 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11023977 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1045267 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118928547 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11028896 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105040906 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122240974 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121149609 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093086241 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110316632 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123827929 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092605677 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121742276 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092864739 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110300501 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092204896 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110797794 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118254377 seconds)
  done (took 3.841914329 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077672793 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077064411 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093518176 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07455571 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092888165 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.074673969 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074976922 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093132216 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077110228 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092732213 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077763951 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094399229 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077100654 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07697571 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095309318 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077317393 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09506358 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075651957 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092424384 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075226705 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07696838 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095360153 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.077468307 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093160571 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07515843 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095455132 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075422134 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074635407 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095183839 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076472611 seconds)
  done (took 3.29188689 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.086559744 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106754242 seconds)
  done (took 0.988840508 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075694425 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11267304 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075396099 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099236389 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084169338 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096593943 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088176324 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10166677 seconds)
  done (took 1.527270125 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.102749617 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116678725 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085283101 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108761438 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097585627 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.115106482 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1616495 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084642339 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10460309 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080278746 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116408664 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079162132 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10506568 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084324498 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105937939 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094062806 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097162232 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088599379 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105045343 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080853909 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102758327 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113425612 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090797174 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104664673 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082318754 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109105246 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093334562 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.1087641 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084183429 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11029562 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08717544 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090296458 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083976099 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102730708 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079396454 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115157007 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115314201 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084004354 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107567515 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085643132 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107111349 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077274295 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108143926 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086423345 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11010535 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08547736 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103251596 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07725841 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09784044 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082816878 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095913457 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083084454 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07342573 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107410206 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.1064565 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098095945 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099484764 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084531377 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101975109 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083119558 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104866465 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083936438 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107542291 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082736103 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107647124 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088815533 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10593167 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078123963 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091948773 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080601728 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106909027 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104483596 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109190545 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103625396 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086298269 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079612534 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103253721 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103618455 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088064067 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108912077 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084540218 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105243998 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090950029 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101659393 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083433386 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104519961 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081282946 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100952297 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079868709 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118665097 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081877737 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098113305 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080228524 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108871125 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0841189 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101062419 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080269145 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106957842 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072978241 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103097364 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085286337 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105048197 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091528262 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103265525 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086041676 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106696331 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090326687 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102722062 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083160605 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093407679 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085765209 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099766048 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088601103 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090848698 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085402128 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101647537 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085534863 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108294505 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081945861 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102659332 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090422771 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109412387 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081681801 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094221867 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084738301 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102406755 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090841364 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110318666 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082899632 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096677438 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078016795 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106287147 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083932947 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104124134 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085179793 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103452357 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073331692 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098645445 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084964241 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108891203 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08288558 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104846609 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107742583 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087339365 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082488809 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108957709 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101420675 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079934973 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107305443 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084287855 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095491546 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090156925 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101204024 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082559853 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103312854 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089801217 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10195782 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085355976 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100136891 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085377803 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104444391 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079394913 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103182823 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08246598 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11068125 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084526622 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095693284 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076300461 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086098328 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099403112 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082638608 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097922324 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084771018 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104022294 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080744113 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101796789 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083691516 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113688443 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093341236 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104738856 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106014025 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091743024 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102688663 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087168392 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10271918 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086912379 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105411014 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089199094 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105982441 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086322658 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10296141 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076287818 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105354724 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090602792 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097870446 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081082093 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079042104 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103681901 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110496339 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084609069 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085013845 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100498434 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086762317 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109843762 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10150016 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084462235 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078836536 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103135255 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.088672506 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104241918 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086183471 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110410041 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104069769 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078453479 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108767703 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082078869 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107296431 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078668128 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080832703 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099514706 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086521604 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100579619 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084012832 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092303066 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089624579 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108818481 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085143642 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098033235 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084663744 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112240016 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082570376 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108755089 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084517905 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106620774 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117242521 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080981155 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102730073 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.101490655 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103349965 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075170689 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106094655 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082221883 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097589639 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08324045 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080946009 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104516606 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087295097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106019097 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072697264 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102108547 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08301872 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098865163 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078793572 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108631629 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086063852 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103262957 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112176863 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087296634 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104134818 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086573645 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103155926 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086023441 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105706412 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086439451 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105222243 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082841212 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080000888 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104780067 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.079613245 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100108431 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.083460444 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102864723 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085580868 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105974547 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084271456 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108816071 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103434889 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08702121 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122425602 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08227146 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098952268 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086565601 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106970782 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084563452 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103540842 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079308742 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108778847 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08512115 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108998598 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084495457 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095098467 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085536095 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104062907 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086692316 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104928203 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087229498 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102341959 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085046647 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103441155 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094873836 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09987038 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092092006 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106063201 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087472554 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104537314 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086017 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10289311 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079951377 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103580995 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086474014 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105256843 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083587877 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10619984 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085919708 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103038863 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083226017 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105454524 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08551972 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105329937 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073946321 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099111683 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080657445 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103741423 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089668005 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105204764 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083193125 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102869174 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087007602 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10218869 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077309882 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107128581 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087990465 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105439491 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094734882 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099289372 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08491813 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114386758 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.074424826 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101237583 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080809096 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100430109 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091004825 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105259701 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090938708 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104748912 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081660869 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09621404 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087561307 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10259018 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074278269 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099202172 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088612193 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101805979 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083535591 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085792833 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107666317 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105270435 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089430713 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10172158 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085615972 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10519474 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.077161461 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08163338 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100121425 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085347791 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106247517 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081140531 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097191686 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084745599 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103453996 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086099282 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103377756 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084061298 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10951419 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084872241 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104819686 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09203303 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094087707 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085718497 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104012096 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085099908 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10002331 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086797938 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106302105 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087383604 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10971353 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085679836 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106845296 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085851502 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101128401 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085397216 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104780044 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086945324 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100009143 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08796075 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110616858 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081909404 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104658877 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086774371 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101325356 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087796469 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106434804 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086246569 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107437784 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086301941 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104592751 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08929962 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104329969 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087128127 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106962796 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08456257 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108821108 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080710418 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111850296 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086768074 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105930028 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083675491 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100654814 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084967164 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103510353 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084160296 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.11100274 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087558303 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100638744 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081676557 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100598696 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085759482 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110324609 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092056029 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104480522 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086894022 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098542033 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077606233 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106419995 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083295982 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103674211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089315354 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10977237 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086987912 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101891155 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084356344 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10964228 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090365969 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106999899 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082194904 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107383385 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087095883 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10478128 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084252588 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104868573 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088217848 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107167856 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08524125 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.099968794 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094814826 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.110840166 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08756793 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103806545 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08730858 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10580676 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078644114 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107283886 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085756329 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108388169 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085552182 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105551462 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115064838 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082066675 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10356352 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092097818 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103960089 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092387739 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.0982536 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087134351 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106793197 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088542792 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098790458 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082409658 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100696876 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087400348 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080332033 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099873408 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116300472 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091047031 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105502901 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084787909 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102450919 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080163271 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078845235 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102103749 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087674227 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104743982 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113399678 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082432698 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080899245 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099821496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08654794 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106494136 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088069144 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097710596 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080887606 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102214824 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086919042 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112384834 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084248854 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105266226 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08746322 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105405857 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082205446 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111361553 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077743964 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107092582 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097677411 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10736007 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089028056 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108719504 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110948421 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087902725 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079352318 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108628315 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105036608 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087646878 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106287643 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088566126 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121452962 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086987085 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100861128 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084671843 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105193492 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083090424 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112997827 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089214343 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10715915 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088534261 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104122289 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08849309 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112344186 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089411072 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108472459 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08672414 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10455286 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08580042 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102984891 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083878025 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107430543 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088391366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104589932 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.089012785 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101390562 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097890674 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112271968 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08771176 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097809038 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081755092 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101226948 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080073136 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107347297 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080165153 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102789306 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084000493 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08341506 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109801442 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107233259 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086800073 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107248388 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086805852 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074824472 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110542405 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086177909 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109144682 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077423826 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105273323 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084041508 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109737581 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11072438 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085143456 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105417538 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085751902 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108082239 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080935389 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108568298 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086014881 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084141993 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102510231 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086060067 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107997559 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086892924 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107749234 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087931588 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107021617 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089128329 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109922016 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078351419 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09835676 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089802837 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102981571 seconds)
  done (took 57.513779913 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147893048 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086894926 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076378258 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098204465 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123696863 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081241117 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096081469 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082049348 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100683562 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090517183 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096225183 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077652615 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119285064 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125371086 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123028474 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092044401 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097356836 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08154972 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096812112 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081861075 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118468212 seconds)
  done (took 2.93503185 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102582432 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116172617 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114267008 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100171574 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108971219 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115725371 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093569008 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116007516 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11978694 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089810456 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120323203 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116208595 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089676041 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11152 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108453899 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092549661 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118962192 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108151086 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097226627 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113624585 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113130271 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092958315 seconds)
  done (took 3.200962481 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090821808 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084496316 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.1109241 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.07831468 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105648723 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.078988315 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111183355 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.082096273 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111141039 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.085971496 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104102799 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086090984 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110578804 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.0794661 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10351417 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082253748 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111163544 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085777811 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107806726 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080354715 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126091324 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.079506841 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100728789 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083443217 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114307008 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088254162 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.10518624 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086407125 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10304936 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085836747 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100804328 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088043392 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108141131 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084050922 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.102222651 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086351162 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08474366 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100053078 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.081414147 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109687669 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.080014119 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.106454421 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09327821 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.103300753 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.082035401 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108420083 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085645901 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099678895 seconds)
  done (took 5.413923715 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.117464896 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155423911 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084140284 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145869055 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121723257 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09502747 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107610949 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144578081 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078677872 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.105967634 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124499541 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.098956195 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107033191 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.110926464 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09012534 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105430848 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087115064 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100778777 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091424158 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105340716 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111357346 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088984022 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120170167 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118002831 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092064295 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10482953 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081783682 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111827149 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117942837 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091975076 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111694855 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092682798 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122670843 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107176892 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084941672 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109370904 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123941504 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087274201 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10932656 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080695812 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108977944 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092232807 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109717695 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123819273 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087147723 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108329888 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085722225 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099528037 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117766061 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08937047 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115423233 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120713162 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091128392 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10618797 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091550195 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121142557 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105716551 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084214349 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110547364 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096323404 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101382559 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090090041 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120123911 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108835768 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095307924 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120284926 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107850474 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089749359 seconds)
  done (took 8.141621118 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114323651 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112040377 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124235555 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103048651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116790607 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.09048851 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112521761 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11113208 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091803999 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118714228 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090265097 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160291959 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109150876 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118322433 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090903735 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111811714 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09157158 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112127174 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090941305 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112488488 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111327013 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103895603 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111997476 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122989046 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125407822 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088764439 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11107552 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091509399 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123558299 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11181802 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104330325 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112049957 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111143013 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102964939 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124632243 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111039926 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085950473 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112119577 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091686037 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112654579 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087342821 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124500322 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111344934 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088745848 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112406798 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091377654 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123948973 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124705036 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117517181 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099469934 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111471906 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123222191 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091729888 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112531676 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123492189 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132944587 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103470123 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12358056 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111920273 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123800616 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103647256 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131958849 seconds)
  done (took 7.685280853 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083235631 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082127742 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100873083 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.080182904 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102772654 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080560444 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081154972 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104708814 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082279628 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.102748201 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082787698 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100097326 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081171981 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081393036 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101144362 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079787288 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100323033 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080735918 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10272888 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081060124 seconds)
  done (took 2.647323644 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091180302 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128685974 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083653346 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111498339 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08599022 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112146389 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084888654 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106642213 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085354707 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106912913 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117139694 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097174708 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104087793 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091291035 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117350491 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111159373 seconds)
  done (took 2.496081872 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104453085 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125254568 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12888489 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088834454 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.101739122 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.091283177 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106339576 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.079274637 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.078627347 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.112690376 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109604313 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089993605 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10707114 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082834884 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.083248147 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.110892112 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.078257775 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.108578367 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085395026 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130225394 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108140826 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086707876 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107696878 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085534684 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106427201 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08897756 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111108224 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080492167 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10304921 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086170094 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105936076 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090696458 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101168772 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087192627 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10223445 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08040358 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.1065005 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086808856 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110537866 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085765071 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102565539 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085505533 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107645815 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088985049 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100217075 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.086830207 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099766508 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089480707 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106892097 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086276956 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107127106 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091481503 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111673346 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.094084192 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114901484 seconds)
  done (took 6.258469636 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099181337 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107706533 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088581579 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10229402 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087278495 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112241648 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087758552 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106611903 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085523607 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100732575 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086922867 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108442525 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086369836 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108864682 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0883064 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107644616 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078385471 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105696125 seconds)
  done (took 2.612045694 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088747552 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082296403 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111908021 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082966958 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10511601 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085897628 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101735169 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081675781 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102252713 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083419507 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1040103 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086166564 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101687726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085718543 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104207995 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084088679 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106225032 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082699436 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082988819 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100767753 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085413984 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103326115 seconds)
  done (took 2.917335771 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101482443 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.136273577 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.097582806 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.147799189 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109186034 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088246626 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119213404 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088683368 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127924758 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.087573196 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.10902704 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086969433 seconds)
  done (took 2.165012021 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108696793 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142751742 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085048444 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107349708 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119141974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089717384 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109371014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088666885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124469598 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123180778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088253981 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124773759 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123186856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121421261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097340332 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118585788 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109216889 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089248682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106263564 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111770376 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111191984 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123623645 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088160895 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11038252 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110173897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100887291 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123576319 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122721681 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08855634 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123849464 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118980481 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088442236 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123873149 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12412044 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085490478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123126896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10901279 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133774832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097491654 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122752331 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106479673 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097808086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124176235 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116742081 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102920954 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110703489 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117343902 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089445377 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110626328 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139875212 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118648324 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101618279 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12002949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123683752 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103163926 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139032743 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125418024 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12203684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118777281 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122892273 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100781844 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120205076 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121413474 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123246762 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098613191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122810115 seconds)
  done (took 8.288093042 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124595671 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107402317 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088942025 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123183503 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122431818 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10979012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089543553 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110492714 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089969913 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107249559 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157431684 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089084096 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122870937 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122524757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087888377 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11117828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110085342 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100718531 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106935158 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140020365 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087768834 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123481952 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122875485 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122320557 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123704585 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09858201 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109760705 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089169001 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111303864 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109811134 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097451727 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110190894 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122755201 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086736041 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121699041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088950519 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111447697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117237411 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090374338 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119957974 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121853349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134574018 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090006532 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.344771246 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098990302 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106390649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11157466 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086979507 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109924882 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087302335 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125442092 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124677239 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123971487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10085865 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111128712 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110382443 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08988067 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111147583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089649427 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120930673 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121330064 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089258741 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139080266 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111898627 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090074937 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123098084 seconds)
  done (took 8.335475105 seconds)
done (took 155.155400279 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102478161 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141713326 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09966211 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169672714 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081151335 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.137065451 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.113844607 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116163967 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083507864 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.106361362 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085133897 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108618775 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151205442 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101000346 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.082750193 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106172523 seconds)
  done (took 2.656334984 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18232954 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.292679041 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105077827 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113159702 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090601134 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110721826 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088955371 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113885292 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.085585248 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.1178839 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107369131 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088160715 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.116689563 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087669176 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106457082 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087227523 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117660833 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087668943 seconds)
  done (took 2.974928805 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116650067 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157954346 seconds)
  done (took 1.156450777 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121905949 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186977116 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299781806 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.160291325 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115025073 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129468464 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161859307 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125311814 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205141427 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129860976 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10882396 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113853344 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139047152 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09732385 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116457541 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.090895116 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140724531 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114102359 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09353544 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113441379 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117680333 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116970142 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096029314 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115322508 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188636131 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130107808 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0917749 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115124241 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113818458 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093449778 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.118658558 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.106280744 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129155612 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193214973 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097851915 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187669056 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100364131 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11239853 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093126322 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112570042 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095198481 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118515431 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128842814 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091900571 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113703037 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.0997598 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114926909 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.092068481 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121538946 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122533145 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100046827 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119752264 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167544782 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124638814 seconds)
  done (took 7.684652255 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.804375249 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152486879 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085914197 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.901520971 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138183475 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100700523 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.798067087 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130150053 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23386989 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.810542251 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101559366 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127202441 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235095166 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255510579 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.181480653 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310349833 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.69995447 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099274167 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137325556 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147465658 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090963878 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135464602 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.126887474 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42727939 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.107632832 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08682137 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112406945 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100862788 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.184528047 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091761971 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116396149 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185747267 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267963524 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202442054 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091031466 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112836273 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090098539 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170434087 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276354188 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221267516 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177869843 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087149109 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111328127 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103123516 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134594972 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114740462 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168507546 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179291615 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177295293 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117642708 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124786832 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101166709 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125538988 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165390315 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108891814 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313328543 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.33825755 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106486596 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09467724 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126982461 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264950345 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086251512 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224698148 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133725133 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190654693 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112528419 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794141534 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171192036 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089640808 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123284058 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097058381 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119759962 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12470332 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169736044 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392617234 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106689513 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119074066 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089077174 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235205131 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090500789 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112632598 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168437248 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089206605 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117649318 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125334962 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104132282 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.198740344 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254983934 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127278012 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098541777 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119621793 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102122398 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115335689 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214576291 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225539782 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162279093 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.219161533 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125457338 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.168530383 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19152283 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103505427 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.197484839 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099059754 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132820285 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125496619 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198869434 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145443785 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114262081 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096556586 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12441551 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147141895 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093585056 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121980371 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173407698 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462230998 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.193221773 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087264878 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116278432 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100335838 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165775338 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12128856 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268074848 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100152638 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170277395 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121647678 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107968637 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100750365 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167334597 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128348675 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123575392 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103880801 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123098175 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251298999 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221962044 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123900168 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216552819 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176784572 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118417601 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171859338 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116853145 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167009333 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094819207 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12025193 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10848898 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762226957 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120734936 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115563288 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090850618 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183665239 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106874411 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087400068 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105255071 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082790976 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799718142 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088144945 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104133163 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.088047337 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116495551 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.095279599 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115422564 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094541838 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188468535 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238560549 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105345782 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121171323 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090439403 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16402686 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115273515 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.090331014 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.113703618 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090394406 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124031562 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116413048 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094491064 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172602347 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156724276 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224785329 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.582670864 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091197785 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113621223 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236305487 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091464657 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312103383 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098358192 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232062539 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17052938 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111219581 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342620414 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.174101324 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190697538 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09417993 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199171493 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088262661 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119122107 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167134842 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090133631 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122703119 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162735635 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130965516 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105930781 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.148391722 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108399843 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225197879 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.081233629 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18822118 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088655852 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120905672 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304354871 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086120018 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128834437 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163280809 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112147977 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086539776 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.691468098 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.112530479 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117483782 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097784642 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223859227 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167062997 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116525576 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114448875 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101672979 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159864806 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233747788 seconds)
  done (took 44.189218877 seconds)
done (took 59.53596501 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322721984 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27331652 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.295089558 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.20082429 seconds)
  done (took 2.070545754 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183291458 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155350651 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.1270088 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111450155 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158306821 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088472963 seconds)
  done (took 1.727202333 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.485868877 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.380772661 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.351472187 seconds)
  done (took 2.126370413 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259344336 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.287391187 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332478909 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.444612645 seconds)
  done (took 2.338732051 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211081081 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128328299 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.10070213 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.141803434 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.176548293 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.182193113 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146680904 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.15666463 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130956859 seconds)
  done (took 2.32440537 seconds)
done (took 11.493181705 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.281403326 seconds)
    (2/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.332745474 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.208269093 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.253403662 seconds)
    (5/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.164621472 seconds)
    (6/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134802666 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.145871771 seconds)
    (8/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.259259431 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.225647631 seconds)
    (10/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.266557625 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.093472586 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128747383 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095994117 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.202630928 seconds)
    (15/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118668457 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09477845 seconds)
    (17/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.207139854 seconds)
    (18/286) benchmarking ("sort", Float64, true)...
    done (took 0.231691012 seconds)
    (19/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144135489 seconds)
    (20/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199203469 seconds)
    (21/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.280340183 seconds)
    (22/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.076370765 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.189036451 seconds)
    (24/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.200591321 seconds)
    (25/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.247794676 seconds)
    (26/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095352976 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.172174763 seconds)
    (28/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.19434868 seconds)
    (29/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.143929049 seconds)
    (30/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.204122768 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096678279 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.284256335 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.223790079 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.125087275 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.23382869 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123298686 seconds)
    (37/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.154288605 seconds)
    (38/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.15449372 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094864217 seconds)
    (40/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.106188318 seconds)
    (41/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102811554 seconds)
    (42/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.132772716 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118598919 seconds)
    (44/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.165054635 seconds)
    (45/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119213263 seconds)
    (46/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101145804 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138013159 seconds)
    (48/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121843078 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 0.231328094 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096664329 seconds)
    (51/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.128079717 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.119234319 seconds)
    (53/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.194774913 seconds)
    (54/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.242861481 seconds)
    (55/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100682108 seconds)
    (56/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081590401 seconds)
    (57/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.168925925 seconds)
    (58/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.23877282 seconds)
    (59/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086410407 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116278336 seconds)
    (61/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08753962 seconds)
    (62/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.120507809 seconds)
    (63/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094291623 seconds)
    (64/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.099467303 seconds)
    (65/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.105231102 seconds)
    (66/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.126967539 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.112725314 seconds)
    (68/286) benchmarking ("sort", BigInt, false)...
    done (took 0.255620502 seconds)
    (69/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.127733339 seconds)
    (70/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.142459198 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094512133 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.101111003 seconds)
    (73/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079030688 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.144019413 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.197394359 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.167852683 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.217466225 seconds)
    (78/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10290492 seconds)
    (79/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.109121877 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.11629597 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.111558076 seconds)
    (82/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084330947 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127125917 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096997005 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141274365 seconds)
    (86/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076775978 seconds)
    (87/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.272780747 seconds)
    (88/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.17188857 seconds)
    (89/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18810425 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184885892 seconds)
    (91/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077834404 seconds)
    (92/286) benchmarking ("sort", BigInt, true)...
    done (took 0.252159092 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10441686 seconds)
    (94/286) benchmarking ("sort", Float64, false)...
    done (took 0.174350505 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083745505 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095713071 seconds)
    (97/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.125154438 seconds)
    (98/286) benchmarking ("sort", Int8, true)...
    done (took 0.221338336 seconds)
    (99/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.161157618 seconds)
    (100/286) benchmarking ("sort", Float32, false)...
    done (took 0.152875898 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.147633828 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118662738 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119534944 seconds)
    (104/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.152523463 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148926419 seconds)
    (106/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12744296 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.170885728 seconds)
    (108/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.118667811 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095493141 seconds)
    (110/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.115998636 seconds)
    (111/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.103287558 seconds)
    (112/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.164772936 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.188043325 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.12435066 seconds)
    (115/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.084243657 seconds)
    (116/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.118498 seconds)
    (117/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081462694 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124468391 seconds)
    (119/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.169518667 seconds)
    (120/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.129286463 seconds)
    (121/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.196661953 seconds)
    (122/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119022694 seconds)
    (123/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127387744 seconds)
    (124/286) benchmarking ("sort", Int8, false)...
    done (took 0.196873006 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11754839 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.101862987 seconds)
    (127/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.155431747 seconds)
    (128/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115457609 seconds)
    (129/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.103030177 seconds)
    (130/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.083924206 seconds)
    (131/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.118855084 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.225875187 seconds)
    (133/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09063525 seconds)
    (134/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.153087411 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.101090529 seconds)
    (136/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.153807289 seconds)
    (137/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.103012159 seconds)
    (138/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.152368469 seconds)
    (139/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080816859 seconds)
    (140/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.185683767 seconds)
    (141/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.200067323 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192321228 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.077589653 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113649259 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096532831 seconds)
    (146/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10224515 seconds)
    (147/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085170441 seconds)
    (148/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.100190371 seconds)
    (149/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.162810576 seconds)
    (150/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102206448 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101390689 seconds)
    (152/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.126345733 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095521761 seconds)
    (154/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.2036404 seconds)
    (155/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.154041593 seconds)
    (156/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091208486 seconds)
    (157/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190724852 seconds)
    (158/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.181040626 seconds)
    (159/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.164289107 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095269928 seconds)
    (161/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.168171254 seconds)
    (162/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.153766808 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080851421 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105648107 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103492212 seconds)
    (166/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.125284706 seconds)
    (167/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.105150797 seconds)
    (168/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125988588 seconds)
    (169/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077636004 seconds)
    (170/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.102933158 seconds)
    (171/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07880913 seconds)
    (172/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.147440094 seconds)
    (173/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08816666 seconds)
    (174/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.177396993 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114221908 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080970833 seconds)
    (177/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132856669 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096346277 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17857287 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.128424761 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09298168 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.106867396 seconds)
    (183/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079603844 seconds)
    (184/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117255316 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.10415695 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138943793 seconds)
    (187/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078321817 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120938511 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097698992 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138362845 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081229335 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.105812807 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.224222977 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.09222215 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122469376 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.080300779 seconds)
    (197/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.128188277 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.091932013 seconds)
    (199/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.101662052 seconds)
    (200/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102100403 seconds)
    (201/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119241151 seconds)
    (202/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094130082 seconds)
    (203/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.102964289 seconds)
    (204/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093855639 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.13066111 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.080991884 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127654888 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125800868 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097118977 seconds)
    (210/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.083760114 seconds)
    (211/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.122747349 seconds)
    (212/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.083495737 seconds)
    (213/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113780201 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10532206 seconds)
    (215/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117943654 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094601458 seconds)
    (217/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100771523 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187556866 seconds)
    (219/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096999176 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.080193981 seconds)
    (221/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120110428 seconds)
    (222/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114762058 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094695286 seconds)
    (224/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.101940245 seconds)
    (225/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095311787 seconds)
    (226/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.168074654 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092598826 seconds)
    (228/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100234014 seconds)
    (229/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083345645 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119916351 seconds)
    (231/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095743341 seconds)
    (232/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077500199 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122593842 seconds)
    (234/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.104232221 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082214249 seconds)
    (236/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.185446667 seconds)
    (237/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091253614 seconds)
    (238/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.106528929 seconds)
    (239/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.096751953 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11842099 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095994204 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121458342 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096345908 seconds)
    (244/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.114532236 seconds)
    (245/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113817787 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114303224 seconds)
    (247/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.084390291 seconds)
    (248/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116423899 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096847171 seconds)
    (250/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.102628812 seconds)
    (251/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095517938 seconds)
    (252/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.129181088 seconds)
    (253/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086339031 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12696026 seconds)
    (255/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107475143 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103014065 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098346316 seconds)
    (258/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.104162772 seconds)
    (259/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095055743 seconds)
    (260/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107257789 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090538202 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129243318 seconds)
    (263/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09089355 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.122335346 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.09594286 seconds)
    (266/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137450005 seconds)
    (267/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084199546 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115790285 seconds)
    (269/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.085370924 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.115324111 seconds)
    (271/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094174003 seconds)
    (272/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.105251027 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.104432636 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.12046593 seconds)
    (275/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089889425 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11780199 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097153537 seconds)
    (278/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.102709368 seconds)
    (279/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097336201 seconds)
    (280/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121323078 seconds)
    (281/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095066312 seconds)
    (282/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.119935962 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092067195 seconds)
    (284/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121692463 seconds)
    (285/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091955954 seconds)
    (286/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.111807912 seconds)
  done (took 38.541638082 seconds)
done (took 39.449022405 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105305156 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.157559599 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.10097697 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.14718695 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127845065 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107383565 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.123225716 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103433481 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.128720966 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105626296 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.128276519 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.083871674 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.126745254 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099880072 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12657684 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14514984 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105163354 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120687717 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093156997 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.116655376 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093450553 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117205378 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.095166597 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.107927847 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100756993 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116328878 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090135567 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119168333 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088211698 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111573893 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086367221 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114861225 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085654544 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121051496 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.089562293 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.111320537 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095681825 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.116784283 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089262565 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113043458 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.092323771 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.111456793 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090282561 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.1158209 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088182651 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109055414 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087914188 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123663334 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112829717 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11240422 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091416431 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118932803 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094960393 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11623651 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084591728 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.112384749 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087723108 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137610763 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.109667214 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090036742 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116231629 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.092170716 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.109351371 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.090724209 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109803267 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.09561548 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.117178273 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.088489479 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116385634 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.090680724 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.105873961 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.088026033 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.107823865 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086367171 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092553639 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118008528 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08162719 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.111374261 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089593344 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113919807 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086039526 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109520091 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088703285 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111757701 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086347714 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102745815 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08530178 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114290497 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089291997 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117679448 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096405735 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120598312 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.095668475 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126224113 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.093405329 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119122629 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.094302497 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119136011 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095502868 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117049833 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.089762586 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114029591 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097151734 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113380476 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092790023 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124256992 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091778041 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120210757 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.09261553 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.116912577 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.106358802 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124903035 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093746438 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120082819 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089854541 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122087159 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090937187 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.116363559 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.091891884 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.135806617 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094119323 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.118418486 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092454992 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121126124 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104682587 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114073774 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.092130207 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116235015 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094404854 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.120252686 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093372536 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.114065517 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09302915 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.112871013 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093606809 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.112350307 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097036853 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108803733 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.092568146 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110566925 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093490325 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.112594008 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092731783 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11121002 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092039406 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.108533196 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096481165 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092018228 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.120288243 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093077708 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.119014831 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088035318 seconds)
done (took 17.016581667 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102569302 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.194880396 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152743579 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.15487173 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152516025 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112674778 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132318648 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150926792 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.102842393 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.150912565 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.1513418 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.115260941 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.156754864 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127544166 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136180639 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.101310237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125292667 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111448413 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.161951929 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.146591991 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151871609 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103424775 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148471589 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145962944 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100248354 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.147514346 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129551668 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101301258 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129213976 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118671657 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142743063 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128982326 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.103611551 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.140389987 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108044244 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126742167 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.136096107 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097462992 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.12657154 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.101432908 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139562224 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137606925 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099930581 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135197249 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124626332 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105914454 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.124725664 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.100615772 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.127300744 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.095812327 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.132614698 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146971723 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.100390693 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128953765 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.101174356 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126923446 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12661351 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.1058868 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128981154 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.103975537 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12721741 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128134166 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107827686 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144709646 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124125968 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103870564 seconds)
  done (took 9.313771071 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.116541475 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.153627689 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131508195 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109287812 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128834794 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08990555 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113783551 seconds)
  done (took 1.818261549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092613447 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146288657 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12532255 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.149959381 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140319561 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127924086 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134505246 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090604009 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141502897 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.12596922 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120586965 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174894245 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118562222 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104848312 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154057078 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090820122 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.15414316 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118150778 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.10151614 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.148475348 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097850421 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.139809466 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.12911957 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093474755 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138029617 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09472375 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183856261 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127530614 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090850968 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096117101 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122718862 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.189586131 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139359452 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.103172783 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114886167 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120262916 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.138899218 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120691425 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.117844498 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121233843 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.113632547 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.123386398 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098477414 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123741407 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098678329 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133045563 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12732746 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101593847 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.121667373 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.120905906 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128554415 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113943049 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120246865 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096221528 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128426948 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09737763 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132248132 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12094502 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122054965 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123893628 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120458805 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147230755 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138272713 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.119614517 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13645544 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.112289023 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.136790378 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114197376 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093949848 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116724559 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112728243 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116050083 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.102780333 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.133411231 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125411229 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121196766 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145233387 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097079615 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12419782 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.092481176 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113904081 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086721927 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.12630983 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093674431 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112773028 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109833063 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125319729 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.093414894 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.120715341 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.135292054 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.096738142 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128739077 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.103603149 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.121581877 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132444682 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121520306 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129029412 seconds)
  done (took 12.717420822 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095373031 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093819401 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.126023193 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.093341336 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.120307542 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091287228 seconds)
  done (took 1.600617307 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12440354 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12276943 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109869126 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127353398 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162836982 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.118788393 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145840367 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102808787 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.14058158 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13357911 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.118323855 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.145720399 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150341045 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101008851 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.143374631 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101550396 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.144882408 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097119235 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13490129 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096709733 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137578831 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125471914 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09727992 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138126376 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.103774187 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126887763 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101515546 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136963157 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108115728 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129516688 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125205792 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102577351 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12692691 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.104566832 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.145223739 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125927778 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096819341 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12756306 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103088972 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126819229 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120013264 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122706982 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107116071 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.125353911 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102659165 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125001222 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120446311 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094457779 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135665734 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099256416 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.129810839 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.100864437 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127560352 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.102565085 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127628822 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129080154 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.104693472 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.143912132 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.101357214 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12824221 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097641966 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.1279985 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128827087 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.103050252 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127850183 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.104798505 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126991899 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098020194 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123170746 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.10178198 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126774785 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.099743093 seconds)
  done (took 9.612531575 seconds)
done (took 36.030044289 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.670712886 seconds)
  done (took 1.645023099 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.855037181 seconds)
  done (took 1.831870014 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.619078577 seconds)
  done (took 17.623509551 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49815739 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.5839646 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.968990202 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158987489 seconds)
  done (took 3.187439801 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950248759 seconds)
  done (took 1.947380056 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.309748972 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263685884 seconds)
  done (took 1.555859221 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.820797248 seconds)
  done (took 1.808119807 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.545602134 seconds)
  done (took 2.531802323 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362087303 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.199275466 seconds)
  done (took 1.55993779 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.581039475 seconds)
  done (took 1.574511723 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.973804645 seconds)
  done (took 15.970427708 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247264942 seconds)
  done (took 1.252840437 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299216158 seconds)
  done (took 1.29434671 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.429868558 seconds)
  done (took 4.424968872 seconds)
done (took 59.196213632 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103969737 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128635368 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100599544 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.120626026 seconds)
  done (took 1.443468147 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109092976 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126130205 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105644792 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124565161 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109205822 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126023039 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099255562 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.171556657 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.124202268 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101988053 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122677772 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09676674 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.119849814 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092951401 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115254746 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096714864 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121477602 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.093795744 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120751303 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118378204 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.094029336 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118325872 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.097669894 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.116267618 seconds)
  done (took 3.720565702 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103154156 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.095871264 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117887852 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089825588 seconds)
  done (took 1.405979787 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107148798 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139209325 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113617723 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131737817 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.11374727 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131060799 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113290078 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.089773818 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114771102 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.103810672 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11676249 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.109742506 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131386523 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085306901 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12484068 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086358826 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.110486565 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.105622791 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123752163 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124868608 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091613843 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122229511 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097448634 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127842782 seconds)
  done (took 3.721235049 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177720425 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12858698 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13703549 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096243907 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163554635 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139169653 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089089462 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140259122 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088638782 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125769851 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.091996881 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165449099 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.122995873 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.091697999 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11449567 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.119746614 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098444618 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.121833204 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091789168 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125843252 seconds)
  done (took 3.432041179 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103068677 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116204043 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086795218 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086896283 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121208925 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09206679 seconds)
  done (took 1.610617948 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09324432 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091392553 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114307299 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084658911 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.113124272 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085437743 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10686192 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.089464419 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085463851 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10905379 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085076077 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107947678 seconds)
  done (took 2.174604166 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.396383879 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12253743 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114583803 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090598219 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12062862 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094112205 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127874063 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.089098303 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.144058201 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.093542692 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112067953 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092448591 seconds)
  done (took 2.602563734 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215741195 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101477104 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272867676 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384915856 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139399501 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169637847 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289465437 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16505492 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207300284 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115883685 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218053884 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129179256 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150490744 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180158866 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14501648 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.185545974 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183898635 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209357967 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153628845 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213619863 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1690605 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16993894 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178542106 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15020538 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132544694 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132300197 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118103547 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124252466 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170844253 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168464656 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172067504 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145559867 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109047683 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226588743 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215266712 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211931263 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315144134 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11375222 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.218973577 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189565599 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23856825 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146441225 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203299327 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161947814 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134831958 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189447131 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163046861 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185892008 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107565639 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138754971 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182723463 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17442771 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201715455 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109641176 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321268991 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120266681 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144533056 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179400802 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184507805 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215323092 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16440323 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092285383 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181980253 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182523472 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178541367 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144615711 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164551819 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121841933 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174147889 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193346996 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183530175 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173030086 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.221465669 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110210922 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162488503 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166226115 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152559016 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176869916 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158684887 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117944802 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122299897 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136827362 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124649162 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157651156 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121392285 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200157062 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132579617 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.18648375 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200975582 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154859205 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160023508 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163746971 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163411674 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144777062 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09041586 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144491954 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158708509 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157139278 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101936756 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153393573 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141549331 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123793889 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150732751 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098649564 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157357983 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132698748 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165408908 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162423418 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101825808 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162744407 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146598433 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155335305 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17013403 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183068368 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102521651 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129215758 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191310496 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157485751 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132887055 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1715177 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184061114 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.162131895 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134073004 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168446792 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192419272 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111166393 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210052166 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112546561 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129944483 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148591694 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156748313 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154083495 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126418046 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12660319 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151453718 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191957355 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123590469 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107918603 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172873607 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123641913 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12443655 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118014497 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133790509 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138733762 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.117887636 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136352071 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156325695 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160702038 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151545644 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15787051 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110997131 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216675029 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129315606 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13801202 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153510731 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122143575 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.185684076 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191148466 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106251423 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223743371 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166921603 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194641824 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162855273 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128640786 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17582832 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098973869 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116502385 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164543302 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157703951 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159615986 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.180341929 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190891534 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165519227 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149706847 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147869453 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166016919 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17111549 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153528314 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141338632 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160470648 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171585957 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092257035 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119413952 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.098160626 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139576727 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127103638 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102365028 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179664317 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162145032 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210400253 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159193077 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112179276 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178637683 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123296544 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162584136 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.168525166 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136758221 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181214468 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17977711 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164892296 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139562367 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173441944 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090209063 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11892085 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103595366 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163548412 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129575005 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103212184 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139541112 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177514681 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172828647 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147377618 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224047117 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170115448 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187578968 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118153301 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.135154872 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168549239 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155420389 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179428313 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105895387 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.158434855 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173987078 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141511809 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186763412 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160102257 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165718743 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222417225 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126426846 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126512085 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146230524 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163895718 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137237743 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136256575 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142880895 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132717059 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151113248 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104639882 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122993268 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181527951 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142528185 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176968091 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153684079 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169671138 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123142167 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140573845 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130911179 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143629658 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112410937 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168499893 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183733485 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141096374 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156586978 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173560832 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099311573 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305012419 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211340678 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182929571 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132916538 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113282456 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158386564 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155900428 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162670091 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175960859 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140619145 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178140123 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154648373 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112631067 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132529632 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144215976 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119852735 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.148114163 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129322409 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151266717 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14133012 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183767217 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140387453 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12911017 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161915165 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144525968 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144864624 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11305331 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22354087 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159873963 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17496701 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125655949 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164152964 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223231078 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093509219 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126830806 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096469105 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176447687 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129607447 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155658966 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180203239 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195919271 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157144397 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164349111 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135626265 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.089952351 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156532571 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146173363 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220608247 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11215648 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134395822 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189511896 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.149013326 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126209726 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133742845 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30662126 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115394297 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171076912 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.113903359 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269246099 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094675494 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126520247 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156875018 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168834219 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134151881 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152789928 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160393324 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141876919 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157967376 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107160751 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211044719 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203833442 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168511102 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173609174 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.139659794 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15585038 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161620704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175076968 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139786098 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.114273771 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15955279 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179965037 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183308177 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129660699 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160756935 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16131606 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157768569 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170195103 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129765483 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197002738 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100523792 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191018034 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110650853 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120501853 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158245921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181313196 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129525436 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173268617 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154765967 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103230507 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123158969 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146985223 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157000037 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112388704 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12553598 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177960571 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.120255472 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134194846 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177433007 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126915722 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15172032 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115441175 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134388559 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140046139 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142332127 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10553437 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16523489 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181000534 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126906341 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17611131 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174875939 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163102889 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158154416 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140936586 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636046396 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12502959 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180772184 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143379115 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182082277 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116374853 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163076026 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158552139 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14877177 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166655723 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148199905 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.215866447 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164669279 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155562826 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099608913 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14201389 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140972228 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099636797 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147433797 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15976352 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138435698 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105150961 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154531768 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141750539 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142550915 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134856961 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179564977 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11704881 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208366254 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1487156 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135128971 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163523085 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170790511 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127585348 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157625476 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169459509 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136886106 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120175636 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127078693 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131015481 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176936424 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093747796 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158481192 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158405312 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160643913 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161424229 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102083574 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157279604 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139364573 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158530486 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126534036 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.123247979 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154012414 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12750149 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.095948686 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150690644 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157497053 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154958937 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122602238 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14151269 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176984017 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121876539 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102657805 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281688232 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152271942 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214679316 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121603821 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131771007 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140598634 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151871003 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122281185 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157825184 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126002476 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100401542 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.127498939 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.177411045 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.150733412 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152902673 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180958422 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15886902 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198948896 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103420356 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.260698542 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137560851 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152302317 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099719594 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127096306 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13938628 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103335488 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141661385 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186621931 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176569341 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149657088 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141416674 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095923769 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124059901 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101524331 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158155204 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15231559 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157448057 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141372575 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086846739 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141462262 seconds)
  done (took 75.635588296 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152620999 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128728793 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144620904 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.190743827 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161279929 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23821881 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.200594871 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222027468 seconds)
  done (took 2.531114135 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105403817 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.1541383 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.135000071 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.120239058 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.087610409 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.326315265 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.133069352 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.11918349 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.14405086 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.128256275 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.089583248 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.561587133 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.098874807 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.126276789 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.109844189 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.087124177 seconds)
  done (took 3.609563725 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.136074207 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.509172575 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.738502613 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.221925902 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.217563274 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.165526928 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.700626201 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.157539626 seconds)
  done (took 11.943292223 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12800752 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.141480751 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132289562 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158763425 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115605343 seconds)
  done (took 1.77911466 seconds)
done (took 116.601845116 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099612678 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122999362 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.093422777 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.122599479 seconds)
  done (took 1.522961343 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.111907301 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078624606 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10705993 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07681385 seconds)
  done (took 1.466929973 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.436634176 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.113234309 seconds)
  done (took 1.680265012 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119230484 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129015121 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103555098 seconds)
  done (took 1.44817975 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106633971 seconds)
  done (took 1.208244313 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101694129 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096214709 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.13646424 seconds)
  done (took 1.434540196 seconds)
done (took 9.861116621 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117803405 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436235155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382720591 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133308802 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.716566054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.376375867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.056691924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152094466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134895924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114333784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104825991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694447556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.003344455 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335587999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.990483398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33413116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.670859725 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117143407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093395853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116806659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.034645885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087328861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088689439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116771196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668532508 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419374348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087701579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374197768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112835554 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093106938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.403241976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08812089 seconds)
  done (took 16.742838016 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174654563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095340438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116652336 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09179165 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117125355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098519743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.128836186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177857366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087830565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133284202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087813314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121333629 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088180121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135684839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086615903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117618844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090082186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123084979 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089833128 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134773586 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087191076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11720394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0901386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115351768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.099754584 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115454458 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.10139001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11557744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092083559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120323324 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088303339 seconds)
  done (took 4.645873018 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14568805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182984956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.123254313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121915038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.164899155 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116227047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171490252 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153209273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17830134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11625585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105593543 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115998973 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1232079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116075967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108622141 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115734849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090348459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117683576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094966593 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117585632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107041111 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114748785 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089767292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117174092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088057391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129523138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088255007 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128371627 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113966069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093258312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120530495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089467227 seconds)
  done (took 4.968514498 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102430527 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124185946 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10669497 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.131881074 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091017462 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121832151 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096320574 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.117415025 seconds)
  done (took 2.002244984 seconds)
done (took 29.457296175 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113458789 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093963648 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129041582 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099108108 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.124538586 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101495346 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114455632 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099069386 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.127812324 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096037973 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131300611 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.086185564 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.116592128 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.086610954 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.127333781 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092608295 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130575604 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098179541 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135716519 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.104216137 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.115671992 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099392408 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097021132 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135467771 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.135587625 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.107834653 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.131650468 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.092809135 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115751958 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.08881211 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129277967 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109929422 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.118204931 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104147314 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119835795 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092193152 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115844095 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.090215974 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.129800537 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099156533 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121373231 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.098691581 seconds)
  done (took 5.754152457 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.122962228 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.159912999 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.08837894 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.117027803 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089358554 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.155196526 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.151235123 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089971993 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.115772406 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.113725773 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.143345644 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089982132 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.116889698 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.088906388 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.115881359 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.090029326 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.138534323 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.112494222 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.146141137 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.118585522 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.160090203 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.146924947 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.122573742 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.139786558 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.157956684 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.150493189 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.116537652 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.152429228 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.114890616 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.116312102 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.144759447 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.120777163 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.115051057 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.088680343 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.157216322 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.123795657 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.144620665 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.156981394 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.14580574 seconds)
  done (took 6.05583861 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104355965 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130088833 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.109977247 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181284616 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125054116 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.129805432 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098103622 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134901434 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104469869 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117243463 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089874227 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14646983 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134714908 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.096862806 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.088554506 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131189257 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136251609 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.091347634 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121120395 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107967045 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133976247 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101316919 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.129013889 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099413006 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114642976 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097137527 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.118802703 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.102869191 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120614413 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096292595 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.119918922 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093714918 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.1188671 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100402243 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.119130331 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096045226 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138299736 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097286201 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127627684 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120722835 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12898605 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.091965913 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138034776 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15515047 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089088887 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12214882 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095876116 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096572047 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115300101 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105845936 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126576698 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088441395 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131881562 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.115576119 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088052352 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102654311 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.117998009 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091742703 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.124891591 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094710407 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136016351 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092131762 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132427844 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089099891 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123655224 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088333175 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11620275 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093248627 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138935511 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09160936 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15620019 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088338997 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122462795 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096314078 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123727243 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097871397 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117162576 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102826384 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12798674 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093267894 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127894044 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09195498 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.12115473 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106447726 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131794816 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095131858 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122374667 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.09521815 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120575274 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088739248 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131090056 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09077359 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121808061 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106016841 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117990223 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100693328 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124120667 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093028147 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.116739985 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101213882 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122739436 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088596327 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.127152555 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.08968421 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121419735 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097774423 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121454232 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089313153 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122030958 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095499143 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11653104 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092850033 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12088022 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092856725 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129752709 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09663053 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120180917 seconds)
  done (took 14.243891482 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.240997034 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213600096 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189358158 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295437894 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139057908 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114821781 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208821854 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163273916 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117873586 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.128503715 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174013023 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183423702 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.172156772 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183326924 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170588556 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11883107 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106977122 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1695649 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211577734 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292542847 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.10750195 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132720461 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159674667 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158866673 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107193697 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133686694 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140936224 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109761684 seconds)
  done (took 5.770994364 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111687239 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153139661 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096207017 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143709886 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14394937 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090033308 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.123728221 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.090245599 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.130679378 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.103551156 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.1194823 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.095790337 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.123936993 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099249668 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118653384 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098347133 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129000409 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.098267677 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121547915 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092373016 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132427078 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107081408 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124128735 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090930186 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134694251 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119798436 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090793809 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139405628 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124484512 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114961208 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.114667121 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098466837 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132164928 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.088827722 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.091611995 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.120464451 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.090979591 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.120301639 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.090331229 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.114932818 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.088529753 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.108459933 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.092433954 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132033479 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095332215 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.116196112 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094455601 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.122529106 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096009663 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.113771563 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.090913519 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091336727 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121729483 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.099325178 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121652468 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.095569663 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.12194933 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090511887 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.126175657 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.091737325 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11547364 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090320013 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123973478 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092623342 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127276778 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.09414488 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.119947632 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091607563 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.123049416 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.095803668 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.120919226 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098822984 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.114756936 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090960337 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127292609 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098174676 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092393947 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119514105 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092012787 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117493346 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078428767 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.117825082 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077074521 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.121759112 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089097389 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.090450935 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.122098488 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.094071904 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133919333 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127197316 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096858412 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117841667 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092263042 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122055812 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087559769 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093304947 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135475873 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137240954 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087873152 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116995817 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104933752 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.119812702 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088228252 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081415162 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128438076 seconds)
  done (took 12.587839887 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138726998 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.168859418 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.119111595 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108966665 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15325981 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159842311 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098991634 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12534836 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.572233385 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107938371 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122132396 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.09787641 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.121657982 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103033933 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159173681 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127970763 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090595577 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.132358715 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.094936344 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172248922 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137171151 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.12859844 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.158730809 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121075258 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095778148 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155607741 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162523552 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103459874 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131078262 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131102722 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133626601 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162426232 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.131532106 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124483688 seconds)
  done (took 5.99887326 seconds)
done (took 51.512985022 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.218835755 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.416211683 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.200803323 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.202917803 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.21392344 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.215207359 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200540176 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.395597253 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.867812215 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.191188926 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.202065803 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.203082779 seconds)
done (took 27.6588788 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.267563771 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.358754548 seconds)
    (2/2) benchmarking "String"...
    done (took 1.495278306 seconds)
  done (took 3.981929073 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.201183157 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.19926818 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442152881 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.200824399 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.19917571 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.213593367 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.199747242 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.218526084 seconds)
  done (took 15.800681092 seconds)
done (took 25.382695232 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.238486109 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.399236243 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.450599377 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.22283503 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.200801548 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.205246836 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.198158223 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.239336067 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.195992546 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.203442975 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.18977129 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.475912956 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.214453578 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.581749512 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.199187902 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.212546137 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.211428317 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.424924999 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.197406026 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.185379819 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.198516425 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204199937 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.197316138 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.236968312 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.202368086 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.197808204 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.200567467 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.195637066 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.39163409 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.224755655 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.238274755 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.199490594 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.204311997 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.200113922 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.29757367 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.226866616 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.392751013 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.202698067 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.18749186 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.206422635 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.394725885 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.571563243 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.199240332 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.195490763 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.215710757 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.233923002 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.190839135 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.872916052 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.210454939 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.201723369 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.251678351 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.592755342 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.200960423 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.222062017 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.208141407 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.447428812 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.219105044 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.212814569 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.232705119 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.195872604 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.20961153 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.205123717 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.247056448 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.218318527 seconds)
  done (took 143.131816313 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.200615418 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.201512822 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.204738001 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.257712303 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.201952194 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.201420098 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.202004333 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.201074423 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.204361926 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.22559793 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.201925704 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.201833314 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.202613553 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.162888637 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202971404 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.214803656 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.20237744 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.202667731 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.203818683 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.203227136 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.229187986 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.203034362 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.217902293 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.204478427 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.233026865 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.27338386 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.219324812 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.208379391 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.200277896 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.202747869 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.228579187 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.261927224 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.741316497 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05526655 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.203751812 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.220403691 seconds)
  done (took 80.13029333 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202670415 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20288022 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204201579 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231916757 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.203340791 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.700456986 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.703005341 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.924769234 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.362177475 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202919952 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.306894487 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.396533722 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198056822 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297041585 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213979765 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200897316 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.220155265 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.202723307 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204830812 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.228913651 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203522629 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.698209968 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217740525 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.363494382 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210348253 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231042482 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599401974 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.391832774 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212500432 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233429352 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.526228724 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.242078687 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198598058 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.507641938 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.110839209 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310737663 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203550827 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232793222 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204499401 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479698536 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201824329 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204968096 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.20561741 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207481151 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.814556802 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.204999926 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.698006991 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206704867 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.088395857 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199515315 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205663308 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.326502357 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.7195729 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.215824046 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205012326 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206642825 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20330818 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205501616 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.2340092 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206725279 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.364916583 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311674991 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207938281 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.210790661 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234995046 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206108115 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.388635404 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201165458 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.450567316 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274960216 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.315932387 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.698806687 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206337922 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302562107 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318640804 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200775796 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203845564 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206777333 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206402791 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314187854 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.202850901 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.577603856 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365710493 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216293821 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.31040907 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302547469 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203545239 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502218102 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.208560834 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209423493 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.908779036 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299462098 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202403847 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211050295 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207934204 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.578405441 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.696474301 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.363364782 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.208648962 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.578573643 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209142336 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.590375487 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.691571243 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.811420419 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.209291309 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318225428 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.369515979 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.21754957 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.206199355 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.296576101 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.209832271 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266881517 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203572112 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60407396 seconds)
  done (took 364.066377797 seconds)
done (took 588.45674264 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.908713167 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.864192679 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.986508654 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.884894746 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.853853237 seconds)
  done (took 10.629278483 seconds)
done (took 11.762099826 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384124095 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.382349774 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261204696 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383692781 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241115765 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398360747 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.365325773 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231239118 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.305808014 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.28189225 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305859985 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259249867 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241929554 seconds)
  done (took 18.174197339 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527269852 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.21241604 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289323365 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528876323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251537116 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544544112 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.4150194 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.226673435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408563173 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225826698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224034324 seconds)
  done (took 17.988927069 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538829262 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.212434394 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293384271 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.534026435 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252555287 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541911006 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409914792 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.22830458 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.449587125 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225493952 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221653749 seconds)
  done (took 18.042976094 seconds)
done (took 55.339085981 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249244194 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.372833117 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233301918 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225679733 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220724167 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221650467 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.226200191 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22218844 seconds)
  done (took 11.106458906 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220109076 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.219232277 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21708833 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.218961015 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221186827 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220273301 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219305625 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.218189704 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.215925425 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218237774 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218839363 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.218360334 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.215944376 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216077615 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219599431 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.218314986 seconds)
  done (took 20.630899086 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.221525076 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217681827 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218766136 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219199898 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219075788 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218874766 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219803208 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.21761465 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.219007305 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218619539 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218296564 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218591938 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219421731 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.21955895 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219067558 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.218587035 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.219010487 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219259512 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224200481 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218132711 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.218820455 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217789372 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219670867 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218542579 seconds)
  done (took 30.398279824 seconds)
done (took 63.269936649 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.213797685 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.224955771 seconds)
  done (took 5.576569606 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.278922666 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.282427586 seconds)
  done (took 3.700267491 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222529883 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222210547 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.22202572 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221758551 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222267086 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.222272683 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.223346781 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223701957 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224034515 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221725541 seconds)
  done (took 13.364166458 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.223254257 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222862552 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.220339812 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222819907 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222084394 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.220395845 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222132887 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.224506281 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222123845 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219552882 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222175829 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.220195061 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221045697 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221531451 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223609173 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.219441798 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221766761 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.220024856 seconds)
  done (took 23.130907928 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235282785 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.245361687 seconds)
  done (took 3.620531562 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.34997051 seconds)
    (2/7) benchmarking "second"...
    done (took 1.262567737 seconds)
    (3/7) benchmarking "month"...
    done (took 1.331979096 seconds)
    (4/7) benchmarking "year"...
    done (took 1.32001182 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.262045153 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241370094 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.263451218 seconds)
  done (took 10.171737865 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226634024 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.416900216 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.519613056 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.792602061 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.225447065 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.228024685 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.082301507 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227912119 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.231655318 seconds)
  done (took 14.090295715 seconds)
done (took 74.791669713 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.215353237 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.234799776 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.224908094 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.244625598 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.562854432 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.247577597 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.216919165 seconds)
done (took 16.088080307 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.208750874 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.206121511 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.209915765 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.226632657 seconds)
  done (took 9.991936126 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.170653078 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553975766 seconds)
  done (took 4.866568112 seconds)
done (took 16.000968246 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227112629 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.222836421 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224238514 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.222876324 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.22589015 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.221632094 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224977318 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225637616 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225475608 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224775384 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.226591699 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.226051995 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225117547 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224449749 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223924854 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226814933 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226442028 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223166316 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225043527 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223794287 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228898531 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225469304 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223683524 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223959608 seconds)
  done (took 30.539946929 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.227757116 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224421394 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.227215828 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.227028699 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223695626 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.224762326 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225181287 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223409721 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22591321 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.226731352 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223507642 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.225372922 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.225897893 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224318009 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228083896 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.225155679 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230464623 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22497821 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228041067 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.225879837 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229210693 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225626408 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226214809 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227228569 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224025445 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225423226 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.228226347 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.228854415 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228837259 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.225962049 seconds)
  done (took 37.931157708 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234632341 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234493726 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.229465692 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.229581831 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229722841 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.229477832 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.226497728 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.229094216 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.229095568 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228769066 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230116862 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.229261553 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.229908745 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230921003 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.22747933 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225997365 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228518175 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226054376 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.226030546 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225974554 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.22647179 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.227692996 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.223465643 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219428362 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.222654658 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22153528 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220438395 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.221441315 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221900337 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.221900653 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.218957801 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21637876 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215417852 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214806531 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214134485 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214629443 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.21978273 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.222631284 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21803231 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.212005651 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.212998089 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.211420715 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.212720479 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.212315598 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.212162172 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.211666055 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214934069 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.208944803 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.210423667 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.209762043 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.209581519 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.209732128 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.207810778 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.205849701 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.207276332 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.210038252 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.203014794 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.204167335 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.203007195 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.204734595 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.202601066 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.203169967 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.204394346 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.206086823 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.20576452 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.203011323 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.203358532 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.203585231 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.203400352 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.203693988 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.201819649 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.205028456 seconds)
  done (took 88.749101884 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.203024506 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.200761639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.19943018 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200817204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198002148 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.202320918 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200729024 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205619363 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198844434 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.200903016 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200731964 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.199331031 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198784271 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.200595191 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20440079 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202419902 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.203161848 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200258376 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.203537076 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.202487752 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20436324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.201975091 seconds)
  done (took 27.554836547 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204552754 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206115698 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.199817417 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.204111254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20309899 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203584923 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.203658652 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.203473159 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204291313 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202216889 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20211 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204767467 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203429491 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201924813 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200430713 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.203012856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203374386 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204228764 seconds)
  done (took 22.779566746 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.204451192 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.201142836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.206620103 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.203434086 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.206573654 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.207098539 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205114218 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208906061 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.209943304 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.204669879 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.207832486 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208493789 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.209526363 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205946958 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210098914 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.206040473 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.207217555 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206735398 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209597271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206737344 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.20528045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207034006 seconds)
  done (took 27.672070181 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208381658 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207258048 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.202107845 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.202849655 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202106314 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.206352028 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.204084986 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.204611334 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.210622511 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.204788257 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201848263 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.204322883 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.200321627 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.201817552 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.202483839 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202290266 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208493987 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20070621 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204344411 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.199232233 seconds)
  done (took 25.205003173 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204428626 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205065129 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205919016 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205543677 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20667549 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.204681308 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204522749 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.20529624 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205244795 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205841658 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205320533 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204761449 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207746738 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204064764 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204497246 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204764776 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203535529 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204651161 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205299094 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203675483 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204593273 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.203906097 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203313922 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203286755 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203728112 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204304458 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205140412 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.203946314 seconds)
  done (took 34.85590731 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203298878 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201719101 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.19789667 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.200767581 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.203066471 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.200240501 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.202120087 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.203066667 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205513664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200536538 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.203782841 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.203571693 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20268343 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.20440649 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205159981 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.205096596 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208098782 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.201432196 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200226666 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200556622 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.202774201 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199282869 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.201591946 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197870437 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200595278 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.20400339 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189213905 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.187503614 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.186185877 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183257099 seconds)
  done (took 37.127720482 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.237021301 seconds)
    (2/2) benchmarking "in"...
    done (took 1.232107103 seconds)
  done (took 3.585031568 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.179652015 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.182369485 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.182449687 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.180266641 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.180400778 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.183842661 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.183538267 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.180509859 seconds)
  done (took 10.568233018 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.184053422 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.183238362 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.18357046 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.184094967 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.183671935 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.183653898 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.189921375 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.202717416 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.184802796 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.186628282 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.190632548 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.191223377 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.1872262 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.185459323 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.185786453 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.187273736 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.185414494 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.185264414 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.186280596 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.186221121 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185898759 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187352252 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188686073 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.184025888 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.186873353 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.196918714 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.188891003 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.186288331 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.185951091 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.190582014 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.186902607 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.183980276 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.185637083 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.185990525 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.187665744 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.186229233 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.197110226 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208428687 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.195298778 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189195494 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189173276 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.185671616 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.190088902 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.191348982 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188429284 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.188550036 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.189038414 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.186884301 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.189379012 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.191945274 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.19309543 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.189108798 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.186784153 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.19143392 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.190304571 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.195996144 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.207517854 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.192096954 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.19720064 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.198437213 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.202565855 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.211378839 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.191941618 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.189927119 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.199440459 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.209004503 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.197279147 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.205120994 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.188404063 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.189737212 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.198544402 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.201506726 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.211710954 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.190118785 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190117959 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.190320371 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190615538 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190474789 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.199738941 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.210474232 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.190646369 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190577501 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199801737 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208989074 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.190717789 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.191074803 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.191505236 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.190425465 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.191939441 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.200899209 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.208469908 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.19189885 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.190639231 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.191747995 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.192570834 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.191479927 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.189369663 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.191954058 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.189379953 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.192202914 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191591508 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.19511626 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.199421212 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191094898 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.192476789 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.201186169 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.191396324 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192252669 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.199610663 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.192533758 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192397567 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.193709072 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.198325275 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.190109119 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.196151866 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.199221194 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.19298856 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.194243078 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.192485073 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.194857549 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.202354242 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.214205726 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.193132764 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.193455639 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.197603141 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.203210792 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.193562084 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.196156967 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.194151574 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.190423338 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.191647299 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.195015635 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.194779228 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.194062524 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.19368736 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.195934922 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.191453493 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.194821107 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.193874024 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.194080756 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.197115686 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.195258441 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.196913638 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.197833531 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.194718501 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.196597016 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.202253386 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.195295713 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.196406463 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.196608093 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.192792494 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.195433155 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.195545065 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.194838791 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.195654445 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.195167691 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.195915744 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.195305507 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196365492 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.196057043 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.1958585 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.195829275 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.199954492 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.195368394 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.199619795 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.194983617 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.193906648 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.197549304 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.195500532 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.196181338 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.19911984 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.195518136 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.199187081 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.202030397 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.196734821 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.195993147 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.200318485 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.196899817 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.196634028 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.197183416 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.200800636 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.204292947 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.197483842 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.205057414 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.196975226 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198604198 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.19811162 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.197059061 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.196108977 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.19584138 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.20158885 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.203387588 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.210042057 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219878098 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.197052357 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.201328076 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.199034786 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.200896023 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.202929448 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.197800129 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.199084148 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199171837 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.19880769 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198492795 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.200941556 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.197137135 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.197395317 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.199798456 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.199619908 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.19858642 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200171414 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.198604458 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199407194 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.197309121 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199636222 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199765163 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.199556019 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.197468858 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.19850202 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.19921066 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.200700418 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.199166637 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.207332715 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.196472909 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.200852545 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.201043461 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.200638301 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.198519321 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.200136845 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202514086 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.200029649 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.207505746 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.217184881 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.201824285 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.206406051 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.218037311 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.199362982 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.203906263 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.201180242 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.198215508 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.203657195 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.207135273 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.200976365 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.200209153 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.202002094 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202557322 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203112832 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.208121034 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.198616098 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.201446999 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.20159664 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.203521867 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.198732092 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.20327346 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.202464439 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.202681144 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.204874405 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.202193501 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.203636467 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202737051 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.202173017 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.203871341 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.202036883 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.206727288 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.208350027 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.208164441 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.202051965 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.203796835 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.20347025 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.204822365 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.202636568 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.200854565 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.203087434 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215275757 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.224302767 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.211301723 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.221584108 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.203723641 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209339747 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.221659139 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.206310007 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.201457614 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.203706972 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.202881086 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.202946871 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.201668383 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204530295 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.203835383 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205128867 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.203756079 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.20699536 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.204864276 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.202848671 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.204074874 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.204527096 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.206560131 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.203899584 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.203989883 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.207165971 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.207474644 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.202453554 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.204478903 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.211557275 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223658686 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.205786186 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.204675112 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.204927746 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.2048643 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.205955149 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.204345633 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.208203918 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.211301428 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.208611565 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.212267023 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.206881241 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214800565 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.203988453 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.209558198 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.210552767 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.203972902 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.205304656 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.206616291 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.206901936 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.21422953 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.224771223 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.207863602 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.21009156 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.207047008 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.205962165 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.206446652 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.205313193 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.20728588 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.205637997 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214907504 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.227388552 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.209784616 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.207972664 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.204563544 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.206929166 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.20861904 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.207125079 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210607369 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.208015682 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.209806422 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.207397211 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.206417846 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.208824868 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.20626456 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.209139518 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.206189723 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.208626324 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.215946124 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.227275549 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.211882226 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.208983112 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.215579009 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.20978458 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.216638469 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.226255608 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.209532034 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.208386921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.209918639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.211256514 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.208292365 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.210161717 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.210223291 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.21140694 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.211726553 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.209579575 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.21094519 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.209994008 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.209144473 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.208105971 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.218020851 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229805704 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.211184926 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.213403002 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.206983749 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.210572212 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.213586573 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.209595449 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.210531643 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.212746745 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.219366177 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217438232 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.210941501 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.210414157 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211063134 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210677616 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.210954838 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.211340154 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.210149081 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.211819723 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.214349378 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.211229442 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.215000142 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.211982636 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.212086372 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.214401841 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.212855685 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.220973341 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.211555186 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.212202359 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.211303003 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.212827975 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.211209651 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.210818945 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.210632432 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.211587423 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.211844173 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.212422975 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.218629524 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.217818222 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.213774359 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.212760276 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.211250408 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.212605941 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.213717192 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.211426896 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.212455124 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.213464394 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.213016837 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.211635487 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.214285536 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.211410081 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.213706612 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.212158142 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.213016532 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.214921695 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.219616494 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.213520473 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.211837451 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.211596819 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.213943017 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.212056878 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.213318981 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.219927238 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.215629908 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.222033679 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.220658144 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.21682584 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.214596106 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.215343442 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.22067503 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.213333061 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.214926769 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.215070907 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.214769714 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.214643804 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.218259344 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.214030352 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.221077218 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.214475582 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.213814923 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.223143455 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.23667534 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215038875 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.217247446 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.219927775 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.217031612 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.213458496 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.214966098 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.215718929 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223139885 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.234138836 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215690864 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.218175481 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.214663993 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.218843027 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.219838949 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.217115245 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.217493614 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.213530591 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.217548196 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.217157399 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2169743 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.213831539 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.215953938 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.216087517 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.218779084 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.222332127 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.21445031 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.218163938 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.216320552 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.217180569 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217491931 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.219107094 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.215167976 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.214615463 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.216259519 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.216986317 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.218744604 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.219280791 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.217250502 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.21895207 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.218721947 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.218824135 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.221212981 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.22603706 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.223460062 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.215286103 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.217812379 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.218165262 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.220460036 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217791957 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.217846364 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.219591774 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.219035373 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.217125733 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.218727662 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.217639653 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.222187705 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.234138479 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.239241643 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218354843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.218783792 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.221779877 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.21930922 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.216316247 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.219758241 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.221917094 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.22259286 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.225499647 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.219595872 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.226203845 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238285346 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.219767304 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.2238119 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.222345517 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.225725103 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.222030412 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21972006 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.219930518 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.22428658 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.234958918 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221705049 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229508412 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246464678 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.238646567 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.220701967 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.220132807 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.220288345 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.220389547 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.223436628 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.220846946 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.222124432 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221901748 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.220299354 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.221863494 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.225883791 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.221988404 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.222859615 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.22230414 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.220441102 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.223484334 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.218199794 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.221498985 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.221160986 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.222221615 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.222428485 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.222601387 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.222790083 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.234609587 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.247693023 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.221632392 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.221463647 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.220762914 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.225330961 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.225001786 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231096831 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.22943284 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.221949236 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.222806965 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.22396468 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.222399311 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.223005534 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.223103406 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.222488813 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223102589 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.220362367 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.235083614 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246472591 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.228990082 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.222928323 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224430057 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.224623999 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225679533 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222642167 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224299499 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.225580443 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.226867217 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.225870034 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.224406655 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.224406371 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.227425471 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.231652171 seconds)
  done (took 720.57070305 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221699021 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22184083 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220822736 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220005852 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220269849 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221507801 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221621526 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221255777 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.220997995 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220837574 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.221937423 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22213858 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2244232 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224239037 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223767417 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22416483 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223771952 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223517983 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224141619 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223883394 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225200157 seconds)
  done (took 26.817014039 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.226379301 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.224706047 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22377603 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226172629 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224446997 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226171162 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222916494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226493524 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226579495 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223826993 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22634971 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22674718 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.223688676 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.224130428 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223572528 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225718309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.227534911 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224242309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.226226859 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224714185 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226495905 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224503833 seconds)
  done (took 28.102348417 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.227057868 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.22808794 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.227858893 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.225543807 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.228058115 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.225169309 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.228384042 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.227507985 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.227800479 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.230137791 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.226385495 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.229133259 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.233673992 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.231993945 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.230189977 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.227811114 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.228360192 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.2288673 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.226681422 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.225899283 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.234125297 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.245274413 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.225993632 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.227072875 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.229075811 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.22783008 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.228059979 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.227816876 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.230251848 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.232358241 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.228741788 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.229091292 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.230987072 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.227947949 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.229579689 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.232578978 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.230077067 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.227605337 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.229439499 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.236999357 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.245726939 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.228959344 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.236888092 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.249521379 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.228786624 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.233544797 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.235377362 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.228710072 seconds)
  done (took 60.211566509 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.230738027 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.230203146 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.227824163 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.228411221 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.230912563 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.23025171 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.230001258 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.22930761 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.227495945 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.227349584 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.23027122 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.227995972 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.228232021 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.230819891 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.231715414 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.226873712 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.2287264 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.228450018 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.228365853 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.228437934 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.229824439 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.231317294 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.231735922 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.229733293 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.231566652 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.229461658 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.229430381 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.231552079 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.228886716 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.228983006 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.231777656 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.231453333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.232021934 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.228659464 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.229013438 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.231542644 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.232336337 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.229679443 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.232140218 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.229549668 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.233469252 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.232023092 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.233691023 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.23309973 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.229980688 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.230435941 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.231647674 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.230518622 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.231067049 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.23335714 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.233687899 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.231016692 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.232402579 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.230526634 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.233436668 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.232710644 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.230607932 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.230029656 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.233184059 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.231385628 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.231527155 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.233348629 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.23072053 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.233717628 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.232945283 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.232049096 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.231661632 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.23387455 seconds)
  done (took 84.84263373 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.233533101 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.233713211 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234289103 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234236688 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234199087 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.235287863 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234394601 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.23414561 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.234716316 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234575486 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234651904 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.234315925 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.234380578 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.235082705 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.234595534 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234731395 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.235342255 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234056671 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23579123 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234757816 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.234172524 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.23488671 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235613764 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.235277514 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234969151 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.235309441 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235639675 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.236137304 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235100137 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.236759381 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237460517 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.236165774 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.236870384 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.236067213 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.237205075 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.235699751 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.236507104 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23540592 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.236131242 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236311203 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.236155941 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23632952 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236239577 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.237102686 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237518045 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.237349198 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.237281665 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.238431674 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.23804309 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.236567675 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.237260737 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237510374 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236572056 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237312462 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.238172936 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.237299943 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236672402 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236748746 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237746698 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.238179904 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237643124 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.2379332 seconds)
  done (took 77.784201063 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237832253 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238342543 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.234601101 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.235347001 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238087953 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235218128 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238106215 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.238080319 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237352571 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.238493816 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239777181 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236663506 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239442342 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24018922 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237516773 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237823659 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237428892 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236749752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238979737 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236256718 seconds)
  done (took 25.909719418 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.237016847 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.239353293 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.237748083 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.235988432 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.238551699 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.236556216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.239337481 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240368892 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237272465 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239797299 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.239824701 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.239618782 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236618137 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236314064 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.239819496 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.237949398 seconds)
  done (took 20.970036131 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.238669013 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.240675422 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.239912513 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.241575283 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.23706175 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.238130046 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.240171721 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.236245161 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.23773196 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.239949916 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.240481333 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.240575351 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.23948969 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.239343201 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.239002553 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.241434086 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.237469221 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.239081178 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.241085794 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.241598111 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.240958229 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.2384867 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.241007696 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.241491446 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.239328397 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.239132183 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.23958043 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.240264526 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.239405399 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.242646596 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.238060485 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.240392495 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.239413568 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.240311248 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.241991638 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.239476039 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.242300944 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.241066774 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.243518466 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.242090069 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.242005697 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.239675654 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.242854072 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.244008672 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.240889251 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.243728958 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.241810653 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.241416091 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.240802076 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.240043342 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.242435448 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.242320561 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.242980935 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.243371549 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.242811076 seconds)
  done (took 69.394236014 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244273239 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.243165287 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24085996 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.243474189 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.24337821 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.241446953 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243683044 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.242714465 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241189741 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.242880554 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.241756662 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.245688495 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240982681 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.244331405 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.242467532 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244387187 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24063008 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.241984356 seconds)
  done (took 23.531474855 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243049822 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242086894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.247487472 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244687221 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.244664951 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24825059 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246009532 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.247957748 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248565972 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.246238531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245558081 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.248170876 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247078303 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.246108067 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243843142 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242157017 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.245012696 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246006322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.242254606 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243723871 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245591307 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245908855 seconds)
  done (took 28.563840578 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.243892507 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.245005113 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.245117594 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.260538506 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.261954808 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.245393938 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.244646473 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.245321373 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.266971448 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.293336102 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.286975445 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.261384796 seconds)
  done (took 16.265223186 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244380393 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246371234 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243728913 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246534948 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247337845 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243879638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244522034 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244445057 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247406608 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24655102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245042669 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247086301 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247304362 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245483586 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246795145 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247007023 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244679077 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243503062 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244774975 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247540446 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244773351 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247460994 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243570323 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246077747 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245689654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245137777 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246708072 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245742197 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244693985 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247484676 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247981643 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24577885 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249006408 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246490845 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248227016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248399659 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245928805 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248134848 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248137724 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246387799 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.249628612 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248684225 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249139185 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24571809 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2489343 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246819667 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247876561 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246451608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247415001 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24948802 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250148962 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246980402 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249264766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249812887 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249330037 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249884824 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24764377 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246889142 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24945878 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248908532 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247972517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24991807 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24727212 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248535039 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249919766 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248437224 seconds)
  done (took 83.473778654 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248626197 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248983246 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249546099 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249384187 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249170843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249712559 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248816379 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248020755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24942568 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249059237 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250599888 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247993295 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24734705 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249145253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249019218 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249834173 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2488664 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249305577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249304587 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251825897 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249090172 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249290847 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249538544 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250493677 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2503432 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252006093 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249602654 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249360181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249138491 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248928396 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249370896 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249679684 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251039057 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.25093875 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250000274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250331891 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250186184 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249987207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251018747 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252488535 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250308036 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253244576 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250769865 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250777936 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250696722 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249857754 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251997038 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251235867 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251801566 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251428081 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25203235 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252755047 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251592281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251871902 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251025315 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251404647 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250944443 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250938906 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251811132 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25423186 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251504001 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252191959 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25391465 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251189325 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251810976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252506093 seconds)
  done (took 83.701461023 seconds)
done (took 1697.849750374 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.415498901 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.3709749 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.252817489 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.259205301 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.253596253 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.278252062 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.264275666 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.25430386 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.253734107 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.253356679 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.253596276 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.440171967 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.248619007 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.253782004 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.253533997 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.347309564 seconds)
  done (took 25.827550419 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.278532291 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.263038696 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.367484365 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.28360051 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.284297877 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.43710212 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317259534 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.262217704 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.421990214 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.301476743 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.253464193 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.285798661 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.262978942 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.253070994 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.280558014 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.434504405 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.496521571 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.25997789 seconds)
  done (took 27.918173299 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.678269732 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.272474269 seconds)
  done (took 5.128001937 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.281757651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.262296989 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.263853698 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.264201347 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.253838048 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.260053413 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.257710674 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.253681237 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.250007185 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.393919248 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.265537312 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.272255627 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.273540706 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.257344116 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.253198238 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.29212453 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.400261094 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.253252955 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.251675573 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.262027364 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.253463786 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.350532129 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.296351093 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.256547699 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.369770889 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.251842829 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.26243811 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.260654294 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.407881156 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.252186392 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.252345386 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.252132064 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.254741249 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.128746212 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.693253954 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.244482246 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.277742956 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.261732665 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.24946659 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.390835292 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.255316162 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.260338362 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.247019559 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.683479834 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.399698847 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.375768483 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.268359341 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.261070775 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.256248431 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.312463214 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.260898781 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.257194122 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.296228547 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.034458714 seconds)
  done (took 80.842968005 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.293542355 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.248101377 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.424384113 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.264949727 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.246787079 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.25253111 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.269524894 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.517347407 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.312335486 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.248389552 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.561400982 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.784935375 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.266569873 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.28172299 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.0903025 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.33760136 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.249424863 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.246843747 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.263360502 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.253805054 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782954266 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.255100889 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.248176625 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.416929711 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.284948848 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.733724414 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.246661463 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.269389376 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.248607618 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.24860821 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.737047513 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.266051984 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.298057746 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.249127032 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.502076231 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.607859372 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.571772232 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.249231611 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.281104601 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.250038629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.266899418 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.730462861 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.58935438 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.249613974 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.271652547 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.738435389 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.250038325 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.251087225 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.254289945 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49368439 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.255861087 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.262510498 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.252509616 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.25504195 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.249396996 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.356887326 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.315714067 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.734342908 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.255947187 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.264343219 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.262370554 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.251703233 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.251537661 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.254183325 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.255701859 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.593798758 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.404827719 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.254792446 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.590307962 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.73324334 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.265276797 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8203311 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.271417145 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.258012662 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.25946146 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.256338805 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.251495291 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740347845 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.297964937 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.250593296 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.581797638 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.25919846 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.561362771 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.268599639 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.257960926 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792597344 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.264306241 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.251443583 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.26261148 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.258001062 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.252850244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.257976107 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.527300622 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.284454334 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.252091295 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.252108551 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.261050331 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.253310677 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.259591923 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.25718813 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.806168505 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.28103642 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.255090157 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.255881526 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.253385834 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.276035355 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.256283231 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.256589166 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513889759 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.258525941 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.264346332 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.252620705 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.260141511 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.259863261 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.408378425 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.2561383 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.55215686 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.262516461 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.254874782 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.260937981 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.253848149 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.311441641 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.254624789 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.25836585 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.156346299 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.558210619 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.271213809 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.259082738 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.255290575 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.264569691 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.260815346 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.257375092 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.276307508 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.256750977 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984898735 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.297201065 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.280631582 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.255501562 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.259189991 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.255111968 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.264293006 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.256936639 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.544611975 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.517796379 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.433767085 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.256970105 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.256321926 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.96415366 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.279135325 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43441683 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.274858236 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.257002642 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501872656 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.469509011 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.258701804 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.256173343 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.258292914 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511124201 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.262669851 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.571629378 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774791703 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.276989036 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.266118739 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991104932 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.982313807 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.263278361 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.258298795 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.567178777 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.273698474 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.256618762 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.254947458 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.258629709 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.272345918 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.275840515 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.256914154 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.257268507 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.25674456 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.390880682 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446191609 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.279600373 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.259425158 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.737372693 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344670136 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.258131985 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.268499087 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.263225737 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.258294719 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.311084822 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.260781737 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.262999464 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.259781774 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.258319379 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806830155 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.258217985 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.265103772 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446745117 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918879593 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.276078045 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.258616273 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.274468218 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.137462901 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.762453102 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.270093776 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.551607982 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.271401236 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.296595925 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.271270472 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.259136221 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764452893 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.259778546 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.258458428 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881689966 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.276295919 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.787009512 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.259105562 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.270325026 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.82164985 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.274703424 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.264605767 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.259311396 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265719488 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549597484 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.267073355 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.272037078 seconds)
  done (took 479.940260024 seconds)
done (took 620.829292159 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.259220891 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.261180125 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.253482279 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.266425344 seconds)
  done (took 10.224699678 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.273409221 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.268745252 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.269548173 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.268274084 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.270558067 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.269193188 seconds)
  done (took 8.804098171 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.262498351 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.263312159 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.268588925 seconds)
  done (took 7.979519153 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.464756644 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.296174334 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.577438429 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.288825655 seconds)
  done (took 8.813043534 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.266997733 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.266516946 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.267163171 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.267375815 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.270206567 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.271910351 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.269985437 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.26786488 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.271194295 seconds)
  done (took 12.60333993 seconds)
done (took 49.610748976 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.246865377 seconds)
    (2/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.780875046 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.128013666 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.24812584 seconds)
    (5/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.279857534 seconds)
    (6/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.347819855 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.058687941 seconds)
    (8/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.259588146 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.29072757 seconds)
    (10/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.102812156 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.511503907 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.327734732 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.288841033 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.251893611 seconds)
    (15/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.284492123 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.127623936 seconds)
    (17/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.827279517 seconds)
    (18/286) benchmarking ("sort", Float64, true)...
    done (took 2.260882907 seconds)
    (19/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.261998848 seconds)
    (20/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.264940303 seconds)
    (21/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.269882497 seconds)
    (22/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.748757838 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.374056755 seconds)
    (24/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.247692266 seconds)
    (25/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.248825946 seconds)
    (26/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.304226511 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.288643258 seconds)
    (28/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.399999454 seconds)
    (29/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.271836624 seconds)
    (30/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.250143299 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.03570559 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.249571939 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 2.267424723 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.262897793 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.274313989 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.371906799 seconds)
    (37/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.405013653 seconds)
    (38/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.851719937 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.296087326 seconds)
    (40/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.589720317 seconds)
    (41/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.270410531 seconds)
    (42/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.281668101 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.162976932 seconds)
    (44/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.256340773 seconds)
    (45/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.291847064 seconds)
    (46/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.454612896 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.073841339 seconds)
    (48/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.371162861 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 2.263072995 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.375442586 seconds)
    (51/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.28798008 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.52372766 seconds)
    (53/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.40590339 seconds)
    (54/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.19377075 seconds)
    (55/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.256240996 seconds)
    (56/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.266687105 seconds)
    (57/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.258521849 seconds)
    (58/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.277391966 seconds)
    (59/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.267703321 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.338878112 seconds)
    (61/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.250437096 seconds)
    (62/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.379357643 seconds)
    (63/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.004960709 seconds)
    (64/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.534215091 seconds)
    (65/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.351220812 seconds)
    (66/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.349078443 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.267636482 seconds)
    (68/286) benchmarking ("sort", BigInt, false)...
    done (took 2.270128489 seconds)
    (69/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.825577703 seconds)
    (70/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.269456532 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.397124159 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.007634354 seconds)
    (73/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.265271423 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.590701655 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.269855553 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.2767101 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.253425196 seconds)
    (78/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.31572478 seconds)
    (79/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.25544226 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.280540501 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 2.271124399 seconds)
    (82/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.347772596 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.997466639 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.287224446 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.275128665 seconds)
    (86/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.258596924 seconds)
    (87/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.288949659 seconds)
    (88/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.253102199 seconds)
    (89/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.259897106 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.111114909 seconds)
    (91/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.004931396 seconds)
    (92/286) benchmarking ("sort", BigInt, true)...
    done (took 2.272203613 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.252964454 seconds)
    (94/286) benchmarking ("sort", Float64, false)...
    done (took 2.272345401 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.263202497 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.282604905 seconds)
    (97/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.401575867 seconds)
    (98/286) benchmarking ("sort", Int8, true)...
    done (took 2.265184367 seconds)
    (99/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.264705771 seconds)
    (100/286) benchmarking ("sort", Float32, false)...
    done (took 2.272290088 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.653372885 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.716437915 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.470326167 seconds)
    (104/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.266722463 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.282123256 seconds)
    (106/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.273469964 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.303609996 seconds)
    (108/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.514128608 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.098014215 seconds)
    (110/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.294802942 seconds)
    (111/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.277995532 seconds)
    (112/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.265062246 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.78404945 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.295398034 seconds)
    (115/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.252652248 seconds)
    (116/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.27893285 seconds)
    (117/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.25601109 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.52906597 seconds)
    (119/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.2544031 seconds)
    (120/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.374217462 seconds)
    (121/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.170304128 seconds)
    (122/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.287093421 seconds)
    (123/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.40641685 seconds)
    (124/286) benchmarking ("sort", Int8, false)...
    done (took 2.267734209 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.995412201 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.552953212 seconds)
    (127/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.583963415 seconds)
    (128/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.29044535 seconds)
    (129/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.255983828 seconds)
    (130/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.263582329 seconds)
    (131/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.634064699 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.267821607 seconds)
    (133/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.270728279 seconds)
    (134/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.85298804 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.393595587 seconds)
    (136/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.09916897 seconds)
    (137/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.284269654 seconds)
    (138/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.412146902 seconds)
    (139/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.263150861 seconds)
    (140/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.275716719 seconds)
    (141/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.27562617 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.274102508 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.257102466 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.026079477 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.301092329 seconds)
    (146/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.757014211 seconds)
    (147/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.26264452 seconds)
    (148/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.269584046 seconds)
    (149/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.26237664 seconds)
    (150/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.28034907 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.296897911 seconds)
    (152/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.29418371 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.272377349 seconds)
    (154/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.256533392 seconds)
    (155/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.442894373 seconds)
    (156/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.371088657 seconds)
    (157/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.28414171 seconds)
    (158/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.282750968 seconds)
    (159/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.261434446 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.27079016 seconds)
    (161/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.382372652 seconds)
    (162/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.594942502 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.26765621 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.276766623 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.272389916 seconds)
    (166/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.394351813 seconds)
    (167/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.269864319 seconds)
    (168/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.287799689 seconds)
    (169/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.25865202 seconds)
    (170/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.261042733 seconds)
    (171/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.25794317 seconds)
    (172/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.313306379 seconds)
    (173/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.475271747 seconds)
    (174/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.294860807 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.136811424 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.264818576 seconds)
    (177/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.28679386 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.303041924 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.258467682 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.896315734 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.32979268 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.2893834 seconds)
    (183/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.263255235 seconds)
    (184/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.280379307 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.314922378 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.301952899 seconds)
    (187/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.194689244 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.666751783 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.291423869 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.102497378 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.285598499 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.263201416 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 2.290627317 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.332375955 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.301319382 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.262801755 seconds)
    (197/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.396380999 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.288201998 seconds)
    (199/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.266942878 seconds)
    (200/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.286660824 seconds)
    (201/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.360888885 seconds)
    (202/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.338163924 seconds)
    (203/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.261266635 seconds)
    (204/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.339756807 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.202104772 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.263518077 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.275794228 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.490345147 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.597144009 seconds)
    (210/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.990667682 seconds)
    (211/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.301345115 seconds)
    (212/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.606163054 seconds)
    (213/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.006627638 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.014736202 seconds)
    (215/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.362286296 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.339416475 seconds)
    (217/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.179511612 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.375374397 seconds)
    (219/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.301735561 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.264008884 seconds)
    (221/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.285806867 seconds)
    (222/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.299633059 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.300624537 seconds)
    (224/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.263272348 seconds)
    (225/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.286094956 seconds)
    (226/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.279628577 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.317877196 seconds)
    (228/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.267165754 seconds)
    (229/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.270216314 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.662558075 seconds)
    (231/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.419092528 seconds)
    (232/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.273607619 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.283238918 seconds)
    (234/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.287436985 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.299192235 seconds)
    (236/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.559746307 seconds)
    (237/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.38577156 seconds)
    (238/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.982716807 seconds)
    (239/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.083285302 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.314307995 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.822020757 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.405783756 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.148991165 seconds)
    (244/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.749450619 seconds)
    (245/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.28493874 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.48651076 seconds)
    (247/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.651490476 seconds)
    (248/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.366097143 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.304157015 seconds)
    (250/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.272975101 seconds)
    (251/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.316287346 seconds)
    (252/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.386655625 seconds)
    (253/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.26460252 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.664968213 seconds)
    (255/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.29130782 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.270996632 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.300756636 seconds)
    (258/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.184486243 seconds)
    (259/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.3482022 seconds)
    (260/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.266610757 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.733833431 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.277965715 seconds)
    (263/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.286564965 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.363186389 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.390784844 seconds)
    (266/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.295698095 seconds)
    (267/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.267295678 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.373281644 seconds)
    (269/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.276756647 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.402503998 seconds)
    (271/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.363601475 seconds)
    (272/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.266808867 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.278442385 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.881876025 seconds)
    (275/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.040292029 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.322156275 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.666124127 seconds)
    (278/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.786689566 seconds)
    (279/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.306224402 seconds)
    (280/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.306546714 seconds)
    (281/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.289533171 seconds)
    (282/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.285743998 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.309332864 seconds)
    (284/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.302471322 seconds)
    (285/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.315264192 seconds)
    (286/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.267085103 seconds)
  done (took 547.028148504 seconds)
done (took 548.212615327 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.313347507 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3245236 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.291744859 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.312491898 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.403379974 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.467166103 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.302412556 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.293341914 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.33981147 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.34278592 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.290561924 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.468664501 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.292534493 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.291365148 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.292357829 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322251561 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.282254522 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.298520307 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.309716043 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.301271694 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.308023249 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.291678782 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.343488232 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.467570407 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.295977639 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.295113466 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.295906552 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.312574332 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.404989999 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.296851772 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.295445045 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.304669741 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.28190546 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.296879784 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.28910877 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.313235155 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.303835814 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.30419528 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.297055582 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.325277226 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.294321871 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.296832785 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.296268649 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.295062353 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.29400322 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.298298669 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.294484456 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.300720934 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323498208 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.324593672 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.293506152 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.31032207 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.296761414 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.295012874 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.304788511 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.2932978 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.299576634 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.328607513 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.312752211 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.326896781 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.290001448 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.305046704 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.29735138 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.31195196 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.301984449 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.28375763 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.297357268 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.299860339 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.299074106 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.306695263 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.285069678 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.308752155 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.297219889 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.310483769 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.327507072 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.285496175 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.298419611 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.296302268 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.304237271 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.294952501 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.306591793 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324990224 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.301650492 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.297447966 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324744066 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.473699491 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.308349983 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.297916615 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.308042662 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.318072618 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.305079013 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.307950168 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.300888269 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.29352924 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.306298273 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.301427021 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.300640717 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.300594722 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.304487728 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.3082735 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.297623472 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335843561 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.295594063 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.29573879 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.298152728 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.312045898 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.299329038 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.30442365 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.321589774 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.346523912 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.299524011 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.296031544 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.3053661 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.33234084 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.307911932 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.301885617 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.294230977 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.29557476 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.307025882 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.320464065 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.301061089 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.296873459 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333705464 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.301571058 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.296641605 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.289264108 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.30659684 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327846376 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.420919949 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.309574464 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.331741996 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.298643127 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.30372776 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.330078035 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.333177626 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.331608628 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.303289672 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.333066613 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.316668293 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.297013896 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.310289352 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.311610746 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.300532842 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.304207714 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.295362396 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.334658194 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.330343561 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331576306 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.322718467 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.42240003 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.300297678 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.290990882 seconds)
done (took 216.829693472 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.360670437 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.299684804 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.384673617 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.299073787 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.398133195 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.397596612 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.296178179 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.298405096 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.297268197 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.674178235 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.296613161 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.29720337 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.296769733 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.296704532 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.383145578 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.299460925 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.295851477 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.636514631 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.298708434 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.372597953 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.294635454 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.296401342 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.298022804 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.677555644 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.297380696 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.293994799 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.371874752 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.298688331 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.643829074 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.293988362 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.296724566 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.643847345 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.389719185 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.316417816 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.308320547 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.306516703 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.397040544 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.316599056 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.37984345 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.380020734 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.386208168 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.336926743 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.29448071 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.299045863 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.300373783 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.301026732 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.298986644 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.325831517 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.29872673 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.298539955 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.643145644 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.309679161 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.307121701 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.29754814 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.298864953 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.320350401 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.300403029 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.301721748 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.392665944 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.301218209 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.363391659 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.701604499 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.675351937 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.302037064 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.29872384 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.298835076 seconds)
  done (took 102.148429843 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.370376965 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.376429422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.411124804 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318488763 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.353748724 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.415060196 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.32075191 seconds)
  done (took 10.781557251 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.308841865 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.30362601 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352312293 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.352196178 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.301569928 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.515942012 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.302675403 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.313413958 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.299812522 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.381779494 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.305084 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.304370787 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.311118656 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.300538766 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351733644 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.316762215 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.417992294 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.304935577 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.304059501 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.454880536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.301838116 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.310076429 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.377411215 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.316340996 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.305488239 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.31063114 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.222564425 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.303805745 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.302059895 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.303684882 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.301720754 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.40498629 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.305044766 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.302677273 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.301898501 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463042376 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.304104787 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.301115671 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.304356813 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.305852644 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.304329182 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.304532134 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.304875668 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.302124658 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.304412709 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.327014243 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.304390117 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.304557348 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.305532139 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.305627492 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.378516709 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306162416 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.302378882 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.302228662 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.384447378 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312845173 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.307283022 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.304480823 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.306957255 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.302893013 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.456841306 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355024436 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.305937211 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35484418 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.307477307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.307091559 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.307052414 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.307008014 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398599646 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.306995299 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.35497055 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.305011721 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.528482859 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.331171906 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309382076 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.3102358 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.309856007 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306943006 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.305121002 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.314013365 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.306145422 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.309026855 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.314270508 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.305246557 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304613528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.491579048 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.463379884 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.305266029 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.320276439 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.315133215 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.307028609 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.381420467 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.308196449 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.305531453 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360097281 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.422591527 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.386455909 seconds)
  done (took 135.336343361 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.313080479 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.318657397 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.311855268 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.330263744 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.309393049 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.309771939 seconds)
  done (took 9.114847965 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.31082441 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.310137688 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.308638304 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.309654707 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.308099285 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.309598924 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.309111568 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.311607983 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.313943234 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.310855383 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.31006661 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.310586423 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.31088664 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.309458195 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.310127475 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.309696561 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.309762213 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.30831241 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.310606738 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309739603 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.31009461 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.310473007 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.311132273 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.312713214 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.314748087 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.311121545 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.318379847 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.312430227 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.309489869 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.31855923 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.329470487 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.311503157 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.312556279 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.317089151 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.315524072 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.313222822 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314462175 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.313318976 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.31077158 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.313040536 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.313656161 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.311323311 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.312825363 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.314423627 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.315631722 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.318207378 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.316737851 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.319542308 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.313207658 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.312720804 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.313377893 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.313472312 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.312502712 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.313847462 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.316572264 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333755126 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.318013396 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.314031887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.314578371 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.316204702 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.314050608 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.315551824 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.315607558 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.317045981 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.311494798 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.313615197 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.315995567 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.316841842 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313234045 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.314365321 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.315112839 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.312826714 seconds)
  done (took 96.796635214 seconds)
done (took 355.388858662 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.727864297 seconds)
  done (took 3.955044373 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.421126822 seconds)
  done (took 3.651233478 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.019879656 seconds)
  done (took 22.255702328 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.373888513 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.344465766 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.331797232 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.313922464 seconds)
  done (took 10.592096445 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.517667303 seconds)
  done (took 3.745658601 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.307545977 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.336511892 seconds)
  done (took 5.87453376 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.588295011 seconds)
  done (took 3.816459625 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.63767536 seconds)
  done (took 3.875520927 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.309705652 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.328072049 seconds)
  done (took 5.875841866 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.309164259 seconds)
  done (took 3.541693696 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.139443493 seconds)
  done (took 16.376116309 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.311792422 seconds)
  done (took 3.54332823 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.361344219 seconds)
  done (took 3.589276369 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.817957023 seconds)
  done (took 6.045512155 seconds)
done (took 97.965966532 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.309216043 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.308735269 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.315712196 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.308810976 seconds)
  done (took 10.471590235 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.350050868 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.357386228 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.350309941 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.361881065 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.352299033 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.350183177 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.342263628 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.342738283 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.361912483 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.353514313 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.352721902 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.352140373 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.350632629 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.34298061 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.352164768 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.352856265 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.361134756 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.352589798 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.342576361 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.353482018 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.319093178 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.362627362 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.359112302 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.320202331 seconds)
  done (took 33.626431391 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.825481494 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.390196443 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.471826346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.369229323 seconds)
  done (took 7.287739817 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.370828854 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.372254547 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.384051219 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.42107981 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.447976353 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.383270399 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.344680806 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.33970459 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.325584175 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.371708985 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.447661717 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.387232942 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.458301598 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.318169499 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.505301355 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.317933679 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.318691707 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.370849568 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.4225005 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.436339337 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.319533887 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370045609 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.373981304 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.388751338 seconds)
  done (took 34.429159639 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.319030519 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.337071805 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.318965843 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.317114058 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.326531397 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.318263472 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.319438144 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.320354886 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.318718201 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.324651453 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.318303058 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.330713537 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.318685291 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.31918481 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.325854886 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.320060925 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.32653428 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.317710449 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.319840681 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.326611851 seconds)
  done (took 27.675670959 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.314423441 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.312390441 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.666056657 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.569747179 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.317017136 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.31272613 seconds)
  done (took 13.725485489 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.388611664 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.54799622 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.327855398 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.669088626 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.756852943 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.32712764 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.322420259 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.563324828 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.877862787 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.860410799 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.383685298 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.388119218 seconds)
  done (took 19.647146884 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.316306353 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.322502453 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.32193784 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.337128397 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.373831888 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.34176803 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.328907025 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.316192599 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.381137162 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.394877874 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.343325138 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.378080886 seconds)
  done (took 21.392149108 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432170542 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315635585 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316432819 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397767684 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340665796 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527278417 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400818903 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042983386 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.340035253 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591503428 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315551085 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441058118 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.572120127 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325747429 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323562944 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.307094934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55000361 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790262101 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319848062 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330815896 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350164612 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317328182 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333795586 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.535510659 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326151925 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319021698 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.579281774 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318598404 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605572521 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338429197 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329257893 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318434406 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593271984 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972049373 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432592255 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528390913 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330034962 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342591482 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.319496921 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.333802337 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321556435 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324072163 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330738753 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31996704 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318636288 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320265408 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053505892 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.344761665 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.317236824 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321415906 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574931978 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422541862 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.3249809 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320115182 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381457378 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327886138 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.324251584 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412672682 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900195781 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31973128 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342431074 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.326658288 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326043015 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343125999 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938302153 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.327873209 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.325310293 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325485072 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321489812 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335357492 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338245958 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322524762 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.347378139 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322129983 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017960312 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.329078329 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32998707 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854717262 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334641158 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.325775128 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551417338 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322606723 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322389526 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.322170525 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320545873 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009070021 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331924218 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.322316774 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344443173 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046934076 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.55332129 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35017346 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347338342 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.546810416 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.308651726 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325252318 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.323234538 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349123285 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346661843 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.029872496 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341829099 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.32838671 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579828287 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.535365887 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328398593 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.327114875 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807078359 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341711183 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.36396429 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.323195509 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.541698746 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.910931699 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340739416 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32396122 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348998313 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324414373 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042591542 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325445131 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.448355403 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327062405 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588123073 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.094799621 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326258334 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393705611 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328764901 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325146531 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324496749 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327203413 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325111642 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.528234799 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355452559 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.342723992 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.327647848 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326776745 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.33484889 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337277962 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.327773225 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548880124 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325557134 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608384749 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326839907 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328867353 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326451804 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.549724451 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.330956924 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.670619513 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586313399 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33687397 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339661887 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3470171 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346314456 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426887607 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350486379 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.327037769 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590382893 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.331163795 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.331545437 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326809558 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329612344 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33524484 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.334382861 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32664286 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929212339 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30688586 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329726991 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218080696 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.342957401 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396838793 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334858185 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538955116 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.33697498 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348818412 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.341750462 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.332585992 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559385525 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340032187 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.328590101 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408233721 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.802106522 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929095019 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347873654 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.329498842 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.326992102 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.327177626 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330984966 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330682236 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329937285 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540152404 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352088731 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330461475 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937124995 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338867289 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330290723 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.337078353 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344351604 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.336194468 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331827343 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.329983642 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330780422 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344540861 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.347862399 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475174328 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.345128478 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330363942 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.847436706 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33753672 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331808347 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33076002 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366636736 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330678098 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152071033 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588676832 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330148228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595579311 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338340258 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.364099436 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.330375371 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332401395 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343703472 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.343584408 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36633926 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.341748173 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331403721 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334177263 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898114247 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058519916 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86654049 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334987713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.339188303 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339745889 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.045777252 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349758615 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332009797 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565794402 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061709657 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350760329 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811499661 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.360823607 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091744643 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596988499 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56471863 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333521145 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.334572281 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594430625 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54973421 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368613594 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338029248 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340440118 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.320423513 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890694023 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360297568 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41545136 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0489721 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352834183 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336308519 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.363535493 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.341911704 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739592787 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353788 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334369505 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337852533 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34793318 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142196244 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337561762 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335416765 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95668988 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349232096 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.818476207 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353134359 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549227765 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.353384085 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.34336922 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.334606067 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.364185405 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.598076241 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594209734 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339965082 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348720979 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879684961 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.193256134 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.342231117 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335602991 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055734054 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337339926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639831211 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.358206028 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.347651584 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345583788 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336592737 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337623016 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.332851673 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344605238 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313560333 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813477097 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.34466551 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364701643 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373756596 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186335514 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.5933417 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.351981249 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.921307002 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570754364 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351929828 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370234328 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.342910388 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346348529 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.332149648 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339625058 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572555791 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371843908 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569757841 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338774943 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.325603727 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417391824 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574736262 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33871912 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350803719 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597339864 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.343447583 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.344862118 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061601126 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368196808 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352273997 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348011646 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344486477 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385367059 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41079899 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553687 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.359570566 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.3512758 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74823008 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375153007 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349719296 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.355213872 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43494442 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341693579 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.347595425 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.117878768 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929128026 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090595427 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938447167 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602949151 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348754654 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344227036 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341496844 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490960505 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34238743 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615465341 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341960853 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.358120445 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3688407 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350111388 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359833392 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557474857 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619103228 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34219586 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356676244 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34611032 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.342113811 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354546257 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.553370724 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824087569 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882153257 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345559598 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355798893 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.065444034 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636879376 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343144147 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343071456 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344610302 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.351798989 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.356701311 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.349853567 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344813951 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496805672 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6001588 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015978176 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.373939564 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.372091435 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.117268821 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344713807 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601012342 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341778883 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564505472 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937590349 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.047880274 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612945401 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417005268 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562075131 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.351164821 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493506962 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.348327301 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349666834 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345794036 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189285802 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.343745722 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.355423801 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938747633 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613799902 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.349228833 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.347635206 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376587246 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.355452828 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569839213 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045778518 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571226887 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357120509 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355378384 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345908346 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936558885 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611715918 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351287677 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.35098936 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588015947 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352424698 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373259373 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.800026173 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.344567142 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888958474 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.318028325 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368496875 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350311347 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.054402991 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94798583 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.360775244 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832654428 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348250815 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351207026 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62750871 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.354217953 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352189214 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628249101 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.351262729 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362402726 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566188508 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.940669044 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115809663 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.359607727 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359940767 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.353682169 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349069204 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382266185 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353789003 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355810825 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.772691073 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367700673 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34949616 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362882786 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.348906204 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358640037 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.351352937 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348462327 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.354840495 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.33701943 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.34916419 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35904482 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450658361 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914341804 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373983305 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.026068065 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.680670023 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605478598 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364256456 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.340172426 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.354176454 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351141376 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349672344 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351010072 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35142256 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899104782 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.366448724 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.365137004 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355082755 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.56666004 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563238433 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350452437 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575800205 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371423884 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372825977 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.338337396 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351680529 seconds)
  done (took 955.311205749 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.397507677 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.395848771 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.368104802 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.428050141 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364205002 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.401950474 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.37825367 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.380754817 seconds)
  done (took 20.382662453 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.355540612 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.36887126 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.366066908 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.365321605 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.363122078 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.829447435 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.374796998 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.364143641 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.364337307 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.363723929 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.355978118 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.023192971 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.38690774 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.353599028 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.35335296 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.362122217 seconds)
  done (took 32.230929897 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.305349245 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.489204186 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.24830143 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.394816105 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.402141959 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.359310121 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.579459059 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.382018296 seconds)
  done (took 26.432628778 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.362979554 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.364567939 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.365607476 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.365568719 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.365632142 seconds)
  done (took 8.095526747 seconds)
done (took 1211.938471657 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.358148518 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.361173958 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.358847523 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.360593336 seconds)
  done (took 6.711301913 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.342136422 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.341807105 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.344331055 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.361841081 seconds)
  done (took 9.662581893 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.058559057 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.038747728 seconds)
  done (took 5.369134213 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.356139947 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.116902613 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.094715091 seconds)
  done (took 7.839982444 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.654829226 seconds)
  done (took 2.927618735 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.761337473 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.74073493 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.546287396 seconds)
  done (took 6.32125363 seconds)
done (took 40.104526813 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.366833248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.607637909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.512328075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.356698693 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.517068005 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.512079907 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.161689186 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.368554716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.355081864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.360510419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.357840866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.515791994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.070379359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.605181405 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.070530254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.606965122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.516534546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.357246851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.370352684 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.356007269 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.159780407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.361201046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.355867824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.369963995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.517282304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.50387996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.355752808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.62320126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.356544077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.356507656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.504749042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.362136604 seconds)
  done (took 82.047163757 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.35675844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.373817209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.371785109 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.357300651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.358388479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.368563966 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.356098214 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.357381611 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.358037772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.356298507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.356796347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.358502956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.358710395 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.373146899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.359793503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.36893274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.356982701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.3610744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.376562759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376389703 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.357241913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.36167395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.35874705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.370877168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.364609657 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.369041407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.37281822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.367069016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.356957564 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358096714 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.373916653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.357685529 seconds)
  done (took 76.905885454 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.372947475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.372925932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.361353756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.358804946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.376493792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.359335359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.35886258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.369796646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.362105359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36053774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.359576298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.360419029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.362517719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.360803378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.360880459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.359871852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.360456047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.377340232 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.367872525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.373323512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.361258474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.365514501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.368244271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.36059613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.394771383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.362381609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.36524891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.361435835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.362334485 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.384258281 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.361528628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.360986734 seconds)
  done (took 76.982487292 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.562922269 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.368688212 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.368775295 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.307005892 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.370052243 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.369082367 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.362856436 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.558845358 seconds)
  done (took 14.54665629 seconds)
done (took 251.755925846 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.364465713 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.372377963 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.575103709 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.391617386 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.361377628 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.394810911 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.391109711 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.583772802 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.353647247 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.61063695 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.390979739 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.394425482 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.36128686 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.407348318 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.641340845 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.518601536 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.252028925 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.358686293 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.707327359 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.384854044 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.637718477 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.368244676 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.63968678 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.339266345 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.393354102 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.365397299 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.36650589 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.238575436 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.40809837 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.718244944 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.386466816 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.356873281 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.471846809 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.473087549 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.583294008 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.529306292 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.377795845 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.454865529 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.594933617 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.370032972 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.379344303 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.152677186 seconds)
  done (took 82.702836698 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.371127626 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.49299712 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.371088227 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.372017611 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.374652753 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.494353918 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.468693943 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.370723915 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.373468182 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.372666648 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.372635976 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.370760793 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.372394682 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.372760521 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.37354192 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.373661142 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.372004228 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.373816134 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.374734663 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.417420802 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.495665018 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.396316877 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.366429867 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.371643137 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.474679728 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.508860976 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.371973579 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.367929238 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.416811929 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.373820306 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.375704072 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.417952922 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.373616988 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.374598508 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.48746931 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.473187447 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.394674679 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.37032586 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.488203136 seconds)
  done (took 56.020560956 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.373728489 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.624695068 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.800509901 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.389044621 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.37511359 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.378834026 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.451879656 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.382048312 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.378829322 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.378615049 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.530026098 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.381571296 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.409101768 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.82375112 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.387710056 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.377727846 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.376620204 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.374992754 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.630628585 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389174083 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.473739805 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.382049011 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.454749033 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.390601732 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.398938884 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37609693 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.381477185 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.94459697 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.383340693 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.534024535 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.17002129 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.454042501 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.927667682 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.812452456 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.16743204 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.382810597 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378567144 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.537281035 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.383978674 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377914523 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.455111676 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.38293425 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.802828192 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.059929541 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.399808685 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.3773403 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.969688185 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.542823176 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.62413707 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.389715779 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.829483293 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381427485 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.3797421 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.380430387 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.622100129 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.386533387 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.379014664 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.990472582 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.399946284 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.456035732 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.379434758 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378898112 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.639102828 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.378395402 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.632009099 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.380762032 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.387211785 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.399510929 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.809557905 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382488244 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.080931453 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.398225062 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.379074807 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.535606446 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.634293909 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.000550417 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.38333319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.644549756 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.936341223 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.455626947 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.385197045 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.934845494 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.459152276 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.385634879 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.383056128 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.384495265 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381025196 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.426790314 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.455866962 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.011222867 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.072202571 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.020602586 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.477251516 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.393892472 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.381285346 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.002156201 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.400790127 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.382692988 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.808831507 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084576804 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.398828843 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390460083 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.081095731 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.401817739 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.460967971 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.392480356 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.820501035 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.383376041 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.428092326 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.382229115 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.389206571 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.406114286 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.459841227 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.390388148 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.384006257 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.0511225 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.564555942 seconds)
  done (took 182.255830315 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.375065386 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.37711951 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.376964902 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.379697513 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.375642303 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.384871284 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.374964327 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.375547796 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381701386 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.376416299 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.377234928 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.376871813 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.378324268 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.381789815 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.387704259 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.385967664 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.376634589 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.379905954 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.377762085 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.376809 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.377038649 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.401574318 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.378370595 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.377994874 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.377994418 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.378476008 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.385998801 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.381256473 seconds)
  done (took 63.928841428 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.385220529 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.93150767 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.389575684 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.510393657 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.410161503 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.383499088 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.509607017 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.444674578 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.387065542 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.38190761 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.382341405 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.683246001 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.385833432 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.89795548 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.573709214 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.515276277 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.904055173 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.404157093 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.383643004 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.384414697 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.514837625 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.400489393 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.684489652 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.944732343 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.387046555 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.947599501 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.377762262 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.386667305 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.385090491 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.932463647 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.388174399 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.68657358 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.461378082 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.448911141 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.94840831 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.896089947 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.91264776 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.530567806 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.390686379 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.384498167 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.386352875 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.379471221 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.9498391 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.388886076 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.390437737 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.945674779 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.405969812 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.389263406 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.39322934 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.387064149 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.447461765 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.446788871 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.694505635 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.958309887 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.463998358 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.403387485 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.517238697 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.761980327 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.393670113 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.878418792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.397463026 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.958311483 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.41087961 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.37677503 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.388552908 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.39099866 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.536728821 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.520070263 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.886796119 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.411091018 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.884920226 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.558345978 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.389651062 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.387607661 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389326591 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.960014465 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.885980885 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.556495099 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.524845711 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.584500164 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.382353893 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.388533496 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.379621612 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.464454074 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.388974443 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.960809613 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897985058 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.411494108 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.391275373 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.390698912 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.389597789 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.563795393 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.97684018 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.468798873 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.877674457 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.718437322 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.708251227 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.399668052 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.448546124 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.405775755 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.698977307 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.39802009 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.445825034 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.8410915 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.701826599 seconds)
  done (took 165.035232685 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.627923285 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.412486399 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.484415429 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.549070183 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.996930087 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.973585176 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.383718988 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.514322644 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.498239445 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.648598268 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.405530275 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.480048258 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.603107718 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.463651576 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.104776162 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.461996354 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.485105267 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.538738839 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.528636235 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.390273393 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.029005666 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.685403792 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.580643692 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.406229265 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.492317898 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.201715631 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.973349935 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.921017133 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.562421798 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.399291998 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.934787807 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.391207323 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.333789865 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.068854023 seconds)
  done (took 64.83406026 seconds)
done (took 616.056955361 seconds)
SAVING RESULT...
DONE!
