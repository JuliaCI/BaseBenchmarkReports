cset: moving following pidspec: 7236
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.000787836 seconds)
loading group "string"... done (took 0.550797913 seconds)
loading group "linalg"... done (took 8.900465634 seconds)
loading group "parallel"... done (took 0.169823692 seconds)
loading group "find"... done (took 1.439378323 seconds)
loading group "tuple"... done (took 2.102901614 seconds)
loading group "dates"... done (took 1.377038663 seconds)
loading group "micro"... done (took 0.217655778 seconds)
loading group "io"... done (took 0.622328761 seconds)
loading group "scalar"... done (took 43.073477627 seconds)
loading group "sparse"... done (took 13.401401856 seconds)
loading group "broadcast"... done (took 1.091860724 seconds)
loading group "union"... done (took 12.179936289 seconds)
loading group "simd"... done (took 2.53341249 seconds)
loading group "random"... done (took 10.217715182 seconds)
loading group "problem"... done (took 1832.992411405 seconds)
loading group "array"... done (took 25.925988104 seconds)
loading group "misc"... done (took 1.133184594 seconds)
loading group "sort"... done (took 3.806833774 seconds)
loading group "collection"... done (took 18.945032292 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.627227232 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119629505 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.169185807 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.347804576 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211785465 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14709582 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163345781 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.580980746 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.993782727 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211170295 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145256277 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.550486968 seconds)
done (took 5.990506266 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.292924056 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.437501023 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113851587 seconds)
  done (took 1.214735909 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093405315 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177475947 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094797498 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110971072 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110973866 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109474924 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09470103 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11037051 seconds)
  done (took 1.465741623 seconds)
done (took 3.730592163 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.49066319 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.871075734 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.517702052 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.130318039 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158128813 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148318419 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.304158928 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162968193 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.121125609 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085790412 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169737449 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.416634423 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.474972775 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.007863943 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.084876148 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129280838 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083384883 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.776995136 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080303172 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133609002 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.524654642 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117437316 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118349552 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140103155 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19041459 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131502212 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163227464 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.096985818 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.769295247 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104697257 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187714923 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099054647 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161982253 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.251281666 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.095422288 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.098505704 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.79343521 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.178126632 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.11294273 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10109644 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.919856827 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08381722 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.197215696 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103273217 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108958088 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.196261105 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119013015 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081105771 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104924392 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.091335414 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173500156 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.56539341 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109336286 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149029634 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.111234904 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.777968548 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10004587 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159042962 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142627119 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098979738 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.099951598 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107553098 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169808912 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.11274153 seconds)
  done (took 20.424817135 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118254138 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140820673 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094144527 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140994555 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139343192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096449578 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083941337 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095937576 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108932712 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184877615 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137375963 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143993744 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091893342 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083203514 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117945745 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248915196 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.1059756 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121722758 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081236256 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10762365 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140196305 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096814235 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10930473 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109638237 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170579309 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208234258 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112391684 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127314959 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096798798 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101373439 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144146653 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.16494068 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076820493 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094935623 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185238001 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121316051 seconds)
  done (took 5.175140099 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200869335 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116792243 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.192732521 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179530637 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148485935 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168806537 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120013684 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26994409 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.188198834 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181795741 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11944678 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113328591 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078599024 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097709636 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0784036 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.698672986 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183005125 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151542376 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127366225 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103943134 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083716431 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.743808158 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103998668 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082581249 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103483159 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072928508 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.177167819 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104015145 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.3103686 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120672053 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089832012 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13573116 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.219550924 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116756491 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141597275 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10330699 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083356404 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232693511 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093969601 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095413383 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10862949 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135574779 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136824408 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10058405 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094085241 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.242945865 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086864251 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122843441 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.128418462 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198044226 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.149413405 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080900521 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.375442032 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101138834 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107473175 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080880364 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.324999002 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130413633 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.131805887 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081636115 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098395135 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103249643 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080287463 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.758902123 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1105118 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.59420624 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084446385 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156871101 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100187909 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099176018 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089224571 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103926825 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085894487 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120872976 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080756811 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096446181 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08104462 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09599427 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084982867 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116190172 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100927089 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08043354 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16201562 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086877357 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117984718 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101304614 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127241763 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101326688 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080419719 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129750148 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097788883 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08511366 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147993342 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103468359 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099618725 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101712513 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144637311 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09781329 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.20984374 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095975019 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082631728 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125969237 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102148586 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127924421 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104809382 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098845832 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083663315 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09689603 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080018763 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164717984 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083659287 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100173999 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0835541 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111531065 seconds)
  done (took 25.315983178 seconds)
done (took 51.573456179 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.465660479 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095312253 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114046187 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113222401 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112285875 seconds)
  done (took 1.637382863 seconds)
done (took 2.346664686 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.336764957 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1930118 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103508098 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19818452 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088917855 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.20587191 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167316857 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118790984 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198882592 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100704827 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.178965578 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099989902 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08943771 seconds)
  done (took 2.815211884 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095193416 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119642457 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082881969 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110283462 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076481834 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109965128 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092932583 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.130555272 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092863937 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103431947 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077000503 seconds)
  done (took 1.797405269 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091815445 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114302067 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082929055 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107649387 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076912155 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089814929 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107852777 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116867889 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091334359 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103482744 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076712023 seconds)
  done (took 1.765103487 seconds)
done (took 7.075700031 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.052183871 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.468075404 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120224792 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168294223 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343079789 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.21343804 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.528297203 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133668935 seconds)
  done (took 11.917224918 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.132464842 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09853786 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081216739 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098257645 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082407 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099106107 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081828189 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100212062 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083679886 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097331511 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084469955 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099425762 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084063096 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098709351 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.081533247 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099418174 seconds)
  done (took 2.268132837 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119251644 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117865348 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104374048 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108191653 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085989399 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102449221 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087285171 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10358215 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084478221 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.1022117 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107141922 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09019937 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105766502 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08406688 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103804157 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091826822 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100285395 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103441555 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087570322 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104119372 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091366016 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102339622 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105921834 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090600735 seconds)
  done (took 3.197535417 seconds)
done (took 18.088363504 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1709124 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085971907 seconds)
  done (took 0.967526281 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102330187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120231807 seconds)
  done (took 0.941049817 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108004693 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098054969 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136445313 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115715834 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08270652 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098180085 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114746049 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099276357 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081720836 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100579892 seconds)
  done (took 1.75248026 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086474763 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103252539 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091307077 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.121101517 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110025855 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085068776 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103450643 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086093647 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104764229 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080940456 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106785755 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117973153 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088727845 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120351466 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086956303 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10506149 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109462074 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086033186 seconds)
  done (took 2.513140433 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08230638 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083767773 seconds)
  done (took 0.884907868 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085110763 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097239329 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085233581 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101368768 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081408604 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097747168 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080192015 seconds)
  done (took 1.347394077 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.515519459 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261816883 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339090088 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100203974 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153845635 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.374454028 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137977342 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114296993 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114736474 seconds)
  done (took 2.873262375 seconds)
done (took 11.99685332 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094170016 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.191749563 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.552190539 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120476755 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080404523 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.16111214 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.268485024 seconds)
done (took 2.189212781 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360574458 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.126310677 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090273895 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080613737 seconds)
  done (took 1.375330526 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081237516 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104526005 seconds)
  done (took 0.910945693 seconds)
done (took 3.015604144 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080354231 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079707133 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.094561976 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080153024 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.09409832 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077770283 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.131660914 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0793455 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098207337 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077091717 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.09795139 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079582595 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097536849 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079673249 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077268606 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094985806 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079346941 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097156416 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077334462 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093713399 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077402108 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096101994 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077830053 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0772005 seconds)
  done (took 2.855822196 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100690819 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.220913552 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086605014 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.103206555 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084195799 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103059543 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102439205 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081000045 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.103027494 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08277685 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101117422 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084908641 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099883031 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083955872 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099062743 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101144849 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08713759 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098652208 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0829484 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101734851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086516956 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097208212 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084264465 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102744914 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101033177 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08437375 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099793472 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08153435 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10345437 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084331779 seconds)
  done (took 3.661698999 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088501349 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077141076 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096072575 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089586341 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09497643 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081516894 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095712465 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07875664 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095833174 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077276073 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097395969 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.07764494 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094656847 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07882109 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079053302 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102219497 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113808077 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078033554 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078191193 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095815697 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083858869 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095291663 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080551958 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095480745 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078202619 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095010354 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078633716 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078095524 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095918931 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077974801 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100341577 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084875416 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094918308 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091324428 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101429273 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077426438 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103618925 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07763331 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095999602 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07741087 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09439849 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078183499 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077586897 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105730629 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081262705 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096304216 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078044729 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095753285 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079219918 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098873381 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077822331 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095752762 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080135899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096446918 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084847005 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077668284 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096320258 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077963375 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096368914 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077479541 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094300634 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078183929 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102234327 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078944771 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120090548 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089539983 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095629378 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079968005 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099377575 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086906908 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097717685 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097038344 seconds)
  done (took 7.132822556 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083197089 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106135552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080589875 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097825643 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076146646 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078561127 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102768217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095543444 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080733491 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115092902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078958656 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097386563 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080652447 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099374324 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079330253 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097074173 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089489782 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093344165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07829408 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099390469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079126411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103502356 seconds)
  done (took 2.728053323 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.226590298 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106215631 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145390254 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116500517 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098543644 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113008871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103354334 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087106185 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103180658 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088413107 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106268666 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085848487 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116218463 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10577727 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106213916 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090189832 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103412475 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090242181 seconds)
  done (took 2.725723877 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094771862 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098894586 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10644106 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099049555 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081593781 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102007594 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087033627 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115223243 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10138841 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.081645805 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109816095 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084475977 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102306028 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081889524 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101129928 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081300773 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101265798 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081545611 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108955592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105459291 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088866475 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109666026 seconds)
  done (took 2.863838701 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099169084 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10092615 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112934521 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102354708 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077068491 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099069455 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088735318 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099026779 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108090749 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08329369 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09960041 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080647761 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106126204 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081961228 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105617655 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081919134 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101371427 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082194065 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100912264 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07746938 seconds)
  done (took 2.626349473 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126641504 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117376236 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098206526 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127313005 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117212623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099094114 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126694836 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116825054 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099261639 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12952872 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098655155 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116702961 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12762167 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105412219 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115898251 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128421009 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11081753 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126975609 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116558091 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099881051 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130263013 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116705386 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109694172 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116631051 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098104633 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119818704 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116408661 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106584258 seconds)
  done (took 3.961880648 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081939981 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081915601 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096530543 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079126159 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096351977 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07940415 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.097221177 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079786643 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081271073 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096497035 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081450196 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098493483 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081789032 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098495586 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080999795 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099038207 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082086204 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07904055 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096961241 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079237323 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099514345 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081766565 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099123122 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079513756 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078311776 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099199864 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079042453 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097378403 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081126483 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097241007 seconds)
  done (took 3.382492055 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091041006 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10572966 seconds)
  done (took 0.938296278 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080138275 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116835879 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079163246 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103433969 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087705135 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100417254 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092957543 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10557543 seconds)
  done (took 1.509072973 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.107389672 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120492387 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08805562 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.1116904 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.101821815 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.120194302 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169321997 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087413742 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107960727 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083544114 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120060459 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082415634 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111180981 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105824137 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091912724 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11600436 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080155934 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.11104238 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089992988 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102744468 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089348734 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117541328 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093811475 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108873191 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085149114 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11252176 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113850492 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.094692677 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106246544 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095449307 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108137147 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076798127 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105565783 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087465837 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098701225 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.101019296 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118733805 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087142515 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110358341 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087844502 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111225603 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094715259 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093309926 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106976203 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098840898 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104960979 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088014689 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095524853 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08302852 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104614106 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078416133 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104181093 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077482816 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109073232 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092288587 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119069062 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08503145 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105097181 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087415702 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104294735 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089392921 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.1045449 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111056907 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086472544 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110778433 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09188655 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109100242 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078809009 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094528206 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081608905 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109765802 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108388882 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112964859 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08860192 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107219512 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081219456 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106779019 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088873642 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109086304 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111713475 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088215516 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108649839 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093549937 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104385737 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08723777 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10753969 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08460561 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103796646 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083277585 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121659933 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084910573 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098463491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082861134 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112192082 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087130632 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10488461 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084100878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11125942 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076888139 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10569661 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088643635 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107273151 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09559408 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107069746 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105561692 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091833849 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.11297724 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087897375 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10389363 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078884344 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107106031 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085056887 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109270977 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077541538 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106443382 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087176003 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10633408 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093861386 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102956194 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087865731 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112038766 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094317372 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103496642 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08028337 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105326897 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088429107 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109721752 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094588543 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104441212 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078560532 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096325225 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091666409 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105953803 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089587984 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106728129 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088570068 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096120573 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081702316 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106529169 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093663595 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105847707 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107944908 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09295455 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.108654703 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086864651 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111083276 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086860174 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101270729 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093403938 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106440224 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07917672 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110950772 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088154121 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.104339659 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0884519 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110957581 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088559399 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107441746 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085784454 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106999194 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089219254 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101968233 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088981368 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10491876 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106017656 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106743559 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078320219 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099244645 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089731494 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102399188 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086835527 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10145767 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088152972 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107588874 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081568181 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104645248 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08739613 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119345215 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11450947 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089886519 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109479386 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095426814 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105994193 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090611534 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105303612 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08969607 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10720883 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093943479 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109541391 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089882761 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105831931 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080260256 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107879853 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094561637 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10279537 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082150411 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101984251 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088767216 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113364636 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088680531 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107377696 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086151346 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108944352 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093280009 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106536628 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08755872 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101806916 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088601161 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11233514 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090267306 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107844374 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095859658 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108075294 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078533635 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11090213 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085320595 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110994566 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07879658 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102194864 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084272211 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108075605 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086834667 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104709103 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078274538 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110994754 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094174091 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107497488 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083653648 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106300847 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115288726 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086451442 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109490485 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088374052 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.1094983 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103589679 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10213074 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088578703 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115321775 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088694388 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096189499 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091867795 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105017492 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083587314 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.105499903 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085754515 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107553723 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090920632 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107870197 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078053582 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10620811 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086351959 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103433809 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079771891 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111874018 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089511305 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107073504 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097311924 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108011582 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088908018 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109063042 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087484492 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108577112 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089208239 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108513606 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109613941 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087020347 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082992751 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107093278 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102071899 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081982513 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086109602 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106887875 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088370449 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108292454 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105383256 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093322531 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106487652 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090136364 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125858546 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103887813 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084503836 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107515566 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090882527 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106229221 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088174468 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09761204 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094554012 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105706551 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095152074 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105812505 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080321798 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108009927 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088508613 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108408503 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090723177 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10856795 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087392169 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106845297 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089376235 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117412129 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085418616 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114371458 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091323052 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110154123 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088185256 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108336113 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087240692 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102306566 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088656457 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10890736 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088976746 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106514115 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090642388 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107962471 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106247576 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086467158 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108827763 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089307461 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109539824 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078355851 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08426719 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103922375 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.089094408 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112631805 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108866049 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08849322 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086319981 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110027195 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08633443 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100261792 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09313985 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111204028 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089331295 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118152956 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10361491 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089964864 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118354638 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079319404 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104943994 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083202617 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104018608 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09498083 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109064643 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095341704 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108269016 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085771839 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.1008956 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090704731 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104883803 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07964219 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101563329 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09288969 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105655148 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087622506 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107954159 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091924789 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109091688 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093966424 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106717566 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089633419 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108403301 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082390004 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103724787 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085199751 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107334863 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.091222232 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103923606 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08170276 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087637287 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108714744 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108457827 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088758691 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106110569 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096004402 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107647232 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089640542 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113152469 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079962452 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10762807 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089247965 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107734705 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08576113 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108911115 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091297542 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110046125 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095810413 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107743537 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092070721 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108224622 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083191201 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107958593 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089614939 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108348941 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08553026 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.1094975 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097122201 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101737537 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09071294 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109113072 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087172614 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.1099854 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.090605709 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108636551 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093060487 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10919705 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090131856 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111544111 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090054014 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110111779 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09048952 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106346874 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093338406 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104941762 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11475182 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092112994 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109043182 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088859784 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104260162 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089871103 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106578198 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087726515 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113426899 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09087993 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104169031 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086355515 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082402381 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10874982 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112980051 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096469347 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108307458 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091389784 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099039003 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082834469 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109903401 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086475704 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107893874 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092225945 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112829127 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090470624 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105772179 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088885758 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114331823 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094649164 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111952473 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086046641 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111401825 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090986521 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109494478 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087083109 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10820533 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090735304 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111536942 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088516747 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106148655 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11778909 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095202069 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110253282 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088683836 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110773211 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090316741 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099439728 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091498109 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108149218 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093078787 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109188618 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089992687 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119180557 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08497411 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107576579 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094103123 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108268333 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114617294 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081873151 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089531521 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111687439 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110178406 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081354021 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085665838 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.106322203 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090000899 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105783473 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080670545 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119801481 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114311816 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091072573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10775091 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088846259 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099333739 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081760237 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085925438 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111686336 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088527275 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118498782 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104560627 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086634413 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08060403 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10994136 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110272842 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093659794 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081681414 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101150451 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08688324 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110822126 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.1158302 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08887416 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10831308 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092277923 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108985943 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085036149 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11407396 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08268008 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10990688 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102480605 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109701021 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093895398 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11234825 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095990703 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.11111216 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081747958 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.111079638 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091156328 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110005045 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.091090295 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.111997821 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124739396 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091386199 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105783863 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089028519 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109061278 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086829371 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117130257 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09275498 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110221959 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093013735 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108186443 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093303629 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116995352 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092426257 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110405831 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.0908671 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108858644 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089877483 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108332375 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088287143 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.112267149 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.09037166 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110035995 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093124172 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106795372 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120655158 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098712453 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111378433 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082987671 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105740912 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08704847 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080596134 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.112689542 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08346241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107996196 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.088252429 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108191648 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.092884569 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11182095 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089726439 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11169793 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08904003 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099776768 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093575898 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110486709 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092096704 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102435121 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089794984 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.11343102 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114180694 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095615716 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106717156 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09146786 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108267173 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093533325 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100364627 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094876957 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10849624 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089628353 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105366752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090398714 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111450067 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09271134 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111849616 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092817679 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109700708 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09657903 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112891747 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084284344 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102853317 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094100096 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103169325 seconds)
  done (took 59.706038811 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153797928 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088556487 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100129972 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082171734 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127923024 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082795823 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100464238 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082964758 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101901176 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095338587 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101574054 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081496881 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123922828 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129568735 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125900216 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115660527 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081637043 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101482854 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081451434 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101385867 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102257969 seconds)
  done (took 2.955504074 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107627445 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119806504 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118137155 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103760931 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113224044 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.1198708 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098415842 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120856695 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123037154 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113817568 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103892271 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120780413 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.113634408 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094842676 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113620709 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116221026 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104260497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112962652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120508828 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098491219 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116931078 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117704427 seconds)
  done (took 3.268522673 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.095659565 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08917065 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115321106 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083579071 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109561944 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.083916157 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.114637196 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.086329556 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115079351 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090991408 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107201828 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09080354 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.115008837 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083581205 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.108019562 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.087026014 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113439228 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090272998 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111170232 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.085084098 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.130304552 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102882397 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.085480718 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.087091106 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119509825 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090104099 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.110580393 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088963011 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.106878008 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089407026 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106613252 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092666066 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114223225 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087623916 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107605526 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089760581 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.110107415 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.084205877 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.106849542 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09433851 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104422359 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.091539365 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117005381 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.087486434 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106520219 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091938284 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109985821 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.085181052 seconds)
  done (took 5.570791029 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124208399 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162619104 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095918014 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.159956916 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131763264 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120944561 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09505598 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.15225092 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10863541 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089931579 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128684142 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124997679 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091846211 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.119647255 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094896088 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112162343 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113400878 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095798614 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122049306 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090154557 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119016124 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113321207 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10457206 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122683012 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114848379 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090687432 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109522925 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.100215537 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122374489 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116730668 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096064143 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121966979 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131217341 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095665915 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.114803018 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112963924 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.108818714 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110851153 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093750461 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.109279242 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.113031276 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.101363738 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113851078 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128170572 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092396955 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112303664 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.094930029 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.113690856 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128913049 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097964163 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120839671 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125278431 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096077686 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111378053 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097381192 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12996086 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110669609 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090469035 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114764824 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122338118 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09133592 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121233566 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110316217 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116825369 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119565135 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.105712768 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113251206 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114534714 seconds)
  done (took 8.60158929 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098069389 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.136143665 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127343193 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107963459 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117675872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115948323 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096578498 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.115816412 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097859752 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1232161 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116314103 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.166822243 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090332371 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121602196 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096392514 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117051583 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115371784 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096834424 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115648719 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09619407 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116195258 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127214432 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096847594 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127940318 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130103562 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109875052 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096917524 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116035464 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108189791 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117060232 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129831222 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116178496 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096701779 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127304175 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130073425 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096949765 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106587972 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09683663 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11719157 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11603577 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090251501 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126791885 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095749034 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110865979 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115305 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096913777 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128134271 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128434176 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122411353 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104467061 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116086749 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126981431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097139079 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116232715 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128120576 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13568768 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107863494 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128330762 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116357377 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107678407 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128105525 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135557455 seconds)
  done (took 7.920479205 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08800937 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087241296 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105791516 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085179743 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107689695 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085055782 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107323445 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.089054685 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086061576 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109057881 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087035587 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105327068 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085622111 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107023855 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085729038 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104526648 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086014491 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084486062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107881048 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085237373 seconds)
  done (took 2.699958038 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096786586 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128285541 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089029437 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116097616 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090654214 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116167121 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109953275 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091745008 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109409767 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09210546 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120887592 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101135314 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110351711 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115488497 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100513662 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116465581 seconds)
  done (took 2.518529888 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.109944547 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121884071 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.1344376 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093847883 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106314357 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.096295189 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108326394 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083844213 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103896609 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09745156 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.11448761 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10015966 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108531203 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086689241 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109296479 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094513933 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104062742 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092936603 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108735673 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11388772 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114869696 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110522927 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089734113 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109878372 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091044599 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113511236 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.09601519 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108857864 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086428073 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108596505 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.09134207 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117112456 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084169848 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.114426412 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086473645 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105850983 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087889208 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109425919 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092866937 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10938638 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085756593 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112166171 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087826532 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111442877 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082842116 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110217969 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083510862 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116283501 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.089268372 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112190685 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10763186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09757043 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115525432 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100729334 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.119451793 seconds)
  done (took 6.464655822 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103277694 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112137028 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092974157 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106085459 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091997921 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.116698338 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092674564 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111172513 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090118444 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106522812 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09066547 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112755488 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090410843 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113072389 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091460048 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112809089 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082742447 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11125103 seconds)
  done (took 2.645019899 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09446736 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108255963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096640266 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107966266 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089361139 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089648744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1056678 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086058016 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106925566 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087896956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109440091 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090701599 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10669826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090268839 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108886845 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089035393 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110614842 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087334201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109168962 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085002938 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110538755 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087280754 seconds)
  done (took 2.975373508 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106789601 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.142502932 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10391683 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.153685136 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113968615 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092701133 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.124145394 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.093198484 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132417598 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112235171 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092686502 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.112170361 seconds)
  done (took 2.203110443 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115904969 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148834495 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085857535 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112882968 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121978476 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095225584 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114049944 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093364871 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127900658 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127660874 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093553035 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127743537 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126098299 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124963961 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103027646 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123576715 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113936744 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094105922 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110132907 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136866171 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094443252 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127843387 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114039735 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09487031 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114714124 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125348307 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106241906 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127342389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114909704 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106025739 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124571477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114795629 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106401406 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128828898 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111971614 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127139456 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095526899 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136729768 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122492365 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104721971 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113144068 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122957062 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106634927 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12219026 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126268897 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093745665 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122897661 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114022626 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093944178 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142444133 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122981373 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125653126 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101692522 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128715889 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126836488 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143015699 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127572609 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125599376 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103214163 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128056055 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126213636 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123145266 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105459021 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128579571 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121674119 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12594067 seconds)
  done (took 8.540352465 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130499205 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108792131 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09359702 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129913532 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12715669 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114268769 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094651186 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114737264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093825466 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111168203 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16245938 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114399483 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105964807 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126707896 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11485024 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094714619 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115363325 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125513902 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091233999 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143525794 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114520214 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126027189 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105899724 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127867037 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128425055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122255771 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095089395 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115469385 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094019278 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116191654 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122402692 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095337043 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128080748 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107797887 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105628417 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115644873 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093884918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123624893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115275101 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102191814 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12791491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137713189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115065906 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094307648 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128450534 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115618777 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09471893 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111481303 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094042879 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112365381 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129025475 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128527206 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107665456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12703642 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115047514 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094491405 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116008514 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114893642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095878436 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122187106 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126595968 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095175973 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143766227 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115394451 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094337933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127584238 seconds)
  done (took 8.381304441 seconds)
done (took 159.560139455 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.108213432 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147095206 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.104043607 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173474119 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08871026 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145482905 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122947207 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.127283522 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088858023 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.111172949 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089394087 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.113265164 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155182789 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.11053419 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090309621 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113638973 seconds)
  done (took 2.714419531 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186970716 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.292537469 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109250086 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11565514 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09566549 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114202124 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093245784 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117648049 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090378145 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124498623 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111832853 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093227204 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123830554 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093075372 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111313531 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092003311 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.124087971 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091670726 seconds)
  done (took 3.012410288 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115621629 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164605652 seconds)
  done (took 1.114629084 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127437902 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190356473 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311253376 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168068229 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11978257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.133123592 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.168416545 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130683399 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.20026075 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133856937 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111738493 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118207523 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141001233 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102440684 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121051178 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096191552 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144894502 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.119041176 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098456209 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.118216746 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118371603 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.119451972 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122366547 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099632877 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187886802 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134005173 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096220487 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.119975793 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118343952 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098698101 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123194774 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131980782 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11004761 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.195720785 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101931856 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.19105008 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104771677 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11780148 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097978832 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.117574266 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120830484 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100573601 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133236918 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095654976 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11996421 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124533779 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.097967875 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118271538 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103515809 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128759971 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124559186 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101519811 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.191667218 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.104762414 seconds)
  done (took 7.860914423 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.849513744 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163673223 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118432633 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.962545587 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149655511 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131273019 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.851816258 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118566554 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.271781788 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.1080205 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136700947 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130914191 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239604006 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262680557 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155708643 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.345996427 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.733461814 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13078666 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124416643 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161083948 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123628341 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146594263 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115731843 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449741698 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119154744 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094330255 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123709687 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128826828 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170629705 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093979379 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122040493 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18841724 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.296849399 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190127231 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118282301 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093519475 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116563123 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177358859 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277385608 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227243175 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182469646 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091534415 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114830704 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106938897 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13728242 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089711836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.196324831 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183361363 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182920868 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121085182 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129049966 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102650407 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128319981 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.170657249 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.115286743 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34481425 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.348443735 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09410723 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125158141 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112866308 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2736818 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116873376 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212045496 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144042117 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222189648 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092513856 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794647385 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.176174942 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116449599 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124031363 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102775437 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122252088 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105274805 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177213132 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390584064 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131683414 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120443996 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094289111 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236524375 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094290466 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11632114 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174315619 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09534601 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125860929 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132905516 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107483806 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.202263335 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258388393 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131401243 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101928726 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122541708 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12842508 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095666588 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.22389422 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228099975 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.188331444 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.224741324 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129208186 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.175331832 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.176613622 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128690216 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181151419 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125310487 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112339245 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130835034 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225319957 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151329615 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.094523125 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122104764 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122831278 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153628982 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098641568 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123543817 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.179740545 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.471181121 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.203328356 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091328334 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.120388361 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103021332 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171670334 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124265992 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272366283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103929688 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.201174427 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101679038 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.114046497 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102457364 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.197275769 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108061929 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126717641 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12942305 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101445769 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.283184318 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206601374 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133758811 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246573121 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187229213 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103580676 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206322919 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102428276 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200949146 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104372722 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129206862 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094767148 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788668196 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13056911 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123967542 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100304898 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203188837 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115689971 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096594473 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093512245 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114570314 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818285205 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098160766 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.114612073 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.096393067 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126505762 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102795883 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123627172 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099311953 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193784463 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242250363 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108573583 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124739386 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093097199 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.193168627 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095723686 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.117288376 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095148339 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.117152135 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105119585 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121568981 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096505593 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.204375647 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.169047264 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229964324 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.535487696 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116928011 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093646028 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241241853 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11629814 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292979541 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124548629 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23526059 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177437327 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11393296 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346505027 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.180119599 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203011929 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097232525 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.202624849 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092427623 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123277216 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172365685 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093387117 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125071878 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167495168 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135296828 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131264376 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.139896651 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118184547 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237740741 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.11465649 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18001091 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118434752 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107139911 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318364508 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116472074 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115675037 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193778806 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09882002 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.117106431 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.738398599 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.117036614 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105255178 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127148538 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232590875 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.176455862 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124741952 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10226054 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131339534 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.171397403 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.242734076 seconds)
  done (took 46.245684955 seconds)
done (took 61.777760674 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315296384 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278703151 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.315979819 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205217589 seconds)
  done (took 2.052572284 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.189308664 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1619667 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.132165426 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116737342 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.163216781 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092472521 seconds)
  done (took 1.718144148 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.50022618 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.388860645 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.354987357 seconds)
  done (took 2.109869956 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273792346 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.295925318 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.37244992 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.464900517 seconds)
  done (took 2.376064707 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215269539 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132398981 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.106324948 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.147183851 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.180372942 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.184109187 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151168713 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160442963 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136634265 seconds)
  done (took 2.326869906 seconds)
done (took 11.446273878 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.236665282 seconds)
    (2/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.294459957 seconds)
    (3/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.196901422 seconds)
    (4/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.118611998 seconds)
    (5/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.147649408 seconds)
    (6/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.256511371 seconds)
    (7/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.292253728 seconds)
    (8/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.16796497 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122556778 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.174526608 seconds)
    (11/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15089834 seconds)
    (12/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.139799072 seconds)
    (13/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.272073034 seconds)
    (14/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.199099988 seconds)
    (15/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.209742675 seconds)
    (16/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.161779132 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120415416 seconds)
    (18/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.261768185 seconds)
    (19/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.216970885 seconds)
    (20/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.133263279 seconds)
    (21/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133225126 seconds)
    (22/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134380331 seconds)
    (23/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.185470876 seconds)
    (24/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.120504887 seconds)
    (25/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.26829601 seconds)
    (26/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.2504986 seconds)
    (27/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.242366867 seconds)
    (28/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.205939478 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146879949 seconds)
    (30/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.248187075 seconds)
    (31/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.147632799 seconds)
    (32/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.232736961 seconds)
    (33/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.108725527 seconds)
    (34/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.133138597 seconds)
    (35/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.11340342 seconds)
    (36/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220834358 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.151820291 seconds)
    (38/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.188134705 seconds)
    (39/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.198749624 seconds)
    (40/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.217235592 seconds)
    (41/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.257652311 seconds)
    (42/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.128102822 seconds)
    (43/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.10333898 seconds)
    (44/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.206759948 seconds)
    (45/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097219017 seconds)
    (46/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122139279 seconds)
    (47/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09687824 seconds)
    (48/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.116500844 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124941628 seconds)
    (50/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.149942775 seconds)
    (51/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198935218 seconds)
    (52/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.20673953 seconds)
    (53/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096291365 seconds)
    (54/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.104764594 seconds)
    (55/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.109827636 seconds)
    (56/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.163034462 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.207226607 seconds)
    (58/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124287766 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.127601247 seconds)
    (60/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133996002 seconds)
    (61/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079701545 seconds)
    (62/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.121167186 seconds)
    (63/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.173346603 seconds)
    (64/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174712576 seconds)
    (65/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123790741 seconds)
    (66/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.149259667 seconds)
    (67/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.137826788 seconds)
    (68/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103069907 seconds)
    (69/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.098255507 seconds)
    (70/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.208996506 seconds)
    (71/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08108824 seconds)
    (72/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.208104391 seconds)
    (73/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.144244219 seconds)
    (74/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08120632 seconds)
    (75/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.212028456 seconds)
    (76/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.193053586 seconds)
    (77/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.172935633 seconds)
    (78/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.228052795 seconds)
    (79/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.199626799 seconds)
    (80/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.107893506 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.154195286 seconds)
    (82/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.09452814 seconds)
    (83/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.120511846 seconds)
    (84/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.200411868 seconds)
    (85/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080566279 seconds)
    (86/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.204682748 seconds)
    (87/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080794142 seconds)
    (88/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.128806152 seconds)
    (89/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081088048 seconds)
    (90/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.104031728 seconds)
    (91/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.146756275 seconds)
    (92/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.131252428 seconds)
    (93/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12981104 seconds)
    (94/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096297195 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122715936 seconds)
    (96/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100732004 seconds)
    (97/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.161127431 seconds)
    (98/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.097272351 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121843969 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.106549732 seconds)
    (101/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144823662 seconds)
    (102/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.079738705 seconds)
    (103/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.161880664 seconds)
    (104/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118343091 seconds)
    (105/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090657192 seconds)
    (106/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079633718 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123923741 seconds)
    (108/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092591831 seconds)
    (109/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.124705268 seconds)
    (110/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.184191858 seconds)
    (111/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.08046684 seconds)
    (112/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123371874 seconds)
    (113/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10526262 seconds)
    (114/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205027376 seconds)
    (115/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.211553243 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092221682 seconds)
    (117/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.12447854 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096456955 seconds)
    (119/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117488067 seconds)
    (120/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081559743 seconds)
    (121/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.164679211 seconds)
    (122/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.130368185 seconds)
    (123/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096857003 seconds)
    (124/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079977093 seconds)
    (125/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106040829 seconds)
    (126/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111898529 seconds)
    (127/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.13336914 seconds)
    (128/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080327065 seconds)
    (129/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.113055516 seconds)
    (130/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079921758 seconds)
    (131/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.102997106 seconds)
    (132/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.122101992 seconds)
    (133/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.103528581 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100656823 seconds)
    (135/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.103577233 seconds)
    (136/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.081698321 seconds)
    (137/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104659403 seconds)
    (138/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.136978289 seconds)
    (139/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.138036535 seconds)
    (140/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081206615 seconds)
    (141/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.111279296 seconds)
    (142/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098085922 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.132809923 seconds)
    (144/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.122262345 seconds)
    (145/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.104325079 seconds)
    (146/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081724824 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123850182 seconds)
    (148/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097506017 seconds)
    (149/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.135692637 seconds)
    (150/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081444107 seconds)
    (151/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121470231 seconds)
    (152/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.090243029 seconds)
    (153/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.103286983 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101132817 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.123127912 seconds)
    (156/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081781753 seconds)
    (157/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119723576 seconds)
    (158/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100197776 seconds)
    (159/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.144815637 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100179445 seconds)
    (161/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.162263694 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12378188 seconds)
    (163/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.183384686 seconds)
    (164/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.113042868 seconds)
    (165/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081411588 seconds)
    (166/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.133633529 seconds)
    (167/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.107722866 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124748796 seconds)
    (169/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140570274 seconds)
    (170/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102512243 seconds)
    (171/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.104222002 seconds)
    (172/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096645592 seconds)
    (173/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.159540744 seconds)
    (174/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081255045 seconds)
    (175/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133547829 seconds)
    (176/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081061804 seconds)
    (177/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079415897 seconds)
    (178/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136377078 seconds)
    (179/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134521197 seconds)
    (180/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080813252 seconds)
    (181/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.104097329 seconds)
    (182/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081229719 seconds)
    (183/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080328893 seconds)
    (184/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.198783504 seconds)
    (185/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117730481 seconds)
    (186/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.089301143 seconds)
    (187/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.103521973 seconds)
    (188/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099749961 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116806766 seconds)
    (190/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082431498 seconds)
    (191/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131204258 seconds)
    (192/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116246478 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119380447 seconds)
    (194/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081923801 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.131733328 seconds)
    (196/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11082967 seconds)
    (197/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.104274114 seconds)
    (198/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094048639 seconds)
    (199/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121966216 seconds)
    (200/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097685918 seconds)
    (201/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.105522174 seconds)
    (202/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.089707661 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.122962664 seconds)
    (204/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102104524 seconds)
    (205/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.156773992 seconds)
    (206/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080688958 seconds)
    (207/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.129701548 seconds)
    (208/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.105977699 seconds)
    (209/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.119087135 seconds)
    (210/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.091306568 seconds)
    (211/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112870117 seconds)
    (212/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098736253 seconds)
    (213/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121289754 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.1083168 seconds)
    (215/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.121329644 seconds)
    (216/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099466986 seconds)
    (217/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.104859352 seconds)
    (218/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093723316 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124356119 seconds)
    (220/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.0816399 seconds)
    (221/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137984435 seconds)
    (222/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105145521 seconds)
    (223/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.1126948 seconds)
    (224/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.081903722 seconds)
  done (took 31.020500486 seconds)
done (took 31.892616561 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.410787519 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135709796 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.129512406 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10581006 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149490068 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.108330462 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129845999 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.107686468 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.129061415 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094838289 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119901237 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130178538 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105748359 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.148161819 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106676848 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121691317 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096071423 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.13117087 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105138211 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131872192 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.149216976 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098124626 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.127902155 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097546333 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149471375 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098613799 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.129216288 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105112524 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128167243 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096177951 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.130911386 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120934565 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107292635 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132525197 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0959331 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.121316633 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095972725 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.1116249 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.097301655 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122347185 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104393696 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120863966 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.107040832 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.122169719 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099264816 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119698391 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095270412 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132129858 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094050699 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.129736837 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097264568 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.13453708 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11793208 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095408475 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118573343 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.098961006 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.129256864 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095970909 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130083548 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096473064 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.12221664 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096616218 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.125340719 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096080569 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.12082145 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09771611 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.122098133 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099017874 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118947285 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098562233 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11839113 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098034837 seconds)
done (took 9.478729428 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104821198 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191921641 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155396168 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.158256931 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155276808 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115573363 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132544908 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153630097 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.105964622 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.151038006 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.152040713 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.14413379 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.13432373 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.130371372 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138925079 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.105165249 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128490918 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138505436 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.138732406 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150302792 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154239187 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.105590477 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150790865 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.149598531 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127670432 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124546911 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132468176 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.127876445 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107840857 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14475743 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.120670641 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.13253987 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.13064778 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115945511 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135854227 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.10190577 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.13899485 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.124078044 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104663098 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129417437 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14013349 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115826346 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125199254 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135409515 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.105266757 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.132085618 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.104093595 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126987603 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104813137 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123214201 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.15172017 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.125157924 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127173137 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.130264634 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107476095 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128427008 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106871454 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.133065375 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132934492 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108233439 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12800513 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107043389 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133864271 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146157148 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103384528 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.132031606 seconds)
  done (took 9.466194316 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120324065 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.15982825 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135103552 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112209324 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131372114 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092932927 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.117466143 seconds)
  done (took 1.788717044 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095645044 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14972148 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128976061 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153256957 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141396051 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.13223453 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137480919 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09491757 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.144299728 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129799371 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.124386375 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17546432 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120422325 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106874147 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155236764 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.119392949 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132147091 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118989378 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103312861 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153573152 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125317633 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.119006987 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133693624 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095989457 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142705129 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096855818 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189386272 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131923579 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094827302 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125976589 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100825855 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.215016046 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11925859 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130855212 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09344991 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148968181 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.117022961 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126370481 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.146013734 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100374947 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.142706534 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.10249241 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.127128551 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12635602 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103445248 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.136207787 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107353039 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.128908799 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101484634 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149655803 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130719839 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118988956 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.12133449 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100357243 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130581394 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102511454 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.135246239 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101126939 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149717298 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128000375 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123483048 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147480316 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.142055916 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.123295378 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138662678 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.118397576 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144162482 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12611589 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10443654 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.128720389 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.123147854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.124657968 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.106077279 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.13709006 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129004322 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124767317 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.148965965 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100206891 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133922246 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.100658793 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123973352 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.098666844 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137535494 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099417044 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12284575 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138105249 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108660095 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.126211973 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099599526 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.143175858 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.124365208 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107770033 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.131336322 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100125322 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136026548 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149128237 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.1068712 seconds)
  done (took 13.115532868 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097894206 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096999775 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.127746802 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.123052314 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09825018 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097371968 seconds)
  done (took 1.576295818 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12758209 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124774652 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112248486 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.128483637 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16593889 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.12099367 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.147737703 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131653767 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.118115847 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136619315 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.120918253 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.14870181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.152636178 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104396552 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14592095 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10401957 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.147474568 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124708379 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.112122677 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125468811 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113871979 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128504789 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10064294 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.144815862 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.104206151 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.130738235 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127613514 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.112866518 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.136378308 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106653894 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129060569 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104296302 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.130667822 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131639373 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.122317756 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.129082069 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098838609 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.131310345 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104719979 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.130019097 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148028253 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101676906 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.134659668 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.10662544 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.131825088 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.104320201 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.131478491 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127253082 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.122222662 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.130453159 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.106792725 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129188609 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.10513237 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.131544359 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.104237464 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131356464 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.130880214 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.122573544 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.129732517 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104850218 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.126903995 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.104789641 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132032018 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.129457344 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103836474 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.130508514 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104670763 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125527956 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101067953 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12904817 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106750913 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125842166 seconds)
  done (took 9.811578335 seconds)
done (took 36.672921358 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.206093427 seconds)
  done (took 2.134545161 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.887363945 seconds)
  done (took 1.816683155 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.633342943 seconds)
  done (took 18.597276986 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.53396954 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.628439761 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993449003 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171993579 seconds)
  done (took 3.257573368 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.979914756 seconds)
  done (took 1.928746173 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.322177835 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.272722838 seconds)
  done (took 1.529648233 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.840830908 seconds)
  done (took 1.783236863 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.61348711 seconds)
  done (took 2.55704159 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363463897 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.208237204 seconds)
  done (took 1.523862163 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.596466667 seconds)
  done (took 1.542650702 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.663804377 seconds)
  done (took 16.614138835 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239203424 seconds)
  done (took 1.198619442 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311304108 seconds)
  done (took 1.259777454 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.6874037 seconds)
  done (took 4.640870535 seconds)
done (took 61.32080877 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.108005693 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135263397 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111886934 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132370639 seconds)
  done (took 1.433244484 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111877076 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12903728 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108454041 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129966232 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.114117746 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.130291064 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103417714 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.136961706 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.104098261 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.133044732 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.129654733 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.105774401 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131497808 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103678016 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.127983086 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106250101 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133742557 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104537891 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131838493 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105081319 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.130680573 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130986066 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107917586 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130826449 seconds)
  done (took 3.834784413 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107779595 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101574874 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.130083688 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099807977 seconds)
  done (took 1.395323142 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.113150879 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145428259 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118941882 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.137527604 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144910337 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118733027 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.127380717 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101828844 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.12852779 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112477133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127487814 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121545585 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145817168 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124231131 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114583393 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119393409 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.098261793 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144395261 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111861658 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.139110803 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101186518 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.137688494 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.109076616 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142443904 seconds)
  done (took 3.947055388 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177472946 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.140872276 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.150581891 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175278713 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.127177373 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.125687235 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.126676861 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134834124 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.130019207 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.100690153 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.126740836 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157734802 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132961779 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127683352 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101999352 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.132087195 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107977945 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131336087 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.102432382 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140296743 seconds)
  done (took 3.611741388 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107791801 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126094196 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.098202908 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125389367 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108322762 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128401667 seconds)
  done (took 1.657941692 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097529764 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09535369 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.122468344 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095543853 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.127448899 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096762583 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.120480144 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.096611761 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095267849 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.123123891 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095403793 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.120706432 seconds)
  done (took 2.244831264 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.226017265 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.125540085 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127269866 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.10256277 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130701865 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09954984 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141589903 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099662333 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.183657656 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127250476 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116330823 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.179693289 seconds)
  done (took 2.62061185 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21951851 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106043179 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285253439 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386024095 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168845334 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175996399 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284322997 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177388978 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19772464 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147028207 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216159431 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167831088 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137603462 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190506648 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15011266 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.195267966 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185208431 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212190495 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158773101 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251372829 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175558964 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176706342 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201509816 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135525139 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148394619 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167732252 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126860404 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111483441 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182254567 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180102457 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208995325 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132397677 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147779977 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210275507 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251793152 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18844572 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315151754 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142920553 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201997315 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.203466892 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288311449 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151060912 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207731211 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165502347 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11372206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217312208 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139550214 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.215985489 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.115007379 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151215683 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194963196 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185696596 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190097376 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147799055 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310459785 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154672616 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.155810066 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190777683 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200317186 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236700605 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150751688 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.134261753 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197454298 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201276443 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191780028 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155650637 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.176963055 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135291633 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187443655 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215123428 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187128749 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177020783 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219821977 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142687337 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14570147 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216591866 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136242952 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190138963 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171672593 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.131508773 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158419756 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120000843 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137778316 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195387575 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105788152 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224655726 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146089907 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.301471853 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244655676 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139972484 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171371956 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173529349 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177290614 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158445484 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128327286 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15618123 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179965151 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140492419 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142217574 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168453082 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156013747 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.108367606 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161906514 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.132949303 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169384904 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116760871 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176760013 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174957076 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138301847 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175787821 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133265858 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.167978956 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180950611 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235504576 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114896992 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143306881 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215112548 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169528263 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.118259294 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224148903 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207071003 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.18464122 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11992472 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2048458 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207085774 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124450993 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235410456 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12456553 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1441859 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.160731889 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168974433 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16785796 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16543097 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112350832 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162214639 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212358515 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.139237758 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118377448 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185970056 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136666001 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13812185 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126659383 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146070547 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151721924 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159974724 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.121213562 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164663483 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170660063 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164802671 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168704731 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152854008 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203338765 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143343446 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169675862 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129927736 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.128324275 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190591294 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204672526 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138263922 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19775782 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.178612251 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207674268 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172356895 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141506916 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19306767 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110391687 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.129809469 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175400163 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170826153 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173086484 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.202975895 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204272766 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176350639 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163254785 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160832229 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177152121 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195267725 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165684405 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156542205 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173124503 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177174983 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103607802 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.133376829 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108140826 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149958336 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140481363 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114765686 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219778249 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173845004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19917296 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171529925 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148470836 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202485983 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107650254 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174106824 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182005265 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149962248 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205189831 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201145588 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177129876 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154088889 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181881903 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.129055045 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107934702 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142138542 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177371904 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114218933 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145777333 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154296914 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202674746 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186639037 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160440948 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213733022 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177749927 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24172839 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102970678 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174663133 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191533719 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167935968 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.172061962 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142020706 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.171219998 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199177085 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156236977 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205615496 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173203331 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179585544 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209424368 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167014913 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141019413 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159706077 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179481164 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120652499 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182387919 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157292809 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145054398 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164399472 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117867346 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136067466 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191399962 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155160684 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189741591 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17786369 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184102908 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137319338 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154228505 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14601514 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157214648 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.127231347 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182041567 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206009807 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154873856 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169065894 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19530783 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139783012 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.324507258 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211043078 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195742544 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148007338 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153534816 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144964663 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179597577 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174209626 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193493586 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15416034 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192309309 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170890261 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153806855 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116564379 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158338054 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161082173 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162297968 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.11384248 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.164076317 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.153810898 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193380328 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156904174 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1704337 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176414728 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.13000858 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.166536613 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151114481 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222488851 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170523233 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187949485 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167849892 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.186778568 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199353687 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134417713 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109796604 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137606007 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194056829 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113783115 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170327523 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195269358 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237567658 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170123247 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181163474 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118842604 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.135490104 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170056219 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15734998 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209288289 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15246853 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145418741 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213334605 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.161362061 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112664136 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176097283 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296358443 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155298579 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193823705 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131180923 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28678911 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109867653 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142210021 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1807354 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181720643 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112627164 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.19506433 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176212025 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156372849 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180913316 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119249966 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230303223 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220563402 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181882459 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185753434 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.155257407 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169648513 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173311074 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198472988 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153500147 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.126499152 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173373789 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203843196 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204453133 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144028025 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173971834 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174244427 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170709495 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184511269 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14469234 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200115206 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111779472 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176573476 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151167445 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134616647 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168464715 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193249078 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116192048 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223352355 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140024003 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144103229 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135431977 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133038257 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171109702 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153574901 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13948949 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190941896 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108755829 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173745766 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192720697 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141089442 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164528499 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128304109 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142060381 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152865945 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125559067 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145955777 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180257873 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204789743 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.111050972 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228187388 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184282589 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177205696 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170669077 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126555351 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673290855 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136736412 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202919988 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129248709 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228542704 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130577839 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17767812 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17243218 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160316026 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178176595 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160099759 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230593749 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176915107 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168521657 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112845979 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154830884 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156225155 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.112556641 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163584308 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173044219 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151166043 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.117496948 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167418824 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158104877 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.155498907 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120129129 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207238845 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159700574 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193343644 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194987857 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150359014 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177471149 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185746026 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14091003 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.172459826 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18367931 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151933965 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131356758 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141511124 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.144969277 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191525522 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.106779456 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172333267 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171178848 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172968841 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172978831 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116529088 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170764206 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153666121 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171179771 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106938102 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164796018 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168344999 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142364595 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109176403 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167270188 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170315822 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.170496795 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134598187 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.155535326 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202372866 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.134390947 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115296925 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295606041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167187452 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203836309 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165511441 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146765265 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154089012 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13523266 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165416533 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170600297 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139278345 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113722923 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141104377 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194575575 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.176174135 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167422043 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194571084 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171166036 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200950098 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.116031975 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275515425 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14959847 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165495229 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.112517906 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139364863 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151189765 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116592415 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154931919 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202313501 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189586353 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164645203 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.155303371 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108048841 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.135294218 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112891217 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182904952 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165586707 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170084798 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154132403 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.098175574 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155021095 seconds)
  done (took 82.242639414 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167960951 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.171572223 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.175037222 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223728544 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195164956 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281828378 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23445401 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256467589 seconds)
  done (took 2.755102807 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110583379 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144852908 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.151106815 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134617129 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134291885 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.358827274 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146326667 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107054143 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.194395049 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.146210993 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132540791 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.628837576 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.10275748 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.135664596 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122907298 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133876287 seconds)
  done (took 3.930482515 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.38706445 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55641438 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.111239561 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.259957302 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238350351 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.16446313 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.772216176 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194872858 seconds)
  done (took 12.729209884 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.139753628 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.153893526 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.269503781 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.187170055 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171857304 seconds)
  done (took 1.975567207 seconds)
done (took 125.324818312 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104816462 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13435341 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106427127 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.136656415 seconds)
  done (took 1.523349172 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118954908 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089863682 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.125228273 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089019499 seconds)
  done (took 1.471420905 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.504483303 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089913419 seconds)
  done (took 1.68334322 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129952892 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147040056 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.130279104 seconds)
  done (took 1.467973957 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112982059 seconds)
  done (took 1.171312711 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117673571 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113216746 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.152960108 seconds)
  done (took 1.442296935 seconds)
done (took 9.811128773 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142133134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.449983048 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395195571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149684216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732922529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389124353 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.091680944 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165472294 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174397425 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100535224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14884061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681561869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041267048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.355519569 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.026608198 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.447818021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713939158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102300255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13596472 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101545676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.067820416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099154499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130955279 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102707424 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710947726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404984038 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131261294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.48740406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100633579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134050336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.391361779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128850654 seconds)
  done (took 17.482215419 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144796829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192535459 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137367661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102904591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133739365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103300842 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138839627 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113596386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189698769 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130425698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120831481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129415155 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106239269 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129930978 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.123866257 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128906467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103288331 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.132274905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107291945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131890873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120724445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12911226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102750272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.132554501 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100535156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.143094677 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101492557 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142483233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10025956 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136166274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.134090519 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102218704 seconds)
  done (took 5.101381369 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150315565 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201269239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138852144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13741667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180959805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131250543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217243509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137251398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194188533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130365924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120841448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130494986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167594962 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102108515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152314806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101397207 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132591669 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103980974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137990945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103318713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150806648 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100532152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133189926 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10277966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130335716 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114716894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130657262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140390286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10173316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133767653 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10779946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129965686 seconds)
  done (took 5.412424403 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108326576 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137529128 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118971419 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147714938 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104524829 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136410711 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108702833 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.132819796 seconds)
  done (took 2.053092805 seconds)
done (took 31.105542347 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123710605 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143911209 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116230391 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.140261104 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137663699 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.128425339 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.113919896 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099291692 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.141677246 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.118080448 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.131069117 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102795389 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.145798329 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105948604 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.147060604 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.110662745 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.15279652 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116895856 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.132974897 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111875144 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.131988854 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.121752354 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.137021511 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102201877 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.156411081 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.133268079 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.119961625 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.135389518 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.107060744 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102714336 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.148345681 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107306705 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133281816 seconds)
  done (took 5.211922027 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.130499114 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.177825019 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099388195 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129101421 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.170981558 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.099597398 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.15904796 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.100124892 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128531882 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.10015332 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.09802948 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.157127703 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.163745035 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.133776006 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.179055283 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.166475012 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.127364594 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.169890229 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.152872412 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.139598062 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.16074539 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.097656196 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.164607728 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.171980973 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099313145 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12902999 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.144416037 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.160925715 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.173224521 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.163522505 seconds)
  done (took 5.318447577 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110811837 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147894791 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.129126033 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205489076 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174277423 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.117775144 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.145917526 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120848937 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.161003356 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.101541894 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.144005725 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.164526485 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120023256 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.142806161 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108251838 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.146251891 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.122850227 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.133755024 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.110399995 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152282129 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.120074548 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145376712 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117526602 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.142914289 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.102262136 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14182788 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.107453667 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14704503 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138784389 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.113069401 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.135761455 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.107324313 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.133624884 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113704583 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135274491 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.110902999 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15462244 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112813275 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.145934346 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.167060142 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112582646 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136271641 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125049028 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.180686304 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.104939755 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.14065777 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113679896 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.142724663 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101101776 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153539653 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118067477 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.132968696 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147402203 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.103673547 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130888224 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111231879 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103745682 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.1356211 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.111228022 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.136910227 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152051329 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.11224499 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13975195 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.105241483 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.140700275 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102757854 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.130295667 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108643341 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.156807123 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108258269 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165765999 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102936793 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.138660693 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111452475 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139378922 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112862307 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.131730448 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11110748 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141519659 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.108662425 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.141279056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105115388 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.136515289 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120999351 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.147794619 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.1405645 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108728113 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139601402 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10606062 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.134134483 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117529554 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.134590852 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106744358 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.14344074 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.104467335 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135755211 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109177069 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.138121261 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101298645 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153243479 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108272907 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.132721817 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.121972021 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.133828797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106685925 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142278881 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.116233123 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.132874389 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10796398 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.140387885 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.103744417 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138864393 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106740119 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.132825593 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115717389 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145701706 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.108557398 seconds)
  done (took 16.110019199 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.257048427 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.237485706 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207083254 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.322767686 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157744469 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130772196 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.233275634 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.188022754 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134495213 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.174623916 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189837544 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.194866181 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.103291161 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.168247615 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.236680468 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.327333685 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.168040954 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.175609994 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.143428046 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.157327591 seconds)
  done (took 4.994985971 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119216701 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.173887178 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164243635 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.130231782 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.135078772 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.117216132 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.135273945 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150205496 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104710087 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.140639754 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.10330892 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.142998023 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105885056 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.137144884 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121597807 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151193929 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106878325 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.141455369 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.151299932 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109240523 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13503886 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.15532936 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113787894 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163889217 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111704305 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.152170082 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102945457 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.142321342 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100533073 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.133810466 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.108692181 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149681526 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.141262965 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104246068 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.139573048 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104106215 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.130380574 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105422661 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.135931767 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107656499 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.150141936 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106578716 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133873121 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104125462 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.141740949 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100812797 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.107796087 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.141501843 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13831775 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112564012 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140325733 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.10804396 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.141100243 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.115858528 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.130622384 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113158376 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.147089809 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.107770443 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.140280797 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.101781322 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.132228883 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107311684 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.133115588 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.108004304 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140073814 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.150533672 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112437066 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133685741 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.109007062 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.138386899 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107762545 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.152528177 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153801342 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10251859 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.10011659 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155975742 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100507569 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123456658 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112778175 seconds)
  done (took 11.131571507 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132176116 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134014996 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122945589 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.170452276 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.119438006 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.144226367 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103434253 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.155413608 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109592765 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.143130469 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110195544 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.150316922 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162304388 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.117187996 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134490632 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.119416737 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.138738425 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.146286397 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.153866292 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165536001 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115247028 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.139648966 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.117177344 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.146903558 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137039059 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.147797139 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168022721 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109473135 seconds)
  done (took 4.91382449 seconds)
done (took 48.737986832 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.187704699 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.401483493 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.15803953 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.157828665 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.171652249 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.195507729 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.159555116 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.352412548 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.885031829 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.147371843 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.157815517 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.157831635 seconds)
done (took 27.216434142 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.281518173 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.76116256 seconds)
    (2/2) benchmarking "String"...
    done (took 1.520958439 seconds)
  done (took 4.377905933 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.157459531 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.159042585 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.403967956 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.158293026 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.177520041 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.17671622 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.170996379 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.161600941 seconds)
  done (took 15.490880515 seconds)
done (took 25.389502989 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.177909274 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.465672387 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.439023149 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.176055146 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.17742086 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.159178888 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.147255661 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.222377265 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.163554111 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.150335231 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.158446417 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.453793294 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.149810595 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.572828389 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.159055003 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.176563578 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.178908054 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.486429337 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.161499112 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.222655766 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.145420378 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.16732117 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.164619628 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.18350214 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.18040845 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.165554502 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.178090231 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.146004067 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.511696938 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.18004102 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.204291391 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.166548441 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.17678061 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.179736945 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.278670602 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.196418519 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.48219264 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.159723096 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.157849413 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.170901657 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.513667395 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.579017405 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.1700496 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.153327544 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.161822861 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.249852033 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.153033954 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.906671549 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.164528473 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.153426766 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.190110214 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.601132311 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.172592487 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.163497497 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.195615885 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.50865258 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.167439626 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.248140472 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.20103916 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.165674954 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.161674531 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.192247739 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.217507646 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.173836789 seconds)
  done (took 141.844249073 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.16201012 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.166960175 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.16635916 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.171760811 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.168017214 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.167867219 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.163360752 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.163900101 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.167323332 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.163982285 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.167723932 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.165053638 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.168336748 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.163022789 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.164478947 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.182382601 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.165970966 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.184668263 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.184202203 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.164863956 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.169213164 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.167414885 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.182025108 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.165777732 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.204451347 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.274063306 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.188626874 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.19343097 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.165142497 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.165886265 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.174472679 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.173437335 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.826639246 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.01917533 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.176062582 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.199982428 seconds)
  done (took 78.906067214 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.165532488 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.165068102 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.165686705 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.200146369 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.165858855 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.782796412 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759673568 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.961735447 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.47666941 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.674671736 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.521796348 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.170232756 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262491678 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.181704423 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.167336188 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.181781604 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.193373116 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.171735967 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.16637589 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784930501 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.182946509 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.732713269 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.351103796 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.184395537 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.200567853 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.565163322 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.166395529 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.200931893 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.505700407 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.220363546 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.167993002 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.59977559 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.726717528 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282366964 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.168879653 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201440008 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.167667472 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.454670383 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.168841563 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.168973044 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.172476441 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905652762 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.172531466 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.787010699 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.172017006 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.167679163 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.169324653 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.168167149 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.391128969 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.878314072 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.187159394 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.168837206 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.172506364 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.168076367 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.168811796 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.203864799 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.43334241 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.290499083 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.1688982 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.169966394 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.172860709 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.203805202 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.169371443 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.198060883 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.173025971 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.918334264 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.226270729 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.283941823 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.169524405 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788060595 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.173339255 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268761841 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29209392 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.170455389 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.169741674 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.170835423 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.169796564 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.283009487 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.170614329 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.617816757 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.35088922 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.189045553 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.673632947 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.174223119 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.270520203 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.170911504 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.612725187 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.175106194 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.17145292 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942811014 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270064194 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.170344053 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.170859834 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.171553134 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.620270668 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.763399468 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.496350114 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.175662135 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.866680581 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.176635897 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.172614044 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.629988839 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.766596116 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.919668969 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.174432658 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287998422 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.354651557 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.191569527 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.17224927 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.691609673 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.176131009 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.232257292 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.172641142 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.573922936 seconds)
  done (took 364.867383804 seconds)
done (took 586.698466487 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.886549094 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.834897602 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.974274925 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.865537853 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.828951304 seconds)
  done (took 10.485395056 seconds)
done (took 11.578030459 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.371544424 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.372259241 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.238560709 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.37483249 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207820183 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.392090422 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355012574 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.196602171 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.284920036 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.259810384 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.286519133 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230858066 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210164422 seconds)
  done (took 17.877489364 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.45256259 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.174968841 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256494678 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.422301047 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216171123 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466437216 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48905777 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.17621811 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.317705277 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.188649699 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.187884854 seconds)
  done (took 17.44588211 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.444771884 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.175984826 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243280301 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.454210386 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215558816 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.440323844 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.471483944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.176395063 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316068816 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218711298 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.188483281 seconds)
  done (took 17.44124903 seconds)
done (took 53.857580576 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.215027007 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.350894418 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.208625724 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.189689697 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.185065436 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.185228634 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.190080544 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.186303702 seconds)
  done (took 10.809079155 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.184413484 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.181590742 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.182113836 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.181857347 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.185295151 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.182184826 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.181158215 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.185641901 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.185379951 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.182369284 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.184671959 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.185032849 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.185707242 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.183979958 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.182411375 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.185427207 seconds)
  done (took 20.0379779 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.185461758 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.181832651 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.182141233 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.182845268 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.182216946 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.183106832 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.183878597 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.183073972 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.18248831 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.182384288 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.183598171 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.183590441 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.184864293 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.183566965 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.182517763 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.184551852 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.183644677 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.182973745 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.188524914 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.184002255 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.182405575 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.183656411 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.183959659 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.184010522 seconds)
  done (took 29.506050518 seconds)
done (took 61.447996623 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.191500581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.19874517 seconds)
  done (took 5.49096157 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.246270443 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.248363394 seconds)
  done (took 3.597449166 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.187180799 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.185934565 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.187636679 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.188116175 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.187747779 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.188631321 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.190524364 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.187154205 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.187665592 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.18744056 seconds)
  done (took 12.978470985 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.188503173 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.188629408 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.185196449 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.188407308 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.188540501 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.184563582 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.188592576 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.187581716 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.187850796 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.186373765 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.188704866 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.186487907 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.188397329 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.18597921 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.188616664 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.187471564 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.186611429 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.185526885 seconds)
  done (took 22.47378641 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.201878732 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209079631 seconds)
  done (took 3.513677946 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.325821634 seconds)
    (2/7) benchmarking "second"...
    done (took 1.227648733 seconds)
    (3/7) benchmarking "month"...
    done (took 1.303734828 seconds)
    (4/7) benchmarking "year"...
    done (took 1.292606788 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.227374285 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.20821915 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.226913262 seconds)
  done (took 9.914038925 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.188846691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.37930816 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.488146184 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.758937375 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.191539229 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.193935027 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.071975254 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.193307407 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.19619819 seconds)
  done (took 13.765171809 seconds)
done (took 72.831871519 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.18027206 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.261402926 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.200822625 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.197121067 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.52318255 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.226229095 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.185927099 seconds)
done (took 15.877505891 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.180611383 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.172284562 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.184727526 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.183084473 seconds)
  done (took 9.825025798 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.181666649 seconds)
    (2/2) benchmarking "read"...
    done (took 1.535823566 seconds)
  done (took 4.8212403 seconds)
done (took 15.748121894 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.192069384 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.191422833 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.189295268 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.1906275 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.188759291 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.188188312 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.188151161 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.189978043 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.190680605 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.188831312 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.191647533 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.190219832 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.190622382 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190936494 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189435631 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189186342 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191672943 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.19099044 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.188685055 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188303012 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189224287 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.192460359 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.189434078 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.188025272 seconds)
  done (took 29.663572503 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.1923609 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.18956256 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.191731322 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.1923406 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.189514205 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.192272836 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.192997174 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.190272926 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.193496851 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.192872713 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190789392 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.190303848 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.192279295 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.189981936 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191892073 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.190660239 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.192301278 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190124637 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192793918 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.191676693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.193973805 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191191308 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.191583012 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193622736 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.191631667 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191053049 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.19384477 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.190693976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194565131 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.193652484 seconds)
  done (took 36.861933587 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.199893093 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.201961093 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.193498554 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.194256509 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.194469714 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.194320131 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.194971068 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.195406254 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.194506068 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.19421009 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.193858422 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.194489629 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.194993858 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.194539777 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.195629423 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.194618004 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.194171404 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.195487126 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.195234419 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.194848692 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.194904207 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.19501784 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.195632156 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.195075775 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.195738269 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.195211437 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.195097541 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.196330575 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.195207576 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.195475587 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.195707328 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.195546179 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.195489671 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.197821239 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.197053389 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.195243115 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.201291724 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.203840711 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.195368484 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.195879144 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.196233972 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.197015345 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.196642825 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.196031989 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.196601499 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.197249441 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.197167391 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.19861455 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.197496597 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.196815066 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.196800068 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.196800807 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.198383084 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.196819159 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.196277314 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.197387434 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.197641002 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.198003334 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.19811187 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.197705809 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.197480533 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.197083702 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.197529345 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.19626805 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.19687453 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.197158831 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.19680995 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.197862119 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.197479899 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.198754408 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.199309845 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.197631219 seconds)
  done (took 87.255374878 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.198230091 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.196322402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.195628297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.195471872 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195494444 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.198738627 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197712768 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198332116 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196165776 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.198810038 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197951464 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.196144151 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196422615 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199968567 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198814334 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.196019535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.198433953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196079348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.200026187 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200272369 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199694742 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.197122457 seconds)
  done (took 27.459677619 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201376357 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.200855832 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.197503447 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201729027 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198012324 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201679718 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.199441575 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.200672184 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200533388 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196899935 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197524734 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200184622 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.198942469 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198125004 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19797428 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200924989 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19938274 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200353039 seconds)
  done (took 22.70470881 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.198409067 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.199224829 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.2008061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.198181888 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.199349624 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.20157888 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197957246 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.201830366 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.200945716 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.199662773 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.201880053 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201614978 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.202137646 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200020468 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202490007 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.200622758 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.201980899 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199976873 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202107411 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199799972 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.198990694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203427071 seconds)
  done (took 27.527057076 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202354323 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202068029 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.199736017 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.200381181 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.199942633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.202467099 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.202427062 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.199415151 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.204455959 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.20241934 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200092542 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.202523484 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.203232157 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200520627 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.201419521 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201255494 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20303644 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201627694 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203643982 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.200083158 seconds)
  done (took 25.147660384 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20573864 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205451332 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205549444 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205291679 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205943719 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.205629912 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205897536 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.205571284 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205500782 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205469804 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205115104 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.20566113 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20621532 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20641475 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206223043 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206004012 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205884638 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206242332 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.206980271 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205683992 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.206858317 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206388269 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205714924 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.206610055 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.208272961 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20656321 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207188675 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.206130717 seconds)
  done (took 34.887377763 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20727936 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206569385 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.203499641 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.204751928 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.204475748 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.202866206 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.204892978 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.203958281 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20513708 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204035977 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.206902145 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.206529291 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.207008652 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.207470276 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206578854 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.207659859 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207766889 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.205358577 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206514254 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203196168 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.207812187 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207407352 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.206943205 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205252045 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204134218 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.208177083 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204386094 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205787591 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20850745 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205552842 seconds)
  done (took 37.295237545 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253009572 seconds)
    (2/2) benchmarking "in"...
    done (took 1.246605187 seconds)
  done (took 3.619659607 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.20488297 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209100385 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.209066317 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.206061978 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206527713 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.207463854 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.209573123 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205884638 seconds)
  done (took 10.778544638 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.208199537 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.209613888 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.209837904 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.208415977 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.208730685 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.208339826 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215503701 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.230591758 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.209804905 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.210233862 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.217589658 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.216603768 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.211367336 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.209936695 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.209844907 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211470858 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.209556318 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.210194079 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.210389153 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.21063993 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210406526 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212148576 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212645715 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.208239909 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.213120807 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.221540137 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.21446432 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.212052415 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210524723 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.214023869 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.210724262 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.2091186 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.21118355 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.211241287 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.211782005 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.211933605 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219185893 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235068083 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.217234052 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211492317 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.21249213 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.208721107 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.212740631 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.212631087 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.213108242 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.212560871 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.212280445 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.209743778 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.212154667 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.215504673 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.218330587 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210690401 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.210703955 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214929469 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.213573811 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217430189 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.232309202 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.216784485 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.222823985 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.223315784 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226460003 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238607139 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214779954 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.21170416 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225017733 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.239535391 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219175431 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.23241502 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.211074745 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.213788728 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.220196262 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227044768 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.241141466 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.214534627 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213451036 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.214946728 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.213870712 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215508044 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220468294 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.237609376 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.214082826 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213977228 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225996462 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240279251 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.214390176 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.215054356 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.215667226 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.215245617 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.217186335 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226103615 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.235536013 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.217958667 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.21550921 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.216963726 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.21631477 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.21616899 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.214648444 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216897752 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.213992371 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.216794289 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215211183 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221594838 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.22518537 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216551445 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215852236 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.223378863 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.21672232 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216042469 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.221923542 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.216126161 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216449634 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.217769548 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.224609964 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.213967513 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220151553 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.225155042 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.216141403 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.218097934 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.21708248 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.217413966 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227965535 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.252008373 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.217329308 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.218209261 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.222320017 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.228969896 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217870045 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.219476038 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.219058066 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.214593153 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.216483719 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.218660955 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.218409999 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.219778084 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217436789 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218969753 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.21558267 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.217562117 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.217661611 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.219416928 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.219141879 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.219053919 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.21918257 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.219758126 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.21779957 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.220077804 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225741215 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.218847706 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.219695744 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.218628638 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.217581652 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21914373 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.218693127 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.218129799 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.218381762 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.219413009 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.220191988 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.219843504 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.220819997 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.220889414 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.220145622 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.221112689 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.223870619 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.218732733 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.224534579 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.219360407 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.218388125 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.219715153 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.221488415 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.219284744 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.221211656 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.218029599 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.224830242 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.228245213 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.221887116 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.22037435 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.22410506 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221253903 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.221270664 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221396504 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.226244914 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.230641232 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.222556028 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.227426669 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.221491945 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222109755 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.222196737 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.222403506 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.220988097 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221610263 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.226485595 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231678344 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235515346 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249513685 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.223452461 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.227734677 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.224747129 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.227991506 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.22558404 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.22274723 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.224081126 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.22188993 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222976926 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222005436 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.224165351 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.22220684 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.222628019 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.223252899 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.225997082 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.222263175 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225116845 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.223998877 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.223631339 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.219866265 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.223760087 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.222622305 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.223298658 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.222077109 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223240555 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.224021347 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.223334758 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.223821109 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.229771891 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.222169134 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225158466 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225710869 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.223889393 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.222668969 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.224865416 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226096205 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.223688342 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231846027 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.246844746 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.224639655 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230859861 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.245307766 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.223524542 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.228008371 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.225897985 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.223042337 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230120796 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234236768 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.224671687 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.22376075 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.224833373 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226382885 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226436348 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.232392117 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.223041809 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.225338567 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.225994525 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.225639466 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.223704673 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.228060561 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.227368361 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.226275585 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226852235 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227592692 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.226665235 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227344382 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.225855709 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.227235643 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.227201923 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.230915949 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.235474723 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.231208223 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.22657826 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.228857528 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.22855451 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231889111 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227564182 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.228038741 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.227440974 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239536499 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.253349554 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233948015 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.248622741 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.227847559 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232517978 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250165971 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.232333741 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228186252 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228643239 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.22772731 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.227914378 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.227001882 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.228041717 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.228771362 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229861442 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230459785 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234483504 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.229575735 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.228781891 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.227600291 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.227877051 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.22980931 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.228229545 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.22991626 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231671321 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230692758 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.229140058 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229507006 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235353176 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250165938 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.228982772 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.22953135 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.229509424 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.229350195 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.230870373 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.229634389 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.235229448 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238716002 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23483904 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.239144326 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.232826348 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239386619 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.229896804 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.23539937 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.238290182 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.228375114 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.229171708 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.229649789 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.231254442 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237569196 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.250399298 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233728511 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.234808629 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231205325 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.231137669 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231662178 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.230296101 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23203908 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.230119516 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238761498 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.254991036 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.236678668 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232671436 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.228731891 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231320009 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.233979245 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.231920691 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236336826 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.232553053 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233761548 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.233705239 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.232138825 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.232815268 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.232145047 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.234352771 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.23180541 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.234421267 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240634083 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.25573133 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237370031 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.234042165 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.240724823 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233689663 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239960833 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.253720341 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.235153263 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.233009707 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.233649694 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.234541042 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.232732365 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.234080536 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.233340191 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.236699798 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.238574526 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.233320926 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.236207936 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.234610622 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.232951837 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.233800718 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245595758 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260893445 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.235692314 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240390063 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.231541763 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.237102932 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.239431178 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.234569927 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.233421667 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.237209345 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248052047 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245388271 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.235206461 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.23481382 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235939695 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234818189 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235068149 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.235339751 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.234062318 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236097621 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.23516656 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.761619926 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23759233 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.234879596 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.236676383 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23586628 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.238148182 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.246361861 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.234750249 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.237006743 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235631731 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.239135032 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.234878878 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237456036 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.235562656 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237134373 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236752772 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238984527 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244897663 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.245235231 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.23908629 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.236086261 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.235789285 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.236557527 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.236663231 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235737502 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.235837469 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237143962 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238127101 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.236538657 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.23880331 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.236228151 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.239258753 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.237089095 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238545761 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241217725 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.2455878 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237629425 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.237121511 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.23978083 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239827263 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.23665073 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.240199636 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.245614476 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241773677 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.252171456 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.24762373 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.244216726 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.240314807 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242472998 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.248223795 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.238894655 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239041561 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.239097065 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.239952865 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.239770968 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.243607096 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239074478 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.244962862 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.239227126 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.240577019 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246837753 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26287241 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240463924 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.242249863 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.243976086 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.239546197 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.237572008 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.241621907 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239410975 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245126063 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.261379843 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239470257 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241242932 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241403393 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.243018733 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245021451 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242336571 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.241484911 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.238224356 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.240944591 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240562408 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240719059 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.237372517 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241033184 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.241080857 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244336619 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.249136475 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.239195114 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24172456 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.242377678 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.24213124 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24004852 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243203926 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.239459936 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.238600274 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241185074 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241164146 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241486841 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244871887 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241553348 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.243051988 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243866256 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24476672 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247943388 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.255090193 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.251496412 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.241128603 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242078659 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.242898522 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.244570852 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242859232 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.245885356 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244647874 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.243829032 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24422317 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24350261 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243431929 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.248477782 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259294754 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.268490144 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247297362 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244649383 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246477401 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.244102057 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241159269 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.244409311 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245112367 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.248866697 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.252705079 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.243297817 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25390301 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267241327 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.246679204 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.249830611 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.24884451 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.254306448 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247507346 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244075009 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.244303275 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251724512 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.263395789 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245244508 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256647001 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276777837 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.266904891 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245178523 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.245085969 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244489206 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.244964947 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246521737 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.245183655 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246895415 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245727922 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246596344 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.246875277 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252912847 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247309052 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249166731 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.246906218 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.246847314 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.247411016 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245044231 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245471399 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.247064791 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.245879261 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.247395024 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.24662358 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.248451821 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260422866 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.27668862 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246738977 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.246835243 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.246049323 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.249418468 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.250998232 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259853188 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.257240608 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.24792466 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.248408171 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248624501 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248023099 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.24704794 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.248891918 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248261267 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249309952 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.246694543 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.261831679 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274888504 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.253425582 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.248287729 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249054953 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.250114504 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249594843 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248926049 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247987044 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.250850163 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.251665115 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254158379 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.250158735 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.249378853 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253132886 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.258915593 seconds)
  done (took 735.960071734 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248404185 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247232776 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.247921608 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247218517 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247144515 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248273935 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246886362 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247796513 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.249068089 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248997391 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.249342913 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248972126 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249052257 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248789694 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250521278 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25081037 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249946519 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249504448 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24952816 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249901551 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249183764 seconds)
  done (took 27.383026406 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.251627455 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.250700572 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250909177 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253284311 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250000589 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.252675455 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253140359 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253968075 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253109224 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250684656 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.254562247 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252596667 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.251447119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.250829057 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251735389 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252857156 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.253301982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250517332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.254171412 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251411985 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253432686 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252297856 seconds)
  done (took 28.709342553 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.252454716 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.252472278 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.252454286 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.251539366 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.254907949 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.251448264 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.253466245 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.253837041 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.253898057 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.254239762 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.253351134 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.254594641 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.262056848 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.260811959 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.256731581 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.253889544 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.253532123 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.254689097 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.2547783 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.252843834 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.258169818 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.275244555 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.25431494 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.254697669 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.256078356 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.25662735 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.25441042 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.256050418 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.257335572 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.259842808 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.256064224 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.254814396 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.258219553 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.254718421 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.258126692 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.261709611 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.257131673 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.253588645 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.254837147 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.267153983 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.281353175 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.256288756 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.262514716 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.278882866 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.257388882 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.262350105 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.265300528 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.255049327 seconds)
  done (took 61.528916823 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.879264887 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.896939373 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.89432352 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.897056312 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.898063785 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.902881584 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.903262566 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.904429323 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.890665847 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.891561095 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.898828374 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.894796312 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.899235259 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.89880212 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.897207232 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.898550794 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.89521114 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.894680994 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.906282675 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.907188403 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.893703263 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.899223209 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.896046773 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.898596507 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898393416 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.896557224 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.896212452 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.897360989 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.898650133 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.900317447 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.903194669 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.910067273 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.911266909 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.89531703 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.89615584 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.89897315 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.903276692 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.900228774 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.899657336 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.896189951 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.903181998 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.900928198 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.904820118 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.907508773 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.917055984 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.899539976 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.893455484 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.903307481 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.899592491 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.902892617 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.907422231 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.903822261 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.904424775 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.905856537 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.904338181 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.904961991 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.910335431 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.914336369 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.901719515 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.90378405 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.900248378 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.905344555 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.906034945 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.906110745 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.90611745 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.902089657 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.903863908 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.90497654 seconds)
  done (took 130.432659834 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262707163 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263438209 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262143763 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263818599 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262842483 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.262182848 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263452689 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.261958015 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264136511 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263085557 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262605939 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264509026 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263237979 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263589989 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.262377925 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262745376 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262509179 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26221195 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264137659 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263941276 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.262852351 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262727577 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263232346 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262792877 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263174009 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265470946 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262977726 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264183676 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263825956 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26453483 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265489389 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.263154877 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265165198 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263873384 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.265144423 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.265003596 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264517476 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265391787 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.264329711 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.264689939 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264683666 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264706586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264405776 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.264400821 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265964921 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.26524241 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26566086 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.265137934 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.265557587 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265394348 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.265801226 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264601121 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26498566 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265428477 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265358285 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.267368808 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264334606 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265328049 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26590564 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266155155 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266792918 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266425149 seconds)
  done (took 79.555754308 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268376444 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267015563 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.263882226 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264235689 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268276416 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264608359 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267154292 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.268420434 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267665885 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.268020783 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268154251 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264672018 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26651509 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268184704 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264980439 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265294775 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265000077 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264337176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268854485 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265685514 seconds)
  done (took 26.503250729 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265559025 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267725968 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.265060222 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.264820067 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.268355383 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266412187 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.269031549 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269562848 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265054166 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268913356 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267885241 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26914171 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26592465 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266490539 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.270761075 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266171266 seconds)
  done (took 21.450870717 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265640289 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.270883454 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.26877381 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268521164 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.267664101 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266593407 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.269548566 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.266742983 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.267702038 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.271186385 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269235884 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.269878496 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.270932264 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.2704878 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.268190397 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27064615 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.267092259 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.267878885 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.27065853 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269436568 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.268654301 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.269674649 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.271770823 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.270416323 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.26846473 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.268948689 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.267501605 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.267700319 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.268392603 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.270053233 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268769404 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.26924404 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267956436 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.268546258 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.270250276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269163732 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.271655886 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.272152583 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.272268373 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.273126722 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.27350122 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.272300129 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27508763 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.274308226 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.271791019 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.274671906 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.270790707 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.270705514 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.2706478 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.271067734 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.27164081 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.272112785 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.272323835 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.273660484 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.273933947 seconds)
  done (took 71.038415354 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272487406 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272332159 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.269117918 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272874237 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272913335 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.26982974 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.273000132 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272812684 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270373512 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.273371921 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269419376 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275304523 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270772572 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273867173 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27091119 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27389381 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27161094 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27164534 seconds)
  done (took 24.07488042 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.272435294 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271876967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273733186 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272153517 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.271999854 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273713881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272243121 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.277514585 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276081444 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.273234285 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272895074 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.276253098 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275445851 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.274891539 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27248407 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272143945 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.274448211 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273877924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272878903 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272642518 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275618145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275488726 seconds)
  done (took 29.202097387 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.27493547 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.273199139 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.274374736 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.29214214 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.298304991 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.275618875 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.27488864 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.275907644 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.299080852 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.336632831 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.331723616 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.298863458 seconds)
  done (took 16.685005256 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274140519 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27722349 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274384802 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276698815 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276535661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275095532 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273718698 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274952696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277139987 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274483078 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274009859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277315044 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276023156 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274021519 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276579347 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277743658 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275437173 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274032914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274017923 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277302532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275138177 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277420095 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275280154 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275251194 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275649786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274486362 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278068226 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275800287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275418168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277350182 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279303483 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275203707 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277419697 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274444253 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278824302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279182022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274962785 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279143823 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27740604 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275914638 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279056272 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278889336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278596945 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277684819 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278222042 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276415004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277860556 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276751308 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275775894 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278942014 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279853891 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27832181 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280135602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281109337 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281370627 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279765189 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278353897 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277510736 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279682994 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279415724 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277214884 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280402089 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280121519 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277532544 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282006696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278309276 seconds)
  done (took 85.474461278 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278425543 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276860113 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277493935 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278989562 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276754382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278458875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278946778 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278464723 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278181655 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278961346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281575831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280197446 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279162949 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279540278 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27961304 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280046246 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278497364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279443031 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278084075 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280675374 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279416844 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279189875 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279952823 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280936118 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279103429 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282561682 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27955863 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280272764 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280096692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277839299 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278441619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27929953 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278414532 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279970798 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280780282 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278091 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28084299 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279743363 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279361125 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282782709 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279383059 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281978675 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281596534 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280226188 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280423094 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281753348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281210969 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281864172 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280090013 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281271635 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281235899 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280878088 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281266763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281611923 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281293294 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281545953 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280975323 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281942134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281515219 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284588839 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280990807 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281997005 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283821282 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281780386 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282405525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280888579 seconds)
  done (took 85.681126257 seconds)
done (took 1767.982381691 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.449561554 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40122381 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.283726828 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.295537337 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.283649826 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.306134397 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.296442674 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.282929548 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.284000247 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.284176867 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.284631523 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.473799624 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.279208795 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.283842655 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284819483 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.380010384 seconds)
  done (took 26.344018584 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.313970652 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.289443061 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.417309142 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.309450552 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.313970647 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.498081352 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.348774712 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.289008549 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.483736604 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.334574274 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.280589686 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.314898376 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.290170381 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.291716933 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.308919409 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.49696228 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.562440766 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.279146377 seconds)
  done (took 28.612203987 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.811380132 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.313626032 seconds)
  done (took 5.315496891 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.311769783 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.289214685 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.291085293 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.28873828 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.279495117 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.28068902 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.287985669 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.283633888 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.286297845 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.431940582 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.291922532 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.301254854 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.312559956 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.289757557 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.28869386 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332797639 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.463655562 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.288340677 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.286665252 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.29707303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.291631766 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.407162898 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.336846662 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.292647088 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432384134 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.292002886 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.296562956 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.299590363 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.432244604 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.288474038 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290548479 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.290761169 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.292313328 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.268698039 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.819983675 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.282500544 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.31997227 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.299972176 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.288720279 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.464713998 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.292418878 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.297811371 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.282473821 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.789183609 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.460471731 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.425792658 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.313164172 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.292860214 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.293418881 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363400026 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.292726971 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.294624144 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.339471923 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.164115331 seconds)
  done (took 83.275261215 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.299478927 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.285088198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46873797 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.312581493 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28459836 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284335645 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.285353769 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.614518986 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.316776581 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.287186187 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.635219406 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.89903857 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31106535 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.334411575 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.137750993 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.349172503 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.287411537 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.307665163 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.289351323 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.289167605 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86701872 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285666466 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.308181317 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.457653168 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.328623838 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845999465 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295616511 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.290352386 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.287060381 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.286518523 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852629796 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.316225051 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.34065541 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.287801069 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.579363595 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712885756 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674387441 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.290665486 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321627467 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.28801597 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.295058944 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834798182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.690249812 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.28780557 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.2881816 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842488279 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.287168633 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.29617529 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.289669837 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542746924 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.287894513 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.288813863 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317391091 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288532783 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.288856257 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.378044779 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.361066781 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848836902 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288121675 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.289802132 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321252254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.291173999 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294365552 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292751196 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.294444731 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.694122479 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.439803855 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.298007838 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692849995 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.849385285 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.308212044 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920768777 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.307881726 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.3022035 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.5056337 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288491253 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.288379381 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.863811924 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.2959074 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.292041168 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679614358 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.294099703 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.640143879 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.325285348 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29292713 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879723465 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.295262323 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.369826734 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.290800633 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.290968172 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.291290164 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29264832 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.589895785 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.347934461 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.291185505 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.290723091 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.304275927 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296441217 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.290872412 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.296122678 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920299355 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.320981519 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.291317497 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294212146 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293173835 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.291358173 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.292299536 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294041432 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562274098 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.292300298 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.291953979 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.29214767 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.291827673 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.297976686 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.473550848 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.299082714 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.645209795 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.295801273 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291384259 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316555619 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29274914 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.292074181 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293668809 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.299244175 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.209648452 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.604696253 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.315419413 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.293960196 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.293845779 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292181293 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.312336354 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31362457 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.330687519 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.296997363 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105584078 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.312772953 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.311611983 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.293109908 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.306877088 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292582312 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.314558335 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.293753335 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596250614 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.589305104 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.441872637 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295899802 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.293496046 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.105580311 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.361148485 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477643891 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.314588521 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295227688 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550085973 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.529415537 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.294812823 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.295480348 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.296287861 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559256098 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.296197385 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609376639 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884099946 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.31537066 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.297914352 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.108535325 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.032244072 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.30049312 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.298547196 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.651009618 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.317963784 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.296838322 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.296851845 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.297532208 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.297368154 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.318481635 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.302388814 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.297355889 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.296618108 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.34334328 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492724877 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.316492444 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307642714 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852394691 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306127724 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302000302 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.303814168 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.298758817 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.295979834 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.357408008 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.299372736 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.312501884 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.299299878 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.296550654 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.909256978 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.298093682 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.298925163 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491334163 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03517239 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.31671163 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.300049905 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.31635971 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.195486991 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.879796912 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.347699978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.654366961 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.305832427 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.339449046 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297226971 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306717971 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87774176 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302338174 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.318403478 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.003593379 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.318981997 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.853486178 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.297116726 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.297948555 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957464673 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.31887539 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.304493197 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.298749124 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328550071 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600159877 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.300146312 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.328243143 seconds)
  done (took 491.395901004 seconds)
done (took 636.128161113 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.298534166 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303752436 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.289046544 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.304332778 seconds)
  done (took 10.404337625 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.309347531 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.307065587 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307659942 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.307756725 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.308847099 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.307496946 seconds)
  done (took 9.058952869 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.300290412 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.304087659 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.305355602 seconds)
  done (took 8.118920931 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.538205278 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.330763992 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.684878399 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.332743388 seconds)
  done (took 9.096110588 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311301638 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313366253 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.311414829 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.31350642 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.31530486 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.316451661 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.315723344 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.316199902 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315486502 seconds)
  done (took 13.039735735 seconds)
done (took 50.924513622 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.380729344 seconds)
    (2/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.545220843 seconds)
    (3/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.412461974 seconds)
    (4/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.529501311 seconds)
    (5/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.523630592 seconds)
    (6/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.391315028 seconds)
    (7/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.498862407 seconds)
    (8/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.50442798 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.486521224 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.349012529 seconds)
    (11/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.316918066 seconds)
    (12/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.349434723 seconds)
    (13/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.291062031 seconds)
    (14/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.383038542 seconds)
    (15/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.475681455 seconds)
    (16/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.331378029 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.323718989 seconds)
    (18/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.291447228 seconds)
    (19/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.348265056 seconds)
    (20/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.329172372 seconds)
    (21/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.509195383 seconds)
    (22/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.435434867 seconds)
    (23/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.409469604 seconds)
    (24/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.317784096 seconds)
    (25/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.356852491 seconds)
    (26/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.525735136 seconds)
    (27/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.088572462 seconds)
    (28/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.492319869 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.546496683 seconds)
    (30/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.969724338 seconds)
    (31/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.414455208 seconds)
    (32/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.026653741 seconds)
    (33/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.320375126 seconds)
    (34/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.508612066 seconds)
    (35/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.680162584 seconds)
    (36/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.962042139 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.415267039 seconds)
    (38/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.204287773 seconds)
    (39/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.446103972 seconds)
    (40/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.437880384 seconds)
    (41/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.527720068 seconds)
    (42/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.336956562 seconds)
    (43/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.069558947 seconds)
    (44/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.10465142 seconds)
    (45/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.343986151 seconds)
    (46/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.40379877 seconds)
    (47/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.318138499 seconds)
    (48/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.327798882 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.37082324 seconds)
    (50/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.338327237 seconds)
    (51/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.29193774 seconds)
    (52/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.540033441 seconds)
    (53/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.337441829 seconds)
    (54/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.501689135 seconds)
    (55/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.344112546 seconds)
    (56/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.328101732 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.072564687 seconds)
    (58/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.423565723 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.44653383 seconds)
    (60/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.392935632 seconds)
    (61/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.023404842 seconds)
    (62/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.328781853 seconds)
    (63/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.417453566 seconds)
    (64/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.022508241 seconds)
    (65/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.329978315 seconds)
    (66/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.308371418 seconds)
    (67/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.465866001 seconds)
    (68/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.429489279 seconds)
    (69/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.391571949 seconds)
    (70/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.960847751 seconds)
    (71/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.685163954 seconds)
    (72/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.356718391 seconds)
    (73/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.350660658 seconds)
    (74/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.018114615 seconds)
    (75/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.973757507 seconds)
    (76/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.305129281 seconds)
    (77/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.599139464 seconds)
    (78/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.2972566 seconds)
    (79/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.353566203 seconds)
    (80/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.334351039 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.531950718 seconds)
    (82/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.393295991 seconds)
    (83/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.331354263 seconds)
    (84/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.151590763 seconds)
    (85/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.449564632 seconds)
    (86/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.223965248 seconds)
    (87/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.993895455 seconds)
    (88/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.322965663 seconds)
    (89/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.312797397 seconds)
    (90/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.297629347 seconds)
    (91/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.479522414 seconds)
    (92/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.363987372 seconds)
    (93/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.340249557 seconds)
    (94/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.320923062 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.489945484 seconds)
    (96/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.310794119 seconds)
    (97/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.410809808 seconds)
    (98/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.45319347 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.413168202 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.344430359 seconds)
    (101/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.311957181 seconds)
    (102/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.265262303 seconds)
    (103/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.351793746 seconds)
    (104/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.32413711 seconds)
    (105/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.298711333 seconds)
    (106/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.416218885 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.432974361 seconds)
    (108/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.412399766 seconds)
    (109/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.47366357 seconds)
    (110/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.515154949 seconds)
    (111/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.371093151 seconds)
    (112/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.311659448 seconds)
    (113/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.554439423 seconds)
    (114/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.314580474 seconds)
    (115/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.464881721 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.434566351 seconds)
    (117/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.376691093 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330531483 seconds)
    (119/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.402329699 seconds)
    (120/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.399933133 seconds)
    (121/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.30215536 seconds)
    (122/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.404332594 seconds)
    (123/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.327172982 seconds)
    (124/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.417723907 seconds)
    (125/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.343137657 seconds)
    (126/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.324282023 seconds)
    (127/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.320385118 seconds)
    (128/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.450493877 seconds)
    (129/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.363183373 seconds)
    (130/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.461403829 seconds)
    (131/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.39215469 seconds)
    (132/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.359433101 seconds)
    (133/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.086086328 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.406674587 seconds)
    (135/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.465743041 seconds)
    (136/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.475825189 seconds)
    (137/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.960437205 seconds)
    (138/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.332259077 seconds)
    (139/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.659977333 seconds)
    (140/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.513254667 seconds)
    (141/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.382590746 seconds)
    (142/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.331193359 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.370581714 seconds)
    (144/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.343584162 seconds)
    (145/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.509530797 seconds)
    (146/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.243303925 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.427339421 seconds)
    (148/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.329965553 seconds)
    (149/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.312868731 seconds)
    (150/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.089849519 seconds)
    (151/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.34904638 seconds)
    (152/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.483603577 seconds)
    (153/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.518976959 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.367770292 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.371209143 seconds)
    (156/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.468779344 seconds)
    (157/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.350565667 seconds)
    (158/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.323825967 seconds)
    (159/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.338364738 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.390344716 seconds)
    (161/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.375148056 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.429876525 seconds)
    (163/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.965255907 seconds)
    (164/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.483662313 seconds)
    (165/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.08757858 seconds)
    (166/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.432954771 seconds)
    (167/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.339508747 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.430664122 seconds)
    (169/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.715736888 seconds)
    (170/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.31583756 seconds)
    (171/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.304939482 seconds)
    (172/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347460364 seconds)
    (173/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.405305066 seconds)
    (174/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.314182268 seconds)
    (175/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.55114663 seconds)
    (176/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.151904987 seconds)
    (177/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.401711827 seconds)
    (178/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.347863458 seconds)
    (179/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.330809247 seconds)
    (180/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.444586835 seconds)
    (181/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.393708127 seconds)
    (182/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.421024068 seconds)
    (183/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.321118637 seconds)
    (184/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.08397755 seconds)
    (185/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.503383913 seconds)
    (186/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.368111964 seconds)
    (187/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.392743144 seconds)
    (188/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.34606701 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.35764044 seconds)
    (190/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.421650939 seconds)
    (191/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.35461862 seconds)
    (192/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.330147253 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.334835839 seconds)
    (194/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.404471045 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.358344348 seconds)
    (196/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.325776159 seconds)
    (197/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.449095946 seconds)
    (198/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.379276535 seconds)
    (199/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.331619372 seconds)
    (200/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.335863701 seconds)
    (201/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.428162414 seconds)
    (202/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.370517547 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.382954644 seconds)
    (204/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.319314834 seconds)
    (205/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.369014807 seconds)
    (206/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.473995923 seconds)
    (207/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.350385204 seconds)
    (208/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.331247753 seconds)
    (209/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.381341812 seconds)
    (210/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.315608818 seconds)
    (211/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.49312351 seconds)
    (212/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.398713781 seconds)
    (213/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.335789595 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.500461623 seconds)
    (215/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.328737255 seconds)
    (216/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.371419952 seconds)
    (217/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.305504392 seconds)
    (218/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.458281279 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.449870012 seconds)
    (220/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.971970724 seconds)
    (221/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.466711108 seconds)
    (222/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.428772907 seconds)
    (223/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.43190707 seconds)
    (224/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.312273674 seconds)
  done (took 365.873508652 seconds)
done (took 367.085169607 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37643982 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.503805413 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.346058906 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.345245141 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371203732 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.322060398 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.359953762 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.33516467 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330223482 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329904696 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.320829444 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.333991084 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.348346052 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.362998978 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.44120715 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.336117973 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.347002138 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329757745 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.368608266 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.388390168 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371248302 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374178874 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340953156 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.34469661 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376993026 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377157844 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350056524 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.31916685 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.33001671 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369137134 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.324764722 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.350441105 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378835992 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.380543178 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372572087 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.330251039 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373258535 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.506168676 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364290404 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366018758 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.333317909 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.378849174 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.344316678 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345118975 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.381730159 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343307461 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379193343 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.454600743 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.326348931 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.320850258 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380466904 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.391775429 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.333602078 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.321170691 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.321203855 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.452853073 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.332761433 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377574844 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.335183512 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375900752 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.443874906 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379647001 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.393022216 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378792369 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.334780142 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.352586424 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.333312613 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.390285053 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.330565678 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37597366 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376186785 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.339370022 seconds)
done (took 107.384917499 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.394061904 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.32993601 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.433593703 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.33294985 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.43506086 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.437371833 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.330612461 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.329548291 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.330471197 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.71250354 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.332206693 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.331719198 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.330444905 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.329655991 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.416517156 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.334209717 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.330517331 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.687013549 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.332598961 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.402428591 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.327073425 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331070874 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.334106073 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.724382576 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.330552451 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.330636203 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.406018804 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.333410791 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.678733785 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.330274212 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.332955656 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.687307872 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.425923314 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.35201585 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.343745675 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.338640676 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.437765039 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.354132113 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.413781544 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.414509975 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.435829491 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.371795105 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.328842956 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.332773332 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.334564603 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.33244189 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.330522551 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.358331511 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.33027504 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.330721797 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.673477367 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.34345343 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.339001588 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.330483955 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.330420787 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.353514955 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.331350653 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.333096346 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.423762001 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.333007923 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.396000856 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.714588765 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.720824952 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.333871231 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.331480713 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.331019859 seconds)
  done (took 104.459851565 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.401995126 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.409433649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.453185432 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.35292963 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.385743319 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.458205005 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.355109671 seconds)
  done (took 11.049481413 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.340011382 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335364985 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383412327 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385479469 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.333489275 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.549437134 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336674114 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.346935511 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.333304497 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.41164301 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.335511116 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337117417 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.341852553 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.333379069 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382691447 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.347657676 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452148523 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.336238067 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.335066741 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.488861778 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333066973 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.34231736 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.418668329 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.347593044 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.33909165 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343228699 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.296245876 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337076663 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333616949 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.338550547 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335622607 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.44684725 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.337402011 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.337523023 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334649892 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.496634698 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.337815986 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335207535 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.338012932 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.33687509 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.336163371 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.337196041 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.337270088 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.336132054 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.337655241 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.361116201 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.336888488 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.340544972 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.336765972 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.338032398 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414532311 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.340190507 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.337582603 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.336180011 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.416620588 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346749062 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.338086397 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.33594584 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.340486553 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335882112 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491717442 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.38707654 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.337927969 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387436236 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339959831 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339210691 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.339088399 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.33880927 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431846383 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.338882666 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.386810409 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.338124138 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.562132926 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.363328101 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341452337 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.342242194 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.342795124 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.340379404 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.338906351 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.345697733 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.337794471 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.341201268 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.347550764 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338475277 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338853616 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.522457671 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.496790846 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.339296406 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.352790602 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.347470405 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.338633675 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416860718 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.342525388 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.339336367 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392012604 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.457805948 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.428619041 seconds)
  done (took 138.600184814 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.346404403 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.349951563 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.345372181 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.364013012 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.342522531 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.34273923 seconds)
  done (took 9.328636045 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.344416485 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.344661156 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34105187 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.342623264 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.341081639 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.344370733 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.342340589 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343629071 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.346758115 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343640446 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.345642569 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.345615975 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.345350177 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.343875803 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.344338294 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.342680684 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.343894511 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341275955 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.345143859 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343016559 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.344024053 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.34381222 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342986937 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.34657435 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.350422041 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.345877853 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.351386155 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.344262953 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.343495577 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.351884099 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.365990227 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.344484452 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.347930992 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.351094371 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.348296903 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.345732218 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349463607 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.344326081 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.341647934 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.345568646 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.344434075 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34427734 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.34635705 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.345028064 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.34584827 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.35181245 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.350357794 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353033734 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.345690852 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.346770976 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.346857342 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.34612737 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.346861782 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.347359887 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.34913203 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370636096 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.351302844 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.345556048 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.344342176 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.348888685 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.349386636 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.347814934 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350297695 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.3511319 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.344704601 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.34755158 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.348646328 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.351240448 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346832488 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.347176901 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.348284046 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.345468623 seconds)
  done (took 99.215901843 seconds)
done (took 363.882535962 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.417434564 seconds)
  done (took 3.662529662 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.471966153 seconds)
  done (took 3.718830138 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.19562154 seconds)
  done (took 25.44586705 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.370280239 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.402816023 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.338715969 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.345928608 seconds)
  done (took 10.702209211 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.716156241 seconds)
  done (took 3.961139786 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.357077923 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.339005116 seconds)
  done (took 5.943001596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.698523256 seconds)
  done (took 3.944271636 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.785052131 seconds)
  done (took 4.035626823 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.362273151 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.355054509 seconds)
  done (took 5.971608768 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.326705516 seconds)
  done (took 3.572033769 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.477098276 seconds)
  done (took 17.72364822 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.350979325 seconds)
  done (took 3.599651819 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.370542351 seconds)
  done (took 3.617600489 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.463454705 seconds)
  done (took 6.708540649 seconds)
done (took 103.848666975 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.342221568 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.346594644 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.34380323 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.345419323 seconds)
  done (took 10.623357191 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.403448406 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.402029689 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.402503822 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.403196692 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401260853 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.400013792 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.373827418 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.374711448 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.40079069 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.400550364 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401106565 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401766267 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403133892 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.375659259 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.402641439 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402617273 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.401966695 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.402297617 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.376222721 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.402236347 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.352383285 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.402615461 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402088402 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351233735 seconds)
  done (took 34.688820665 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.868564599 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.423536382 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.504847361 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.404394108 seconds)
  done (took 7.4486625 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.427144281 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.428389655 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445349356 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.483128666 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.493129704 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442420071 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.37827843 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.373753356 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.360648892 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.431073552 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.486090251 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.420896392 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509338228 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.351305948 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.557561085 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.352283134 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.352386416 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.431235427 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.483208126 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.494570698 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.353535979 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.428916694 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.432356775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.421626579 seconds)
  done (took 35.587638181 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.359541395 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.364857083 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.35165591 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.366529345 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.352828163 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.351237099 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.353012591 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.357015428 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.350956337 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.352173068 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.353031091 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.365768903 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.355843003 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352207133 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.359670822 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.354527076 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.357795891 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.35526527 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.352018624 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.359143575 seconds)
  done (took 28.375245983 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.346415852 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.34438882 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.698367721 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.603675303 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.348332972 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.346093211 seconds)
  done (took 13.9370851 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.436429864 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.61496764 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.353431911 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.774597679 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.85604837 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.354597418 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.354297417 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.641565926 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.020442444 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.01570002 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.425637757 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.441129395 seconds)
  done (took 20.540562338 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.351206035 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.351487057 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.351547855 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.368325456 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.418122489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.378110577 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.36340021 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.34801792 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.423047325 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442125076 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.378517367 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.420466625 seconds)
  done (took 21.849395192 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444473386 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35000291 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35657664 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417823862 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348980199 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199430964 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419306364 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113408225 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.375547668 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624345168 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367667214 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450710756 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61046531 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350280587 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355389191 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.342216283 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586347755 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909727112 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353139392 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350942221 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403226851 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365425779 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373082658 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611588791 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356194518 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350883994 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.613274424 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349641588 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691456847 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369086262 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361777166 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3511655 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626303045 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064229935 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472683081 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602495479 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355964047 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353097023 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.339837726 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.366630526 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353868399 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359333191 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363075559 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353275679 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35150961 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358989544 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128730659 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.379842563 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.349696637 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353558443 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6694363 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455581591 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35828333 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352857702 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431757419 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353423386 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.358007347 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452260797 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934548076 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366294975 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364396491 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.357616271 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366615948 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354551909 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066724464 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.361284287 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.358066517 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357479935 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354529696 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368085064 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3716788 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354817192 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.378454238 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35431913 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170545814 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367726937 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360715738 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976641712 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356549536 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.360701284 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588466791 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354818081 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356820874 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.354826103 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355919867 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158905052 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366875635 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.341225722 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378646397 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123650213 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63172358 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383360589 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3879281 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.581528859 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.34178813 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356587984 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.364968632 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360055083 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379637423 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125239269 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379082497 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360449066 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621395512 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.568065053 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362987906 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.363740248 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894427066 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379745457 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.377339807 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361509618 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.612963096 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031590953 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376429124 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367489989 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377366522 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357710495 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217702952 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358528408 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.485868331 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370305893 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665854157 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.251837103 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359355318 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424897348 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362094031 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357786897 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35792922 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365718694 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361203298 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.6044681 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390956942 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.373800965 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.362064555 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359755542 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.373061988 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37161837 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.361004999 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585391365 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358516679 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661515302 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360027096 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360424682 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361774122 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.5851062 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.357421534 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.697930383 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626029753 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364860093 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369928868 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376017746 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380803438 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466254229 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384798543 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.363405769 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624643604 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.366924014 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.365662356 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362351255 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389458164 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366411112 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.367186607 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378767836 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038400169 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33447753 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369533104 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256621949 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376085238 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43075317 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369843117 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612609031 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.370040255 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366246089 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387795165 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.361283076 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608378342 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373813063 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.362037462 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464574688 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.896297299 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057996249 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376542829 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.362569231 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.360762701 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.359465715 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362754931 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363023551 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363683031 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614809685 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382353941 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367888964 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041057338 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365637173 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381945472 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.367815878 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376786795 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.36895672 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36382604 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37246071 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375212273 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371965355 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380476113 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50790042 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.377593511 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364486775 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.880749833 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370453323 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364332123 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364710338 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399476542 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365796859 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247022563 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629867613 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365707851 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705602669 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370134222 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.386604694 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.364761002 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371346011 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372862653 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.392645733 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37504434 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.376864934 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365831318 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394496722 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9444022 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202961333 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986661306 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384188661 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.377665501 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369703765 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143537287 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387656646 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366444343 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635382753 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148197664 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387390027 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903178837 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.388517594 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249984582 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687996841 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60554942 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383232662 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.375604243 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689555413 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584781513 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404006705 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37778208 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370766221 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.352280787 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986752461 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392074422 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450004451 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146072417 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398016514 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369812665 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.410129952 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373656039 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830891295 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391439206 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369224428 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384509891 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382347902 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247923554 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375360315 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368603805 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065003233 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371539775 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.909948075 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392336919 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626998326 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.385240945 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.376540804 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.374727199 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.369011565 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.627423646 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689270839 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373930513 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373307494 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997259694 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.245835914 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.376810295 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371033116 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216163115 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390556944 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720713903 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.38853556 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.371765043 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395256241 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371780867 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371849181 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.368517054 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376476357 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343261472 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93956864 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.378248811 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379540884 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385002599 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376063335 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629981846 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.38570776 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051093442 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605844776 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389047111 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395978703 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.377258072 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373467435 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.359741529 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373424461 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373693235 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381013075 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598774805 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394919561 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.359026459 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.455379372 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584104759 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372961019 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384604362 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659073539 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.374819693 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.375545706 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229289622 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405905684 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386078175 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374811084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374299216 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392268875 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445081374 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63428226 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.389138584 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.385711846 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837737218 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395013099 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395989315 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.387723955 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471064249 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37368761 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.375189582 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.14598885 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061928213 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211979881 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055807628 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699313893 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378358636 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383640491 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373861666 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537788366 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375566135 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649880415 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375221015 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.383904246 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398708313 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394371134 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384364172 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59102602 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650592105 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377321243 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375197918 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380456142 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.376753002 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388453284 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.588503859 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970012975 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01050777 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377927551 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383232981 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159763475 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672336965 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378236553 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37636759 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376946536 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.382394177 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.407922827 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.383391266 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377397535 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52594511 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699900644 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110966848 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.410836497 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.407286759 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.893719027 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384762049 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637726591 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375380901 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.641005391 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087003581 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.194658918 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647712172 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448154568 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639832675 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.379337508 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543364473 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.386301522 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380130152 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37840196 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378703219 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.379902929 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.389130381 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085804293 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653471428 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.383382689 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.386723678 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410795875 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.38996564 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604816572 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203055699 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608222433 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390112349 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385918487 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379986768 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096087139 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709129774 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384912369 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.383263495 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666093939 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385071454 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404412747 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.898343969 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.37880751 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008577809 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.35681062 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401856369 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38872862 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201346493 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085038174 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.384325154 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985839754 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38924071 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394657102 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658994822 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.390916002 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397290677 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664788057 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.3892376 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390546985 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649559548 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.085363884 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317847955 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.392289209 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410196027 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.389711699 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384120626 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459315571 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383962066 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395528354 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.861770317 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407212621 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3847102 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395424557 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.394621342 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397975266 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.387253322 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385020118 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.390980821 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.389684107 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.38746572 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395048388 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489718561 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011181709 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408685915 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.054530774 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.714973989 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646704493 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394507877 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.374321479 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.390185086 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387035319 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386636884 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386884152 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409939604 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017766894 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.399359697 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.401170425 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392723588 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.388019781 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597770535 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394126152 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652821844 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400872144 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405901172 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.370811333 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387148698 seconds)
  done (took 980.453830257 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.389187547 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.424752573 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.411543188 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.426911417 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.408616196 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.507400853 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.470688161 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417517684 seconds)
  done (took 20.743809021 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.400869046 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.400847456 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.401605653 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.39667013 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.403975255 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.924221596 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.419553309 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.397268778 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.404076592 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.399514422 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.401418202 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.376653752 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.398514816 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.397807905 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.378713289 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.398630433 seconds)
  done (took 33.193629209 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.705812283 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.679399014 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.009481049 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.403282758 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.424324113 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.4027822 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.81090339 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.423093234 seconds)
  done (took 28.146951899 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.399987353 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40020706 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.401009574 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.399046054 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.400603625 seconds)
  done (took 8.289077094 seconds)
done (took 1245.12370394 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.393644581 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.397108652 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.395091416 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396143217 seconds)
  done (took 6.871528966 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.376116536 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.374087419 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.375031076 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.388665018 seconds)
  done (took 9.804159226 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.251427487 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.124823278 seconds)
  done (took 5.666488839 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.911254314 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.910422856 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.918755019 seconds)
  done (took 7.030742618 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.718737282 seconds)
  done (took 3.009113664 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.330476188 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.392414617 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.107889448 seconds)
  done (took 8.122121655 seconds)
done (took 41.790110483 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.390073909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.644997801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.546020451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397485453 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.554200949 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.545521105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.234265557 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.391212598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423842257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.402273431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.390557863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.554027368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.147930233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.647468599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.147344487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.739810982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.553294866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398106978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.391568262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412842022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.234538363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398385632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.400654246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.401674178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.553530044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.539190695 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.412098613 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.743484715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.396188517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415248188 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.559104791 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392268273 seconds)
  done (took 83.650693378 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391738509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.431288589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.393793394 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410871384 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411899057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413074422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.413747463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414970927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.39382034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393097837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41184157 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413678527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.42738584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.394430653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.412955977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393638233 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.402429606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394727567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412287923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411596072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394868859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426451774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.401761873 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402419332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.400339379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395932673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414087178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.401750451 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.394422201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.394996624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.39698791 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419005654 seconds)
  done (took 78.279779802 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.405733318 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394305863 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.406596977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.394573258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414058843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.40642476 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396795577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.396976973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395005064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396009601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.396472156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.416425352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.396441838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396118918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.396513532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.411578156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.395245808 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.433225162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.394440103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411296855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.398380767 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397735388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.40234104 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.396575927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.415029672 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.397809044 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.420268723 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395966938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404840082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39625816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.396626809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416142342 seconds)
  done (took 78.189641914 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.681621141 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.405743063 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.405482514 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.398856779 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.405342252 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405695545 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.398697254 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.683835143 seconds)
  done (took 15.081715286 seconds)
done (took 256.491057296 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.396183634 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.621757144 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.427711993 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.398317867 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.427731776 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426210146 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.651747514 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44382462 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.646615998 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.436940778 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.423111629 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.401419101 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.706154056 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.568227894 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.419531251 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.405848882 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.773927304 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.425150618 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.688362043 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.705395259 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.425353015 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.408105998 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.394637311 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.799011776 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.424550743 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.496946426 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519023536 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.642100175 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.575324624 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.49677598 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.643887489 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.401107759 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.400656704 seconds)
  done (took 63.319373979 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.405533339 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.526247306 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.408699491 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.408849814 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.524873413 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.407677225 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.406568422 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.406879767 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.409052851 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.407222115 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.408233147 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.410855769 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.410805481 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.451638971 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.529560928 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.426083823 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.40737652 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.518946643 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.406041806 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.400999541 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.448969833 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.409818676 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.410008216 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.453155007 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.410159514 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.411588927 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.52777046 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.409709839 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.404655874 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.521525295 seconds)
  done (took 44.389750723 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.409338726 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.678431214 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.888984585 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.416958368 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.409647092 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.412367368 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.50132665 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.411039332 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412068448 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.413555422 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.590091008 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.414332763 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448911294 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.915367866 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414192031 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.412027851 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.412857808 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.413604037 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.688796148 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420276452 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.525957202 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.412482395 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.504967842 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.422090164 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.438756933 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.411872954 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.417118463 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.015419606 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.414636463 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.593376581 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.369243152 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.504742784 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.953486011 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.893598173 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.379591796 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.42005138 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.414839117 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.597150143 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.416194907 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.414689049 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.504120326 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.413739746 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.891033558 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.103410163 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.434589219 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413634088 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.034064384 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.598527705 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.704966433 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.424175138 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925367633 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.415657638 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.41528345 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.416366635 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.707004043 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.414815267 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.4152025 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.060878336 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.438821912 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.506493009 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.416729982 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.416053489 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.698287997 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.415532162 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.682332444 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.417758912 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42154891 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.437429244 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.89583477 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.418590936 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.118592159 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.436862781 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.415303336 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.596643106 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.685355665 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.073396939 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.440842094 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.692788555 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965451027 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.505317057 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.421782186 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.007518293 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.510401143 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.423678581 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.418945646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418704628 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.417496283 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.471779428 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.50591014 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.056526688 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124529466 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.080018747 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.530308676 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426037208 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.418716029 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.061674586 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.437389138 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.419459392 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.890901487 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117167831 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.438067184 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.422637636 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.131154519 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.43994786 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.511277472 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.423284947 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.905354826 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.420094682 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.46352064 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.418528559 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.427145506 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.443564862 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.509902593 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.423272202 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.418698839 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.10768871 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.625882267 seconds)
  done (took 187.989419011 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.412425749 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.411891517 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.412756795 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.411632939 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.412015598 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.419277157 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410297631 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.411141364 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417913767 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.411437153 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.413255313 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.421204823 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418898945 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.413429411 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.413702853 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.412234179 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.410880572 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.413279977 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.413822945 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.414004051 seconds)
  done (took 45.586179793 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.420211254 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.081063961 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.576275678 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.445478272 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.417253276 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.421305059 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.486762883 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.41988417 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.417870761 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.773721705 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.628901757 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.442353731 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.417859391 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.418885085 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.57644589 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.435312129 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.776366117 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.083429726 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.422941334 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.084046687 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.413070482 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.423143312 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.419484173 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.088113303 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.775751747 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.511567589 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.490329944 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.087015631 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419021609 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.42027062 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.085801869 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.421782516 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422693982 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.081786383 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443016048 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.427761975 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.419297039 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.492527657 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.491745592 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.780222207 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.169834737 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.513881081 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.436874384 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.821341243 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.425151109 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412036148 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.091319743 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.448441804 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.413922653 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.424094634 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428544094 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.599210051 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.424444567 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.598375144 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.420747984 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.424852277 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.089839995 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.598908296 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.578997614 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.661425788 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.447635814 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.512826374 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.421941227 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.09323528 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.446138222 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.425526158 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.426033609 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.641200195 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.117626158 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.515408029 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.783174186 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.785206622 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.426261224 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.493861383 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.444405989 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.855085421 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.492479908 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.90950503 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.78318513 seconds)
  done (took 128.178207797 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.696304633 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.546803286 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.591275375 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.092291457 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.420535835 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.559388095 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.548804247 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.708182527 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.42057837 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.537071348 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.664666954 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.510977539 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.185020509 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.505331307 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.528896264 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.582806574 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.582894574 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.4209074 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.176233335 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.632512754 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.445734504 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.582310639 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.046688712 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.617161659 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.422085647 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.015593905 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.424717522 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.166827236 seconds)
  done (took 53.95075353 seconds)
done (took 524.709586358 seconds)
SAVING RESULT...
DONE!
