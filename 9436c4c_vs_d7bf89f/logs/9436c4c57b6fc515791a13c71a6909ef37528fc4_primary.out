cset: moving following pidspec: 3589
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.040222251 seconds)
loading group "string"... done (took 0.557464073 seconds)
loading group "linalg"... done (took 9.093321775 seconds)
loading group "parallel"... done (took 0.173785369 seconds)
loading group "find"... done (took 1.477469269 seconds)
loading group "tuple"... done (took 2.156306249 seconds)
loading group "dates"... done (took 1.411054724 seconds)
loading group "micro"... done (took 0.223569537 seconds)
loading group "io"... done (took 0.644194109 seconds)
loading group "scalar"... done (took 45.044828047 seconds)
loading group "sparse"... done (took 14.206279896 seconds)
loading group "broadcast"... done (took 1.180815034 seconds)
loading group "union"... done (took 13.051859799 seconds)
loading group "simd"... done (took 2.767872554 seconds)
loading group "random"... done (took 11.201015425 seconds)
loading group "problem"... done (took 1833.808915957 seconds)
loading group "array"... done (took 26.330355308 seconds)
loading group "misc"... done (took 1.140143258 seconds)
loading group "sort"... done (took 3.832690701 seconds)
loading group "collection"... done (took 19.203850605 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.664659849 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139332198 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153313282 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.361583594 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.212821408 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154656171 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.168538291 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.564523563 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.010425466 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.23473287 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.130580663 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.566389848 seconds)
done (took 6.079878973 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.283245915 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.439113686 seconds)
    (2/2) benchmarking "String"...
    done (took 0.116133497 seconds)
  done (took 1.221023619 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.095541355 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178497142 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09735622 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.113824132 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.114705002 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112708998 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097087337 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114292446 seconds)
  done (took 1.496346027 seconds)
done (took 3.772683827 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.499610635 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.851298009 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.546405475 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.147474401 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.16361342 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.154441203 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319248736 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.165605518 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12719998 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089002046 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17657399 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.409435353 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.490168571 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.025913777 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087655315 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.131634157 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.086087714 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.742437684 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083971745 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.144476505 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.546278154 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.127449516 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.12104261 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143980294 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.194220532 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134361277 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.171670449 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.097347089 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.673770699 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106196826 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.192378211 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.102264737 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166881454 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.254260835 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.103953184 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.095403174 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685566575 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.180695777 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.117721586 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104450695 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679589106 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083911902 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.209982143 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.114640859 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113413901 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191397345 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11585976 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080726245 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.105534104 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.094393275 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16223273 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.475855448 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109957539 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.151465209 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.111024945 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689915381 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101073124 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159393744 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142906046 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110026553 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.10066655 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108212719 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159546427 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113133082 seconds)
  done (took 20.009942904 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.120091792 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.14528237 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096561262 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143360245 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143871222 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100254374 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085605415 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097040137 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127991655 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174922716 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141673326 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.147828039 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094408789 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084858269 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12112026 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252371115 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108344778 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125359675 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083932394 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109915821 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.146279773 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098288011 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113309815 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.114116771 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17288067 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208249328 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111536778 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126657342 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096799233 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102315632 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145751774 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.16539545 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077279205 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.097214459 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187437401 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122262224 seconds)
  done (took 5.273774318 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201270564 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11910621 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.199852403 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.185168694 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152508444 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.172846847 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123504034 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.275112415 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.210611853 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184229036 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119273529 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113505095 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080199197 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.100318001 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080788373 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.702581964 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.181986257 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153449619 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.130837322 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105977564 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085361931 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379029041 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103739514 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0845501 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10612664 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.07499123 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.180401868 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106560636 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.306940674 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119945685 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088752088 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134864025 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.219807907 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119574698 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14642144 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105785678 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084766954 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.238936318 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096360506 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097569163 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111387908 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137311718 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136510984 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101226294 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097180446 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.246400645 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086232149 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123290975 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.133208399 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199456257 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.152440423 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081636026 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.38442093 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102260672 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110238763 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.084047818 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.329684085 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131587391 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099909102 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080518174 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105536167 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081086006 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.806560898 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107457114 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.480074916 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096215536 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161993104 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102852833 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11006359 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088610334 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104961221 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105118965 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100452373 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080572351 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09944012 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081016712 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104246529 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117317773 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088491681 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098110536 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150523944 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.121235862 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085113832 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120283625 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127116368 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085014131 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09725803 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115334977 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099551565 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079419412 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101191895 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.148737661 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088614448 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119512604 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.136057079 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101068893 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130399896 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.10116367 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.225308195 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082859021 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127029419 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103064286 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113600485 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122023822 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099825287 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086202538 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098248907 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083156054 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101861636 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081336462 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166285107 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086970815 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100278911 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114550032 seconds)
  done (took 25.143224025 seconds)
done (took 51.095072051 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.477640406 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099680816 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113566785 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113842922 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.11223316 seconds)
  done (took 1.655876067 seconds)
done (took 2.370934353 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.33984691 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201000517 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102553132 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19798169 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087983963 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.207005226 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165904575 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119644041 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.197880804 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100372074 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177914225 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10094834 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090415121 seconds)
  done (took 2.831146135 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095560715 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121784148 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083178646 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112589149 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077409872 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112348775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094054221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.13936184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093969972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104935877 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077588832 seconds)
  done (took 1.825488895 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09113655 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116162793 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083110728 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109928133 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077515737 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091853045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111162076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118842009 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092898356 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105219013 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077968271 seconds)
  done (took 1.792732582 seconds)
done (took 7.15307994 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.061233196 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.521164669 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121081283 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.171918042 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.340369776 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214417296 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.540110676 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.136946999 seconds)
  done (took 12.003864481 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.114843797 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097327858 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098772722 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097964006 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081866706 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102009375 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082511111 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095760328 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081211126 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099474499 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.080734102 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098656778 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080561725 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097714465 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082397991 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098496259 seconds)
  done (took 2.261566893 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120124838 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116903372 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103747942 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108178765 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08550795 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10240441 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087705037 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102565887 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082780748 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100584456 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107456082 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089318588 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104619948 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083094749 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104255569 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091602788 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099603005 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103072601 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088338345 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104341748 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090275898 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101805893 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105378441 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090438188 seconds)
  done (took 3.191057196 seconds)
done (took 18.171997145 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171145978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085330152 seconds)
  done (took 0.970592529 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10244934 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120717817 seconds)
  done (took 0.944196994 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107888932 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097901845 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137279964 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114675388 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081942074 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097442657 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115478636 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099573875 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081140207 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098220579 seconds)
  done (took 1.758349782 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085674339 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102043019 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090358604 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120464576 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109342779 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083653756 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102870226 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08556986 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104417237 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080767291 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106763155 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117162843 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088342617 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11916542 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087433731 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104743717 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108547008 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085667495 seconds)
  done (took 2.507608623 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081150203 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083705167 seconds)
  done (took 0.888971912 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083628186 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095841771 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084086263 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099978645 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080624697 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09676878 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080183708 seconds)
  done (took 1.346287978 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.551708277 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.244176191 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.347255611 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.11581728 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136436513 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.371772728 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.153582187 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.096344004 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113440511 seconds)
  done (took 2.897126774 seconds)
done (took 12.033691273 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092384512 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.188751165 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.551110249 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118896543 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.07976877 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15916512 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.273173465 seconds)
done (took 2.190428012 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356579726 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124441188 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091272405 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079481499 seconds)
  done (took 1.373555935 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080291183 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103357228 seconds)
  done (took 0.919275625 seconds)
done (took 3.030251662 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079918663 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132010985 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079362203 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096684888 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080601 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097163577 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076943897 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080556415 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098944306 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.080330014 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098285373 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081705965 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095947583 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078737175 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081447923 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095898509 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078421154 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095621042 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079252665 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095660345 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081603233 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095958123 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079046228 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080586647 seconds)
  done (took 2.885553731 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.221825814 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097397986 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08583671 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101888352 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084207518 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102896038 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101557576 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081742061 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102917481 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081664965 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100115071 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083726059 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098185517 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083848144 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098934495 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100873952 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08552787 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097012693 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082299376 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100447656 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08647695 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097145314 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084267039 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102026473 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100990699 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084581473 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099063478 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081276291 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103249741 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083877027 seconds)
  done (took 3.651806952 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088365536 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07634795 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094700006 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.0890579 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093544889 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081000692 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0940484 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077634716 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096017691 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077299284 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095403719 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077020927 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094090007 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078703833 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07893508 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100480853 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113368148 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077790609 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07768733 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095256456 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083189439 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093760376 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080871657 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094791862 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077610235 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093901601 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078242301 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076947537 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09557003 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077379873 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099872717 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085130798 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094702343 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091157182 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100876687 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07839649 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104088664 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078188322 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095920196 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077331302 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09506308 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078260374 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077238823 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105683279 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080918609 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095202659 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077600908 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095841411 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078502003 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097776554 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077323948 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093840573 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08002604 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096123424 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084256897 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077179923 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095765403 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077011346 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095822747 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078150745 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093796614 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076797824 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101289823 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078369273 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118592987 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088883193 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095123947 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079958033 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098883466 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086201345 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097201254 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096432194 seconds)
  done (took 7.099838599 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082425781 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106162334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07985408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096510991 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075687721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077644901 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102676779 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095619615 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079765119 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114630782 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078212403 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096165043 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080385193 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098946809 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07850732 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096718172 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088829329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093021691 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078945184 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098623975 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078360841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101831527 seconds)
  done (took 2.719943486 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.226532301 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104779857 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144523631 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114541273 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098608525 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112999344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102302867 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087325684 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1024135 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08861542 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106033794 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086307581 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11552117 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105156367 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087920977 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106896427 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101755159 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089641468 seconds)
  done (took 2.719016802 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094075821 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098295268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106449503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098530254 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081574581 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100617936 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088061105 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114245767 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10008906 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.081760958 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109355262 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08379014 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100349723 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081615463 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101474552 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083014111 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101103864 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084349841 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112779983 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10927592 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090342524 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112477361 seconds)
  done (took 2.875578811 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098854014 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100545602 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112941232 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102372459 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077192642 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097809999 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089969624 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098906922 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107693379 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083299909 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099250247 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08020732 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105847879 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082454712 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105239179 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082023629 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100884651 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082125832 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100445418 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077977106 seconds)
  done (took 2.631834967 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125685485 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114930927 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099098612 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126507716 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115583306 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098127868 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126682003 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115903874 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098662378 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128884873 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097986717 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115782278 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126397646 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105552333 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116274896 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127568226 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110028961 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127297266 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115742543 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098685295 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129029512 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115997924 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109855113 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115987026 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098810806 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118862434 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116520424 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10561876 seconds)
  done (took 3.948305227 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081045107 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080953265 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096440357 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078807209 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096928114 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078828368 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096559846 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079110494 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081145037 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095969622 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080469419 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097764806 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081298095 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097831703 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080698389 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098236971 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080962211 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078233352 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094911661 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078643489 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098124276 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080594967 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097717643 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07868013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078121563 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098488083 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078941868 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095635461 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080989301 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09568845 seconds)
  done (took 3.365585796 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09012126 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105464051 seconds)
  done (took 0.943556879 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079616145 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116193989 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078323238 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102856055 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088035753 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099494442 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091696329 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104935061 seconds)
  done (took 1.509267523 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.1070413 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120359722 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087299662 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11151812 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.101260433 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118753084 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167145369 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087811648 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107502568 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083261336 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119259347 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081543179 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109919436 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105051066 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090769843 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114406505 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079576418 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109469429 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09038737 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101313219 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087983052 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116927086 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093593519 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107637272 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084634179 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11147863 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113980725 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093866648 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105656853 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094966724 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107076576 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075674266 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105047163 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087785898 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098000108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.101488661 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117318832 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087137206 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10907408 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105627625 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092527746 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095334414 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092546919 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107516442 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097609976 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104656183 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088541141 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094969064 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083352758 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103725363 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078008989 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102992543 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076911484 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110635464 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091587312 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118592994 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085463666 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104506019 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087190855 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103361042 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09027654 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104614787 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111605786 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086791556 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110471095 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092618302 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108740202 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078394144 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094472411 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080968598 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110146522 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108439709 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111618228 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088417331 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106978037 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080569208 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106091036 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089486915 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109235392 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111941305 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087405017 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107933846 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093992646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104715469 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087788033 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108233389 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085434015 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103487277 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083467179 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121905225 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085718812 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098405834 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084013658 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112184894 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088372333 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10437601 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085726268 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11112856 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077225212 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106442257 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08999254 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107994691 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095796783 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106763969 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106871266 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093139826 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112850544 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089142223 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104615716 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079012288 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106991782 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085245972 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109217664 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076869123 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10554322 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08690341 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106018846 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093741365 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102508208 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087684497 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111575553 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094919878 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102699318 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080376577 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106355221 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08848217 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10966451 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094884896 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103187251 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078617294 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096303993 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0920991 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105593862 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089918082 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106917912 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088826261 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095574384 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080938369 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106828192 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094993922 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104474503 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107727786 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094141843 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.108201443 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086941298 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11142031 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086847279 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101041547 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093707159 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105570525 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078989772 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111306214 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087731634 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103754999 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08899871 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110890094 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088790177 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106886076 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086063671 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106245352 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089508042 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102041806 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088527329 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10374334 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.105436255 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10684937 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078666216 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098834137 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090307877 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102232514 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086772546 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101184895 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08838215 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10658396 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081138024 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104534426 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086865316 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117817282 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11405264 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08996454 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108730858 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094831772 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105203424 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08981379 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105215392 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089593055 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106242171 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093147723 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10845576 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089029889 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105370319 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080003469 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108226791 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094714118 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101544236 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081440452 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10170447 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088187943 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113187076 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088556814 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106733421 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086786914 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108415482 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093077913 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106156652 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088258907 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101832966 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088929692 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111661374 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090126758 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107960309 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095911675 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107841714 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079763548 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111508533 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085944432 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110518406 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079293881 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102053033 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084469221 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107761504 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086791414 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104576542 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077325563 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111552169 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09442653 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106678315 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084805465 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106037523 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116019548 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087303842 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109850845 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088949134 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110219459 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103409618 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.1023518 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089129748 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114063584 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088968003 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096028649 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091662509 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105016312 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084109996 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104823131 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086678741 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108849146 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092752205 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107976156 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077827035 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106541957 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.087354405 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102944232 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080225052 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112899799 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089926874 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107203747 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099271833 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108767165 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090542637 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108855228 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087516714 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108821377 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090175142 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108651123 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110333536 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086955783 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084344621 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108186292 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102843521 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082285736 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087475628 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106969405 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088541177 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108978239 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104996402 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093961117 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10666783 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090194243 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126281589 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10388605 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084697969 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107495641 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091529567 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105533091 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087866719 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09726715 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093766046 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105677376 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0943189 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105442132 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080337205 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106665089 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088386299 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107797153 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090230935 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107399712 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086706002 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105395168 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088096348 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116477581 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085031164 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113117978 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090777298 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109450859 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088669759 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107710083 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087506747 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102750517 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088150882 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107549025 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08947604 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106283278 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090505114 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107708637 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105744199 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08697199 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108327659 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090032925 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109032712 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078623031 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084571367 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103510266 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088497228 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111892954 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10773126 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087421686 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086805599 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109830213 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086360475 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099558935 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092780998 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110268871 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089495164 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116551178 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101775204 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088635976 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117540504 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078406487 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103660606 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082377099 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103344946 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09466648 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108148422 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095729587 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107545939 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084546863 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100200237 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090555215 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104759172 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07898554 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10085274 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092132732 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104606943 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087270697 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107635581 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092006271 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108339049 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093191388 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105885508 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089053105 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108142546 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082221923 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103821733 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08539928 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107668407 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.090852522 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104353437 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082379542 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087986088 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108669788 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109114208 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089213258 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106340234 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09603958 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106689781 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089557083 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112706135 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079772926 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10743667 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088508183 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107006251 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085635699 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108841377 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091392778 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10962814 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095272866 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106907637 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092446697 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107898807 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08334791 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107252407 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089721153 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108223827 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085894069 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109136003 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096936177 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10150578 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089961237 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108320206 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086930862 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109081208 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09170123 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108725176 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094700906 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108514144 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089912186 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112399717 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09006141 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110000538 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090545808 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106916894 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093279819 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104234763 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115201774 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09146662 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109092311 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088259401 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103887029 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089422781 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107071102 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087759492 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113330816 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09067234 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103491376 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086482144 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082646733 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108460445 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11230008 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096100821 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108159786 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091357246 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099475971 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082945722 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109023773 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086551484 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106382822 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093570267 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113464376 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090125625 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105278526 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088604069 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113750126 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094474055 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110891344 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086026764 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110261966 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090934483 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.1084774 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086970177 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108452163 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091150954 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111179811 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088083372 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104629415 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117387864 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095324778 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109863986 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089373783 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110863183 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089978544 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100160141 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091870722 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107831881 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093218792 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108850567 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089700189 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11927602 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085601444 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107548237 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095116233 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107590427 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115008373 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081295484 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090041205 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110946372 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109831149 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081298136 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085812372 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105951493 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0907685 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105144985 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080878666 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11978766 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113934103 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09157303 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106396722 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089029563 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099155419 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081738978 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085493284 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11078849 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088074368 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118681948 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104653388 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085608676 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080273485 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110279729 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090874506 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111383756 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081486635 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101683015 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086069698 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109757976 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116077446 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088133873 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108232061 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091790421 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108678743 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084053985 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113717913 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08298378 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110226169 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10211957 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10989629 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092894954 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112115352 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097147068 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.111491203 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082030421 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.111028703 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091271048 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110523335 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.092337042 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.111934056 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124609167 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0921961 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105162514 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089278644 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108750743 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08672343 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116269665 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093212134 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110273581 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093190926 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107719983 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093144983 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116449861 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092865409 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110071094 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090459862 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108554442 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08949791 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108169159 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089130002 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.111902145 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091309124 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110491396 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092950604 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105322862 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120718221 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098773504 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111511878 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082811549 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105290824 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087222075 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081174123 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111885625 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08507674 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.108056691 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.088073061 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108546647 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093226977 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112382801 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090133166 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.111452125 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089926351 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100613861 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09403506 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110370028 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092736325 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10236201 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091021385 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113593742 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113360913 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096273013 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106816412 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092235026 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108041197 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093572174 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100802924 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094621497 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107286221 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08971362 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105127493 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09168885 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110856691 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093627021 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110623743 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093963414 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109061315 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096806045 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112275562 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084006458 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102248996 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09502833 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103732279 seconds)
  done (took 59.635879895 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15482497 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088762721 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10011076 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081300703 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128924618 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082705883 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100140401 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083505013 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102156976 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096381821 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101334108 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08199998 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123757153 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13003332 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126889763 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115381051 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082557006 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1018222 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08237705 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101325118 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103645022 seconds)
  done (took 2.965637793 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107515365 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120732466 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118830182 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1052408 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112390817 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119691861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098692714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12105779 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.12332142 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11398932 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104557587 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119784455 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.113670726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095270404 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114295214 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116206063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104840985 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111943756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120852051 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09859061 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117699695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118959694 seconds)
  done (took 3.277603449 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096068527 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088844339 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115180055 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083605893 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109387906 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.084274494 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.114941845 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087427693 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113993891 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090624175 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107762703 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090839253 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11458515 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.084210717 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107642121 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.086756092 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113629979 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090620919 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110640217 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.08477176 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.130776535 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103285714 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.085525965 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.087709015 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119893364 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090513472 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.110936537 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089680152 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.106302718 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090768807 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106140525 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092668034 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113070884 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087343928 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107796745 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.091147169 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109700241 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.084408299 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105680495 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.094373737 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104937784 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.091855756 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116400645 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.087026204 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106573802 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092920824 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110014516 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.08458542 seconds)
  done (took 5.577698933 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12636157 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162139085 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096135505 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.160109892 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131945885 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120863132 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095405273 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152718825 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109065988 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.090121269 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128677573 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125670947 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09221144 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.119429164 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094301322 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111119667 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114695677 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095393446 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120781911 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091141657 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.120106941 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113752946 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105827097 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122865017 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114353256 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090108726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109662656 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.100021848 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12301331 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116116724 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096730195 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121433153 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131730349 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.117918926 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.093781405 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112767158 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109229896 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111420875 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112711584 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.089929633 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112363891 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.101056628 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113834307 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128017193 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092575837 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112134743 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.094214849 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.112605502 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128951229 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.098108496 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121192084 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125706065 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096694346 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111294306 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096739513 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130161369 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110900251 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090177304 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114882087 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122945574 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.091715874 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121024463 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110674683 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11655868 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119779018 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125077239 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.09410627 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115410771 seconds)
  done (took 8.61099801 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098341815 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.135147132 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128283008 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108379185 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117085654 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115338549 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096945285 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.115643853 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096296983 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12391884 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11548011 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167441825 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090430252 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121799404 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096308157 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116645051 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116330918 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096357893 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115854291 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096157364 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116835321 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127124923 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097264094 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128155996 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128696285 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108884774 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097873912 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116689424 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10804714 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116737475 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12982638 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11638075 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0972941 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127320351 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129439544 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096452294 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106727388 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097214126 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117598652 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116439502 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091000977 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12706981 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097439853 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110829244 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116472331 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097138442 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128845363 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129764274 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122244384 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105304103 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117040932 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127849216 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097174249 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115832105 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128138156 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136261149 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108894567 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128131775 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116742039 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108242929 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129406283 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136451834 seconds)
  done (took 7.935278483 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087675235 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08713398 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105944431 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085230106 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107419542 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085876064 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107041467 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087807955 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087049913 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108765416 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087471357 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105422948 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085413094 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107595778 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086003082 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104255961 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085956413 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08414159 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107312399 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0854149 seconds)
  done (took 2.701367868 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097265684 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12876003 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088635631 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115790738 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090869642 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116446894 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109859805 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092220043 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108219708 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092050534 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120761079 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100857037 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109696805 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115630865 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101069378 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116252309 seconds)
  done (took 2.521434882 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111082257 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122607197 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.134630438 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.094340224 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107340616 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.096638487 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108569488 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.084747936 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103502391 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.0976903 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114740399 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.099724262 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108047442 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08718774 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108957841 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09431416 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104421354 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.093443793 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108351578 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.113857118 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114776428 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111161634 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0902339 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110001915 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091267159 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113651463 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095609459 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108411998 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08660103 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108216221 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.09188908 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117336794 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084619971 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.114197851 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085725137 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105906105 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087461315 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109150921 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093911749 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109318898 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086792896 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111911307 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087470906 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110532866 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083347148 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111536302 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083354608 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116682936 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.089651235 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112410959 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107644173 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.097305164 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.114934413 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.101454687 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.118852747 seconds)
  done (took 6.474289247 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103536608 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111839877 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093512744 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106287051 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09166165 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.116854628 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093269748 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110793252 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090855511 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105986797 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090860864 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112565968 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090975949 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112418104 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090740225 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112803558 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083532287 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109518003 seconds)
  done (took 2.647188762 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094491213 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108050171 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096473592 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107988034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088523935 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089214439 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105336054 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086244568 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106928441 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087812722 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109150177 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090425177 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106128129 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091135224 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108380666 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088118521 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110518503 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086569583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107804775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084065986 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110050477 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087093437 seconds)
  done (took 2.971375612 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.107140147 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.142063942 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104262077 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.153310451 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113962366 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092426927 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.123153217 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092957606 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132506686 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112374795 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092883401 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.112055423 seconds)
  done (took 2.203091524 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115925414 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148219359 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086980825 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112260577 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122198674 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095006779 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114538915 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094627704 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12755912 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128077193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093618733 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128074285 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127057681 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124944645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101930376 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122426171 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11399485 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095679679 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10963846 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137235163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094535617 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126842537 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113712818 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0950751 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113591231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125791148 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107294254 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128907293 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114927633 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10667167 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124878356 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114357309 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10656527 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129012193 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11150059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126820656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094305135 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137607689 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122361554 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106114562 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11300595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122598391 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107344353 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122393268 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126862814 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094329975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122642569 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114434109 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094787084 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142329182 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123265038 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12612258 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102343981 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129077091 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126753134 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143579966 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128407953 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126040351 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102527722 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128061076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126172354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122976736 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106962129 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129374981 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1223495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126202186 seconds)
  done (took 8.556121238 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131666868 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108781276 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093585827 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129622093 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12728829 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113675473 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094742163 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115221669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094367155 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111676406 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163685487 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114593873 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10624183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12742464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114597085 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095205716 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114957247 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126393652 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092043143 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144885324 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114412394 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126644794 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106464863 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127245654 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128749907 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122730684 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094741175 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114869079 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094877396 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115260153 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122078633 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094732936 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126764021 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107390202 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106660225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115076389 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093688714 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123526462 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114799677 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102200894 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127830604 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138063994 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114764116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094661417 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12964154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115183096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095436983 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111637174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094046941 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111524832 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128863362 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129407248 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108665892 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12681541 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114798796 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094519081 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115667836 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114449033 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095220859 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123336308 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126961192 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09591955 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143485477 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115191944 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095116339 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127560665 seconds)
  done (took 8.390882589 seconds)
done (took 159.546089576 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.108403981 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14791014 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10401722 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17349993 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088559911 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145773925 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122695177 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.127289633 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088491094 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110654702 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088700386 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.113279577 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15539056 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.11084845 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089691971 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113128742 seconds)
  done (took 2.715545059 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.185835578 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.29062933 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108793964 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115558251 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095984053 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113870668 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092772369 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117557343 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.0910589 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12484135 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112127686 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092535463 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123303332 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092663461 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111154227 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092157365 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123718434 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091828696 seconds)
  done (took 3.010505538 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116149961 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164954016 seconds)
  done (took 1.119367164 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127235942 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190875653 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310365268 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168066271 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11948046 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134196925 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.168924935 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131261341 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199238877 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132934473 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111399696 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117953731 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14205401 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102665024 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121151899 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096139145 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145449925 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118960394 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099332781 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11950208 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118503417 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.118835932 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121993031 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099131653 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189141152 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132775877 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096117825 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.119463452 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11895622 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098579973 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122923148 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131546872 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110828662 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.19541524 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102008593 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.191874362 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104558741 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11748349 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097306896 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.117947519 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120905638 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100504357 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133115323 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095531322 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.119532088 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125044756 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.098172826 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118254298 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103961517 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127917949 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124601122 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102026 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.19185535 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.104836104 seconds)
  done (took 7.868506222 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.847933216 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.168081642 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117228608 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.959282101 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148494274 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131496323 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.84495082 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117486864 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.279210209 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.098765215 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135930336 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130545497 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239900449 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262655161 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.154712026 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.346869366 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.728028927 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130999772 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124555947 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160605876 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124390832 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145165106 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11479938 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.473484582 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096949816 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114900873 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101478381 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129180645 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171409864 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115389008 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098992109 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.210925065 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.275067624 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190028603 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117962705 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093030433 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115676385 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.178943976 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278601005 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226719324 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182364576 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091394515 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114885525 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107841018 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137853812 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111316464 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175139621 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.182704289 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.204058814 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099201957 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129685704 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103076986 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127320398 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172471075 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.114102633 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.345468789 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350097264 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094809111 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125111379 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113251671 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274211592 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116151198 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213262905 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14479963 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222330849 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092464744 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795715116 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.176088836 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115489466 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124279189 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102959849 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122186454 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104836453 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176322955 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391210748 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132255982 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120708145 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093352816 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236949546 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094482583 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115255321 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174273251 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11642307 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103709857 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132650513 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12858993 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.182014234 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.260561029 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130710208 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101779486 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122838096 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128649592 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095874147 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.225171237 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228059284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.189200409 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.222988978 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127984297 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.175752778 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175793349 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128054591 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182100397 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124488082 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133373215 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109482783 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226343705 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150803509 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.095239189 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122251122 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123880598 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153948228 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098818343 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122785497 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.179659417 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477750108 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.197868499 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091460684 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119579627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103250611 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172095481 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124234378 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273816582 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104520122 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.200772504 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10154114 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.114198628 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102900132 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.19733712 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108750277 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126085908 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129510277 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102677308 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.283629476 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20739145 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133586328 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247211885 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187536607 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104988428 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205160286 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103619077 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200297964 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105335175 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128256171 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095279841 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790340945 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131691091 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122588565 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101104616 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202395653 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114523646 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096882428 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093196522 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114348686 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819750104 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097519812 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112761498 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.096479336 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125527784 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102968247 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123349902 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09846459 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194740514 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243195015 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107331008 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124098702 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092858075 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.193307488 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096561302 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116807513 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094408567 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116062623 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104325438 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121258814 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096110072 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.205381243 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170325793 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230053085 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.534424513 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.117274146 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095186859 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241854053 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115964032 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295499355 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124567797 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235251175 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178193464 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.114162761 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34631599 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.180510155 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202808376 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097312895 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.203046728 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0922707 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122902082 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.173648455 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093635321 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124897457 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16859999 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134872497 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131738632 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.138735766 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117619181 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238936243 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.114255701 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180885877 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117992194 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108303478 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318490354 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116139019 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116029254 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193102943 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09924665 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116758297 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.713159253 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116656532 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106143926 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126398095 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234116843 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.176983896 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124155641 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102624873 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130189933 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172598018 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.241139974 seconds)
  done (took 46.220895393 seconds)
done (took 61.766647147 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316686416 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278795084 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.339557918 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228963176 seconds)
  done (took 2.105289052 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.189227113 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161948932 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.132504113 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116623151 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.163300622 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092557724 seconds)
  done (took 1.720420884 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.505705683 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.389999668 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.356893615 seconds)
  done (took 2.121248786 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27376849 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.303280129 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.370424666 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.468016936 seconds)
  done (took 2.388563565 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214527846 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13190149 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.106016026 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.146826513 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.180947201 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.185493242 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150566457 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159632654 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136574447 seconds)
  done (took 2.328044969 seconds)
done (took 11.531087336 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.33626717 seconds)
    (2/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.188712577 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116593153 seconds)
    (4/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.19358432 seconds)
    (5/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135466364 seconds)
    (6/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.278056016 seconds)
    (7/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.313361446 seconds)
    (8/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.257185567 seconds)
    (9/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097775557 seconds)
    (10/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.297396632 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.115875668 seconds)
    (12/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.243286773 seconds)
    (13/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143734603 seconds)
    (14/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096522824 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119971153 seconds)
    (16/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.188081333 seconds)
    (17/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.228483512 seconds)
    (18/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.196429873 seconds)
    (19/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.261949015 seconds)
    (20/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.219965887 seconds)
    (21/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.231140167 seconds)
    (22/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.297844825 seconds)
    (23/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.152785694 seconds)
    (24/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.263176274 seconds)
    (25/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.19638925 seconds)
    (26/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121790184 seconds)
    (27/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.211649372 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.110017643 seconds)
    (29/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.199538583 seconds)
    (30/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.119415732 seconds)
    (31/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.207300334 seconds)
    (32/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.170572841 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098664975 seconds)
    (34/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.215180961 seconds)
    (35/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.16808202 seconds)
    (36/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.153963348 seconds)
    (37/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.113374003 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.150328172 seconds)
    (39/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.168803888 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.149980635 seconds)
    (41/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097386726 seconds)
    (42/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133329002 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124427255 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.12267764 seconds)
    (45/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081011405 seconds)
    (46/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.200682652 seconds)
    (47/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.122630813 seconds)
    (48/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.102309124 seconds)
    (49/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.151681189 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12216109 seconds)
    (51/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097351974 seconds)
    (52/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.081064442 seconds)
    (53/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.216661313 seconds)
    (54/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.224879462 seconds)
    (55/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.2347686 seconds)
    (56/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.115023648 seconds)
    (57/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.109830232 seconds)
    (58/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.136783718 seconds)
    (59/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.1591707 seconds)
    (60/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102118357 seconds)
    (61/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.245624767 seconds)
    (62/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.216787469 seconds)
    (63/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.162504747 seconds)
    (64/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131574602 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100291556 seconds)
    (66/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.211510074 seconds)
    (67/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.211183928 seconds)
    (68/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.153403088 seconds)
    (69/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081799389 seconds)
    (70/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126065365 seconds)
    (71/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082811873 seconds)
    (72/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131902553 seconds)
    (73/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172359497 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.153219677 seconds)
    (75/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.1049703 seconds)
    (76/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.080340832 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.150702376 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100086325 seconds)
    (79/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.105547081 seconds)
    (80/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.122255921 seconds)
    (81/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197382554 seconds)
    (82/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.102375383 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110282587 seconds)
    (84/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.20565658 seconds)
    (85/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.131410306 seconds)
    (86/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08118935 seconds)
    (87/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.119408496 seconds)
    (88/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101350759 seconds)
    (89/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129726364 seconds)
    (90/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093066061 seconds)
    (91/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.207531753 seconds)
    (92/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.102886963 seconds)
    (93/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.160272351 seconds)
    (94/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.105540239 seconds)
    (95/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.173339607 seconds)
    (96/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09674099 seconds)
    (97/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.163307686 seconds)
    (98/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097407091 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129574505 seconds)
    (100/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080985987 seconds)
    (101/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.111301928 seconds)
    (102/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.207455033 seconds)
    (103/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177013111 seconds)
    (104/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.13000977 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099346757 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.152022496 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.130359876 seconds)
    (108/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081306979 seconds)
    (109/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.16897983 seconds)
    (110/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.154662235 seconds)
    (111/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096120017 seconds)
    (112/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116805982 seconds)
    (113/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098138206 seconds)
    (114/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101810265 seconds)
    (115/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.098861897 seconds)
    (116/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081127513 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.122553364 seconds)
    (118/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.081763391 seconds)
    (119/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138491884 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130940269 seconds)
    (121/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082648732 seconds)
    (122/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099198554 seconds)
    (123/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.16292534 seconds)
    (124/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.104101717 seconds)
    (125/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094016606 seconds)
    (126/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.135023909 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101583933 seconds)
    (128/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119792188 seconds)
    (129/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081655896 seconds)
    (130/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.104732941 seconds)
    (131/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.18616514 seconds)
    (132/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.14958666 seconds)
    (133/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.12445441 seconds)
    (134/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098075471 seconds)
    (135/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120455149 seconds)
    (136/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097066364 seconds)
    (137/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.144971358 seconds)
    (138/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094177514 seconds)
    (139/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133960113 seconds)
    (140/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.20533074 seconds)
    (141/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100908635 seconds)
    (142/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.102756853 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101465706 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.123186693 seconds)
    (145/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.08149049 seconds)
    (146/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.17046664 seconds)
    (147/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081193624 seconds)
    (148/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.198839954 seconds)
    (149/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.103518766 seconds)
    (150/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112729462 seconds)
    (151/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.104160536 seconds)
    (152/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.098033423 seconds)
    (153/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132021326 seconds)
    (154/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.107775526 seconds)
    (155/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10377414 seconds)
    (156/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081177412 seconds)
    (157/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.10287157 seconds)
    (158/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082046683 seconds)
    (159/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081205533 seconds)
    (160/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.111755795 seconds)
    (161/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.123045834 seconds)
    (162/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.135572304 seconds)
    (163/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.081301922 seconds)
    (164/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117526367 seconds)
    (165/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096854505 seconds)
    (166/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117237686 seconds)
    (167/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096503219 seconds)
    (168/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.104852315 seconds)
    (169/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.081050884 seconds)
    (170/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123481716 seconds)
    (171/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.145148535 seconds)
    (172/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.105392134 seconds)
    (173/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.090872375 seconds)
    (174/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.106177806 seconds)
    (175/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.089987561 seconds)
    (176/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.103604179 seconds)
    (177/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17428234 seconds)
    (178/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.121798516 seconds)
    (179/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106595483 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.124027154 seconds)
    (181/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081572743 seconds)
    (182/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.147124658 seconds)
    (183/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.144031364 seconds)
    (184/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.082422734 seconds)
    (185/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.080404954 seconds)
    (186/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.105185416 seconds)
    (187/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101253784 seconds)
    (188/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104508026 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100373432 seconds)
    (190/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.105847109 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093958197 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11700531 seconds)
    (193/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.100025459 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.134969681 seconds)
    (195/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083053595 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120473099 seconds)
    (197/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083553768 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.131966178 seconds)
    (199/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.145223693 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.125259937 seconds)
    (201/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.08026388 seconds)
    (202/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200510679 seconds)
    (203/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.104463025 seconds)
    (204/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083722211 seconds)
    (205/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121937947 seconds)
    (206/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.102002543 seconds)
    (207/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.104274773 seconds)
    (208/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081531643 seconds)
    (209/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130672385 seconds)
    (210/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081308106 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131656761 seconds)
    (212/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097400155 seconds)
    (213/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.103311033 seconds)
    (214/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081468483 seconds)
    (215/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080156418 seconds)
    (216/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127940955 seconds)
    (217/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096807371 seconds)
    (218/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.103568223 seconds)
    (219/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081690313 seconds)
    (220/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137378944 seconds)
    (221/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.090744274 seconds)
    (222/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132680706 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102480755 seconds)
    (224/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.129732488 seconds)
  done (took 31.070398812 seconds)
done (took 31.942132333 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.412910415 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.138218142 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.129228658 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105467421 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.150110883 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.108062886 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129810789 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.107697101 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.128372017 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094928902 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119583062 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12893699 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105613932 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.147098277 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10674377 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12175494 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096289443 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130520779 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10449729 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132270274 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1497797 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097768374 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.127377152 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096898059 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149703339 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098286529 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128635345 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105783504 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128069509 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09536286 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.130551397 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120341557 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107241113 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132032065 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096422131 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.121487276 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096243708 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111054371 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096815411 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121857252 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104760581 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120769515 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106950826 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121710084 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098619035 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.120260689 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095109995 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131369283 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094730821 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.130241181 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098086522 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.135514979 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.118168023 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.096122055 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118374505 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097655679 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.130001615 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09663247 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129854012 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096384609 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121230732 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096209857 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123764367 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096591402 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120342601 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098236938 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120898871 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098472138 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118709235 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098841253 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118541268 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098563548 seconds)
done (took 9.473300693 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105058723 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.192300407 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154357089 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.158426575 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155619609 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115755211 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132033129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.154583726 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.106086714 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.150926161 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151859648 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143722189 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.135124744 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.129902852 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.13903214 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.105774912 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128008473 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138124254 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.139600254 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150005145 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154426816 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.10493909 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151046477 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.149461302 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126966531 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.1251475 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132522661 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128400931 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108186482 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14523852 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121045091 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132486195 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.13107698 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.117026532 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135235246 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.103157804 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140069248 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.123486416 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106003486 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.128361439 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140665822 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116434706 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.12510483 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135784394 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.10573974 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.132046442 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.104070915 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126855038 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105337546 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122570692 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.151806219 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.126685509 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127246181 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.130516273 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106055301 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128190663 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106908654 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.132051394 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132006089 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108376612 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12805622 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107659383 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133691718 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145346255 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103633371 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.131653196 seconds)
  done (took 9.478691446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120923787 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.15893679 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134525677 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112781757 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1313835 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093429997 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.117178853 seconds)
  done (took 1.794789989 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096635163 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.149246212 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128901946 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153132809 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141599507 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.13341442 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137348366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094930077 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.144444196 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129436094 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.124016176 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176241683 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120115694 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.108271256 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155376914 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118901841 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132678249 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119557189 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103907554 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153569645 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124796015 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.118562167 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133330731 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096450945 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141972017 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097676232 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189694302 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13200624 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095229302 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126640566 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100804988 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.215652852 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118990075 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130937617 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093672273 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149765646 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.11793521 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126953398 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.145983532 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100857512 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.142170178 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.103793202 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128498997 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1260258 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103737321 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.135816602 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.1080468 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.128679706 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101365261 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149608558 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132780384 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119125196 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121408915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100573893 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130250603 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102148379 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134571796 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101325358 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.14939326 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127509867 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123580857 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147417181 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.144155957 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.125481591 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13890595 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.118480126 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144719734 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125344026 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104580312 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12811711 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.123604571 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125104544 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.106264493 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.13658754 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128610653 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1257939 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.148156202 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100637292 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133301588 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.101984368 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123478234 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096886309 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13698002 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09977155 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123423272 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137908164 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109051713 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.125997529 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100322346 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.144249191 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.124549571 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108693351 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132088765 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099866412 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136850492 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150211417 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.107477192 seconds)
  done (took 13.138898072 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098655635 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.097403218 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.128657789 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.123575669 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.099105677 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097123902 seconds)
  done (took 1.587180087 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.1294782 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124237854 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112691915 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127916201 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165506139 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.122083364 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.14691553 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132945499 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.117879033 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136145499 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.121125568 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.148504526 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.152569361 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.105399608 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.146058654 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.104553068 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.147167019 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125269385 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.112157929 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125271906 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113425224 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129032387 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101639218 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.145830299 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.104657923 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.130859972 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127336308 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.113012925 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.136604924 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106963543 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129730486 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.105142556 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12948763 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131207236 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.122704277 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.129228482 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099621393 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.130835092 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104502658 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.129741354 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.147425993 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101457949 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135164135 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.106884438 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.131537459 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129116914 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.106859016 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127524442 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.122391586 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.131211022 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.107087804 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129701044 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.104936014 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.131566447 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.104219988 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13240222 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12996748 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.122192118 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.129032144 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104245126 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.126103795 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.104574005 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131950699 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.129516783 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104379932 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.130801767 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.105271444 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125603541 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102113602 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.129246299 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106536937 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.1265394 seconds)
  done (took 9.82409241 seconds)
done (took 36.74342614 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.201450603 seconds)
  done (took 2.127640478 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.89108038 seconds)
  done (took 1.821909797 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.410361977 seconds)
  done (took 18.384112731 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.542339682 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.630958199 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.996470191 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172053443 seconds)
  done (took 3.274340585 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.977550194 seconds)
  done (took 1.937243719 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.322401016 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2726144 seconds)
  done (took 1.540771381 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.846818774 seconds)
  done (took 1.793208591 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.607796225 seconds)
  done (took 2.559064748 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.366970854 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.207781481 seconds)
  done (took 1.527994568 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.600178228 seconds)
  done (took 1.549881033 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.456885833 seconds)
  done (took 16.415596109 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240780066 seconds)
  done (took 1.205539502 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.314803818 seconds)
  done (took 1.266504282 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.681721611 seconds)
  done (took 4.632191394 seconds)
done (took 60.972468162 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110730423 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.13521576 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111449862 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132570369 seconds)
  done (took 1.430956819 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112386795 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129362428 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108248198 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.13003646 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113685974 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.129957857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103722585 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.137105113 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.104325766 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.133303245 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.129498451 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.105506322 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131650665 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10350904 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.128075384 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106606649 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.13337691 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104487858 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130594163 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105510432 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.130256567 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130458943 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.108281496 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130845978 seconds)
  done (took 3.836309113 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.109742473 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101417803 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129455444 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100514277 seconds)
  done (took 1.395987854 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.114357189 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.152025882 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.124443862 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.140239118 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.152229844 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.119642587 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126803296 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100664224 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129722962 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112928165 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132322339 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14771679 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.120662106 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124926255 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.11541251 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120116141 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097922764 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.146295794 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.137582108 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.11453298 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125629986 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.113225291 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.135700791 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.116429627 seconds)
  done (took 3.986358964 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178751061 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.141449238 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.150601205 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175022293 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.127572875 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.124702267 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.127211347 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134136974 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.129571635 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.100529018 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.126042102 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15790437 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132014507 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127536035 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101911188 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13214044 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108256246 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131648645 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.103069296 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140513668 seconds)
  done (took 3.616501248 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10774774 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125340847 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097928834 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125461913 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108764092 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128745278 seconds)
  done (took 1.662553324 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098074933 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095416396 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.121798707 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095560727 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.126478666 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096337276 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.119486749 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.096492213 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09577651 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122947372 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095023959 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.120447505 seconds)
  done (took 2.247205276 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.226121339 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12618191 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126731677 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101738368 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130749333 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.100430017 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141245545 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.100395849 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.183105609 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127151894 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115338652 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.180782164 seconds)
  done (took 2.626111731 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22027609 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106861653 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287001702 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386103056 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172905219 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1773485 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286163117 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181540528 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197592741 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147787462 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217312748 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167333109 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138777969 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215961824 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123739858 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.196872351 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185274465 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211910368 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160287283 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252262625 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176609635 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177388359 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202275017 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135475885 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14912393 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167932773 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127719789 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11233838 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182793187 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180643049 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208744373 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132480195 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148431418 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211542251 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256857116 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18839734 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318528833 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144066975 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202438109 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.203319208 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290143067 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151183864 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20914269 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165629976 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114139372 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216790941 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167382897 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189939062 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114762553 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150967147 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194865681 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18613988 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191249442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148032298 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333645025 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13609313 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.155648511 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191230658 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199385507 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237134064 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177054864 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.106301554 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196789393 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201387739 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218591444 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.128717053 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177101076 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13411237 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188003251 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21458201 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187826192 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177716532 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.2191087 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143810429 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147534016 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216491248 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136631884 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189572692 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171487805 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.13107209 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159075531 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119427167 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137574055 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194753491 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106579753 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223577908 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146325929 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.301714749 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244417369 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167644284 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143962139 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17324996 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177163028 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156137096 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128403186 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155950405 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179777709 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140226053 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142330293 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167417531 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155293893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.108561424 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161861993 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.132976706 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168636374 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117109609 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177029262 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174867958 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137868065 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174647523 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133511824 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.167396496 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180212009 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235208106 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115662821 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141966796 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214777068 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168766947 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11830688 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224447523 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207274569 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.183864194 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12050192 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206772133 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208242946 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124516479 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235137518 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125363578 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143596294 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161068681 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16973729 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167694331 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164670923 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112227379 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162041458 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213958465 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.137100193 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117811117 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185437167 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135946509 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137495325 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12581747 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145123248 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150882797 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159374897 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.120449722 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164316479 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169746229 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163348995 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169087529 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152329022 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204335353 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142103275 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169188553 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130632737 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.127870361 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190694388 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205638486 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138938641 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198812841 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.178864574 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208500587 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172390897 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140956044 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192760932 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111128209 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.13032116 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17585986 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170296784 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174046754 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203446419 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20485288 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17602952 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162867578 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159588617 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178420207 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195450633 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166382865 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155341091 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173137011 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177033431 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103805334 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.133440191 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109237353 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150766894 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140444379 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114148314 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218667846 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174257808 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199398254 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171480749 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148594202 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202209071 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108192338 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174611711 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182860442 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149551913 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203979118 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202539643 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178099307 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153618541 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181075696 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.129280367 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108220724 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142541777 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178032758 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114913817 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145554822 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154749733 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203555007 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186340645 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160273238 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215471372 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178080113 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240903706 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103536104 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173854688 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191610061 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168601041 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171996958 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141571331 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.172721863 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200372056 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154741374 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206371004 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173767049 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179402859 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210713718 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167971133 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140941547 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15989703 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180043603 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121874741 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182933827 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158534078 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145069573 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163517368 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.118157868 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136953915 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192555639 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153821009 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189931243 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.178180715 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184345393 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136867969 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153181343 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145263584 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15654114 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.127447794 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182084322 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208180939 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153912584 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169184639 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19667501 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139870581 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.32489818 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213700051 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195294785 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148192613 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152710176 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144820926 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179532828 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174629786 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193423031 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154082376 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192812632 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170349145 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15403837 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117221667 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1583281 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161693073 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162493424 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.114932808 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.165672575 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.153261564 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195316618 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1560335 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170169418 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176672461 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129421412 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.166647724 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151702865 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222713707 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170489639 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188444181 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167851479 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187858877 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199796228 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134143904 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110052952 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138142212 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194814262 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113831468 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170445574 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195311903 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237006313 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171017317 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181057688 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119508506 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.135169547 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170298437 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158167401 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210095486 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152462812 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145608145 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213783591 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160422404 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112417966 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175910747 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296273932 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156692018 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194963304 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.130620803 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286629382 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113741615 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141793501 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179648067 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182429312 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11350451 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.195573627 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176538346 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156056558 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179540426 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119896509 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229326394 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220869352 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181469368 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188181074 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.154960176 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16956379 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173987485 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197803797 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153635339 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.127299366 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174030615 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203959842 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205567749 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144226884 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174281509 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175285059 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170672139 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185992608 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14416772 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200596014 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11386375 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177297807 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149857858 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133370999 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168373869 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194335996 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11672523 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222619148 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140674644 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143348085 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135441909 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133474074 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170279491 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155039224 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139837396 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191838235 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108932727 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174203251 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193350048 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140897805 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16537725 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128588006 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141806133 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153037446 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125967694 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146189394 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179883101 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205104068 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.112131803 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226204363 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184598699 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176637149 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171788149 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126145896 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673650364 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137288413 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202151071 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12904257 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227250782 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131362401 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176692157 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172418691 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161306727 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17934598 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160501589 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230891855 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176991139 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169025975 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113477774 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155505748 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156687145 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.113042935 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16308454 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174026287 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150599322 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.118471934 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167266661 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157836666 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.15603297 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120257537 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208557856 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159666625 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194159217 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195112468 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150388732 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17721447 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186248881 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141568109 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.173502238 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183572645 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153098142 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131590179 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142324403 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145650019 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190885686 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.106926261 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173363411 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171412645 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172899699 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173007233 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116681647 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171389867 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154040378 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171227867 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107200765 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165782278 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169950255 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141628845 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10917311 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166902243 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170957055 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.170167072 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107002446 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.183865242 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202891018 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.134633978 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115127848 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294489793 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167349623 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204558385 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.164979977 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147439684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153691467 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135562258 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165209396 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170871781 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139141965 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114538035 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141743346 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194988253 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17627998 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16779417 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1946251 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172075914 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202607066 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.116712071 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27619136 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149932961 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166573272 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113458434 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139323303 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150486225 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117039013 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156002141 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202895918 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190699315 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16314073 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.154701023 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108818675 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.13526483 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113351746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181859024 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165723294 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169381017 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153313198 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.098491028 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155095738 seconds)
  done (took 82.355257976 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168534162 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.169697637 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171594332 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227613226 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195193065 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.280846053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233944446 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252448815 seconds)
  done (took 2.751565481 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110957825 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144785428 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150614952 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133212586 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134061502 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.359091902 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145711208 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107657876 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195008172 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.146558572 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132023711 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.633620768 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.103729695 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.135978216 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123685171 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133953316 seconds)
  done (took 3.94303856 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.40557115 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550587623 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.102158755 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.259150988 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237589857 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.165504606 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.761916053 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.195554621 seconds)
  done (took 12.729940925 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.140870634 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.154289319 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.2772999 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.18664363 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.172383469 seconds)
  done (took 1.987193897 seconds)
done (took 125.517492298 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105890677 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.134266279 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105900826 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13660904 seconds)
  done (took 1.521797081 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.120806154 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090331153 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.125531465 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088935654 seconds)
  done (took 1.474870021 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.503947357 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090219379 seconds)
  done (took 1.684700686 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.133458262 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14756714 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.129602091 seconds)
  done (took 1.473643696 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113095978 seconds)
  done (took 1.173387167 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118001419 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112795166 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.153533653 seconds)
  done (took 1.447177087 seconds)
done (took 9.82948401 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142352815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.447379931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395961624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149545591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732941561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389598003 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053153005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165220697 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175597079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101522897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148902836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682341398 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.075387928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.353833204 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.058814527 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.448171055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713690917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102881324 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136987967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101892784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.030600461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099480248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131357261 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102649213 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711058698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405844784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131222885 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.489838629 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100994113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133208878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.391476291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128772819 seconds)
  done (took 17.481360741 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146201567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192230007 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137442694 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103457194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133792967 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103845399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138649513 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.114885824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190648503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129697297 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120754181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129753234 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106466415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.130263946 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.123671528 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.129382383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103769082 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.132267169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.108007515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.132158439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121229352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.129763236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102724704 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.131863813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100599128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.143542811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101103115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142307729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100522682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136566611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.134745049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102314 seconds)
  done (took 5.11680457 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151489706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201426988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.139089154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137154285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18164256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131165677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217562476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138589843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195063926 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130203197 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121091204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.131403878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168167108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102695987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.153002677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101699367 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132660476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103852393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137503052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103501395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150340381 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100085256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133246831 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.104065716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130514763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115916267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130493035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141529455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10285268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134796211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10871032 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129668356 seconds)
  done (took 5.429716613 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108650126 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13765324 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119352326 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147403703 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.105346872 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136018607 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109834696 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.133043825 seconds)
  done (took 2.058868931 seconds)
done (took 31.148051729 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124909341 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143850923 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115902772 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.140399401 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.138200045 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.128755706 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.11391805 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099636393 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.141077997 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117461998 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.130709928 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102495411 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.145684484 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106629382 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.146829048 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.111667782 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.153030213 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.117205482 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.131935804 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111824546 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.131355157 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.12293764 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.13706993 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102396401 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.156773425 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132885575 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.120035009 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.135230231 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10769964 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.103680763 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.148713375 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107325955 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133622848 seconds)
  done (took 5.218438624 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.13262072 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.177952252 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099579728 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129853912 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.172219343 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.100205815 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.158397341 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.100736997 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128710189 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100210397 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.099343144 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.158338559 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.162386251 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.135025013 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.181884263 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.167359887 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.129084983 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.169434071 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.154363216 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.140786362 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.16041283 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098524309 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.164738479 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.173214662 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099218379 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128205902 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.145341328 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.162139043 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.174523464 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.137579505 seconds)
  done (took 5.314426046 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112902291 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.148092777 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.129671617 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205796954 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173823722 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.117952953 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.145749263 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.121688755 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.161459408 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.102240127 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143502318 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.163906062 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12089154 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.143410667 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108642788 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.145656413 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.123433242 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.133226956 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.110986254 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152032311 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.121556423 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145344731 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117591696 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.143380105 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.102229767 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141616499 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.108716748 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.146815375 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.10968484 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.141984709 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.135828782 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.107732221 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134175197 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113589283 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135430495 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.111768117 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154554762 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112949996 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.146140777 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.138347822 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.143253434 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136371528 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125065214 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.18064363 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.104506171 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.139581694 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.114022066 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.142767435 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.10096762 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152431928 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118700476 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.13354313 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147402201 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102799999 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.101021986 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140513763 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103478415 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.136716451 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.111934779 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.137610882 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152747618 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.11294811 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139889828 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.105449111 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.14007396 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.103183279 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.13058752 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108766878 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.156848528 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109309299 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165886401 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103683376 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.138476997 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111866978 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139102147 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112187514 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.131716254 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110468972 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141629092 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.108684251 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.141636586 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105763447 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.136405603 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.122057284 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.148678943 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139866081 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109554759 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139315154 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.106379198 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.134982718 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118008367 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.13488496 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.107450406 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143448751 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103805909 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135911516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.110006871 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.137725432 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.102612621 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153736113 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108138684 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.132612187 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.121776059 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.134197593 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106734542 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142088122 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.116584678 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.132859318 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107153024 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.139424438 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.102495882 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138788752 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106795216 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.132787975 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115829762 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145489203 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.108019632 seconds)
  done (took 16.141137382 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.259365653 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.236689159 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208669229 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.323335696 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158034714 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130539404 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.233831428 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.187770194 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134495981 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175860692 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190647191 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.197656996 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.103719265 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.167657911 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.237586194 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.328826628 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.168000172 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176699543 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.144873851 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.157476757 seconds)
  done (took 5.011022118 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.123158062 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.175375661 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16345874 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.131312901 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.1346347 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.117432815 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.135643831 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150708703 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105128864 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.140629528 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102775716 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.14301733 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105825233 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.137401083 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121731506 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152488283 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107473932 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.141218732 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150665552 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108903338 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135117662 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155790539 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.114181316 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164017793 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.11265819 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.150634604 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102564814 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.141349133 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099847187 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.133279397 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.109044532 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.151992829 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140495963 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105364013 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13984588 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104188778 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.129631898 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106158455 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.135602295 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.108493022 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.14979123 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.107159275 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133257866 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.105405647 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.142231497 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101120577 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.108345946 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.141990587 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138755518 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112396839 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140534465 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108658488 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.141714348 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.115979261 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.131282913 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113920426 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.146743442 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.10815701 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.141494956 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.102577634 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.132807062 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107470316 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132525413 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.108463192 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139682315 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.15081748 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112855545 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133856879 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.110500937 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.137637982 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107267727 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.152685858 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.154307116 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102383056 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.100119405 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155871901 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100602809 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123775167 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.114170622 seconds)
  done (took 11.156545968 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132762734 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.13415185 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.123503689 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17052549 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.118927602 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.143078615 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.104206611 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.15543027 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.110154105 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.143846523 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110572869 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.149675261 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161788973 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.118009298 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134327858 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.119331293 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.138164412 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.146205913 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.154388717 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165922423 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115596696 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.13957895 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.118115153 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.146380335 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137949789 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.148911709 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168013717 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.110271297 seconds)
  done (took 4.922317567 seconds)
done (took 48.829512362 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.178527399 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.409268608 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.165167755 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.163215606 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.208907571 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.211653241 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.1672989 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.358058799 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.899286482 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.155108142 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.162694448 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.162534018 seconds)
done (took 27.329034919 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.282183488 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.754788318 seconds)
    (2/2) benchmarking "String"...
    done (took 1.489139421 seconds)
  done (took 4.344709488 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.162131449 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.163998776 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.408731144 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.16378592 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.18102813 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.181229515 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.16647885 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.174526569 seconds)
  done (took 15.529540279 seconds)
done (took 25.404964196 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.184849988 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.489037146 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.450930611 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.181237566 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.181790598 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.172660752 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.1508212 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.231266031 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.167765461 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.155015113 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.166006875 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.43743188 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.157675606 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.567423181 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.164359833 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.178718604 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.184575935 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.513548532 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.181021427 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.207436847 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.150496422 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.173785137 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.181953385 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.190023721 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.185977751 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.167646117 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.196984795 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.151513798 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.476496826 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.176708716 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.212465155 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.170262565 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.207183402 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.178397973 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.276767791 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.20034909 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.473681701 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.163912567 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.160484036 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.16822093 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.467026687 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.580585904 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.166178141 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.167326198 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.179757346 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.243807394 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.15907056 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.892535327 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.167615802 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.154367196 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.199378065 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.596403133 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.174413951 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.170961613 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.197256899 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.521795479 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.172134272 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.252350307 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.201383955 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.182196697 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.191665203 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.175258945 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.204556 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.176968321 seconds)
  done (took 142.073438224 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.167998194 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.168207616 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.167873462 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.175248761 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.168794839 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.170684962 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.169210552 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.168903849 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.169555247 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.168252398 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.171527236 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.16965582 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.171234515 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.127895534 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.169471778 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.193844299 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.174697493 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.170159939 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.170996329 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.16871501 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.180822247 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.173037836 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.169673007 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.17031445 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.177204932 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.252664827 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.228815344 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.185700831 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.173042517 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.168876415 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.173450887 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.219393068 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.808105905 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.02673524 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.183047685 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.210731163 seconds)
  done (took 78.979593894 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.17445744 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.174174976 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.172740671 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.205041662 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.170269855 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771544794 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774719892 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.967089055 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.45620259 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.660660942 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.506079446 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.174098353 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266472732 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.185942725 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.176133747 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.186274238 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.197177516 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.175010249 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.170655084 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.772440216 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.189083292 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.264969625 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.353310073 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.190446505 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2042374 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.571224368 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.171556531 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204132649 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.507620451 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.223865743 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.171731536 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586337642 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.099497993 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290986749 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.174093457 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206532065 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.172494938 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.455576121 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.173310727 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.172663995 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.176492407 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879380797 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.176671349 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.775703888 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.177552856 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.180331435 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.176340719 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.173063528 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.209575475 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.02226159 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.194302171 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.174171487 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.174805493 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.173816709 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.172265259 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.208304333 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.440214378 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292470787 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.175919772 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.177189418 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207765958 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.173614195 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.697616655 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.174224291 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.744768904 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.239654505 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.29014429 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777345955 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178693114 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273303025 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294914953 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.175214569 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.174511906 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.175954926 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.174564567 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.287102561 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.175742966 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.606014793 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.354748228 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193860142 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.653849782 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.27615776 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.176207189 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.175527004 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619857116 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.179019179 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.175754124 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947817536 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.177141841 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273675178 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.176970871 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.176230932 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.176104017 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.608448468 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.174346493 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776675376 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482188996 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.177249268 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.640003616 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.182494867 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.62162969 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.749983071 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.940086334 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.179194227 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289382125 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.355896757 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195444391 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.175256209 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.177306033 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.176775725 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.658718615 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.179386299 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.232654011 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.580552665 seconds)
  done (took 365.065241993 seconds)
done (took 587.206745491 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.903737508 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857192168 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.998873055 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.885943013 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.854943021 seconds)
  done (took 10.600730455 seconds)
done (took 11.696528321 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.37213019 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.374538103 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.241469306 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.376802731 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.211957717 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.394304971 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355149048 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.199773493 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.286102672 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.266901805 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.289110661 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235376459 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219263758 seconds)
  done (took 17.924277501 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.45863449 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.179648008 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260140909 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.435631527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218453683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453860049 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.471946322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.180015338 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322992324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.191942223 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.192911413 seconds)
  done (took 17.469082205 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.462620191 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.179937014 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246423064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.424286191 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219807317 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.440000177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.474042051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.181509703 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33272866 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.193258438 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.192052551 seconds)
  done (took 17.449802691 seconds)
done (took 53.943890622 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.218391932 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.348888617 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.214861987 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.192138092 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.189381228 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.190477431 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.195154072 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.19070079 seconds)
  done (took 10.845207199 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.186367916 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.18561321 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.188107337 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.185575375 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.190223565 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.188300628 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.188972568 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.186238152 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.18614973 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.189160213 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.186314459 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.190945347 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.187222142 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.187394805 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.190970749 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.189442502 seconds)
  done (took 20.111387664 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.189219957 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.186158273 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.186990956 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.188636483 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.188812782 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.188709964 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.187703064 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.188102262 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.188040941 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.188238226 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.187540758 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.187468645 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.1884978 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.187503259 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.188593818 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.187361796 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.188993117 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.188873765 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.19157144 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.188779709 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.18824278 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188616758 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.18845203 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.190273862 seconds)
  done (took 29.62975553 seconds)
done (took 61.688645362 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.184149152 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.197548495 seconds)
  done (took 5.488085286 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.251898371 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.253447647 seconds)
  done (took 3.61280557 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.191708835 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.191066597 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.19144379 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.191991845 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.191401811 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.191265764 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.192695479 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.190605338 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.192158173 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.193278544 seconds)
  done (took 13.024513386 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.19213944 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.194191352 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.190470649 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.192718391 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.192159406 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.191278863 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.193000044 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.191999139 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.194849612 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.192289272 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.193300833 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.190736647 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.193185704 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.19145818 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.190931345 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.191601375 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.189553905 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.19186076 seconds)
  done (took 22.564616921 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.206233353 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.213859142 seconds)
  done (took 3.530067287 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.330807356 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233576083 seconds)
    (3/7) benchmarking "month"...
    done (took 1.30757345 seconds)
    (4/7) benchmarking "year"...
    done (took 1.298082831 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.232915002 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211446854 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.231909191 seconds)
  done (took 9.95491011 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.192692566 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400189831 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.511843316 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.77829399 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.195760909 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.197352263 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.062002916 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.197644591 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.199468264 seconds)
  done (took 13.843930132 seconds)
done (took 73.122842934 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.184435523 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.238185201 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.193219087 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.202653689 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.484166657 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.221259861 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.190120479 seconds)
done (took 15.819713762 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.178897453 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.18109557 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.18141383 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199452394 seconds)
  done (took 9.850597618 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.190813943 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541360822 seconds)
  done (took 4.844093798 seconds)
done (took 15.80421952 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.19744819 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.197357386 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.197530166 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.195488624 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.19861882 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.194549671 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.193800514 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.197040296 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.197611907 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.19648714 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.196710543 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196429644 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195044502 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193902759 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197211134 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.191436913 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.19426958 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193304573 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194240916 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193241066 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197567759 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.195516909 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.19411714 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.198486086 seconds)
  done (took 29.809470958 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.199091916 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.195878561 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.19711392 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.198573798 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.194088507 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.196720359 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.195076119 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.194875224 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.196297744 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.197796419 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192329966 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194696105 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.196938221 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.196214166 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197807128 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.197187528 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.200170668 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195043737 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199736888 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.196248391 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.198587023 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195992228 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.195862602 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198774447 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.197199583 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196839519 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.199188614 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.19446549 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198836688 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.195080256 seconds)
  done (took 37.016103288 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.202463333 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.205136902 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.198635407 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.198056565 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.198408149 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.199801342 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.198130029 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.198066005 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.197472268 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.200866726 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.198490257 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.198528219 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.19777264 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.198964552 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.199631258 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.198633619 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.198181639 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.200086231 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.199220627 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.199763269 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.200271017 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.200937045 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.20059322 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.199980113 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.198777419 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.198609068 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.200601518 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.199533785 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.199353123 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.200869345 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.199258503 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.200211565 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.201082229 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.20134432 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.200043012 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.199377526 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.206214191 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.207842645 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.200846383 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.200566213 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.199674619 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.20181044 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.201513408 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.199837971 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.19913198 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.200104866 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.200316204 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.201717023 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.201260703 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.201711568 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.20131151 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.201716658 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.201423049 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.200363329 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.200680901 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.201817765 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.200718823 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200646346 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.202096732 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.200326371 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.200965541 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.201186799 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.20073749 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.20105091 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.202054987 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.202147453 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.201276317 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.201348201 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.202857233 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.201809691 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.202649285 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.201838774 seconds)
  done (took 87.556284663 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.202307702 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199870704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.199872344 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200623713 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199538221 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.20211275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200816224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202550847 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201176266 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.202598691 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202181454 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201181542 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200763508 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.203416722 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202466815 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.200571403 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.203983172 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199897437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.203238034 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203474849 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202131364 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.200721201 seconds)
  done (took 27.552763793 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203760697 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205840065 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.20108697 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20568376 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.203224558 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.204457435 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.203111256 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205940762 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203695521 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200391234 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200838573 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203841307 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203194607 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20123986 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200801843 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.203572183 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203258125 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204439088 seconds)
  done (took 22.776392472 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.203920976 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.202652638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.207066992 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.202201636 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.20154264 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.204740443 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203084365 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206526486 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.205538235 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.201831902 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.204755344 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20528552 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.205072666 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201246113 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20400616 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.203669565 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.206597522 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20292443 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205955283 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203667334 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.203871671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206907967 seconds)
  done (took 27.612729773 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20570507 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207127247 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2038727 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.20340198 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.204102105 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.206248277 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.207217443 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.205457139 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.20718623 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.207903234 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204756905 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.207237067 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.205027133 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205659341 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.205672818 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204998501 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.207640471 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.203003573 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207989192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204055625 seconds)
  done (took 25.234612034 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208632392 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209947528 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207743728 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210110684 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208700854 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.20940177 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.209491 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.208823903 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20956305 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211304269 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208066047 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.209227017 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211389596 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.209714999 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209822769 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20942729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209404827 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211747491 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.211215349 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211307223 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.211744109 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21115104 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210588858 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.210596389 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.212051946 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21187117 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210244074 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.20966612 seconds)
  done (took 35.004873683 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210043335 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209786187 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.208783166 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.207570959 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.208347908 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.208255035 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.208930969 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.208114656 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21029997 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209157469 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.210703192 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.211245432 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209901332 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.210302159 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209169704 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.210239142 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209934252 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.208596973 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208727042 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208343342 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.21098531 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211490787 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.2126554 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208485936 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208085802 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.211181507 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209832688 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209980527 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211756676 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209174221 seconds)
  done (took 37.413552055 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.256729811 seconds)
    (2/2) benchmarking "in"...
    done (took 1.256609931 seconds)
  done (took 3.637207242 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.209357819 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212270773 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.210844458 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209991857 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210923639 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212994077 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.212714536 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210870936 seconds)
  done (took 10.816861595 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.21307988 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.212531132 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.213450559 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.213429892 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.212375795 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.213269829 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219075571 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.235078127 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.212675308 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.215402561 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.220005248 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.220900333 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.216721845 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212666994 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.212275333 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.216285823 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.21367514 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.213818121 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.213839193 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.214804064 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21559319 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.216757495 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.21663186 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.212044657 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.217568411 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.224367767 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.217511912 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.216197437 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.214524931 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.215990526 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.214273854 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.212561766 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.216123987 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.215374509 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.21634651 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.214799929 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22342239 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237887305 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.219848434 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215705168 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.217115507 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.213375734 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.216513233 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.216279601 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217231721 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.216211715 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.216684889 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.214671947 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.215156584 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.221172396 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.22314017 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21576224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.215091613 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219777772 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.217016445 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224608218 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.237329685 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.223105472 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.226791201 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.226742918 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.230373282 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.243347544 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220748601 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.218520473 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229206266 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.245566904 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224574085 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.235625396 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.214857237 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.217140023 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.223110746 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233077383 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.245766703 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.218666785 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.218196501 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.217981887 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218461271 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220256299 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226147759 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.242022337 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.218193706 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219673939 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230539879 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244067424 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.218375715 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.217555556 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.219052722 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.217413526 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.22048253 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228614253 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.239927502 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.218897528 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.217944544 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.220026923 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.220366419 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.218375697 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.219371845 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21848233 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.216310873 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.219680473 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217973397 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224434624 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.228865865 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220108962 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.219041199 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.228218674 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.221798587 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220198997 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.225226382 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.220948333 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.219987793 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.222894895 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.227543611 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.218415476 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224348475 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.229022898 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.220612142 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.221716535 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.220091247 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.221665188 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238725289 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.249532339 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.222073452 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.221176136 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.225974852 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.233317775 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222050786 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.224299723 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.223707101 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.219060626 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.220153627 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.223645709 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.222164463 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.22296219 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220820213 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225034766 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.218224 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.222631614 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.221789807 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.222138972 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.222442075 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.223457768 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.222684189 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.223157759 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.221540935 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.22428216 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.228169107 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.223022745 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.224004229 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.223109446 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.221333932 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226063447 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.224266036 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.224735015 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.224781646 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224498219 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.224336072 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.224150253 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224192329 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.224862077 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225432539 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.225514503 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227677507 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.22673888 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.228388949 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.225992079 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.223603808 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.227265786 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.224735093 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.225559787 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.223937219 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.224761924 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.228897053 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.232581748 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.226205426 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.226775395 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.229302131 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225613977 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226108558 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227053956 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.229876247 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.234238988 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225698075 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.232581805 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.227454808 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227121237 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.226162908 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.228055212 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.226393801 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226799617 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.230144462 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.237627866 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241061187 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25437498 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.228388584 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229796753 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.229926857 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.232311438 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.230142317 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229044468 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.228620017 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225683822 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22818366 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22874358 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.227696731 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.227538852 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.228802838 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.22820671 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230453469 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.227480649 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228869475 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.22807074 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228812713 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.225227553 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228543607 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228047348 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.227351534 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.22665429 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.228404362 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.227784791 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.228988093 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.230169599 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.235113359 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.227694395 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231197795 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231640732 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.228391092 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.228706644 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.228532131 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231086286 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.229230478 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235003639 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.248406043 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.229713836 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235354337 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.24988792 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.230832387 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.231626847 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.231460063 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228760681 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.235277589 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.239120688 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.231183171 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.23238964 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.232195457 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231317292 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232750349 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.235488151 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.229042015 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.231172055 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.233337078 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232347897 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.228713457 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230510009 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.23183685 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.232184247 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233262676 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233727069 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.231425112 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232664233 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.232105779 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.232016788 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.232491597 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236011336 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239898671 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.238195936 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.231848833 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.233996376 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.234066693 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.239507386 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.232979565 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.233628534 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.231805854 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245962038 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.259276605 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239467257 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.254396215 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.234432254 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237045781 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.253781224 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.236139665 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234636964 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233078733 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.238124669 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.233497771 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.231879702 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234475941 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.234402193 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23569873 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.234694125 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.238382091 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.233677525 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.233196059 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.232222636 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.232834753 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.234367972 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.234053829 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.234798053 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.235074433 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236950718 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.233430457 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.234417718 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240418867 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256802198 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.233454195 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.234560125 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.233198786 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.233005917 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.23496657 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.234576559 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.239330997 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.242499106 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.238825485 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.24342663 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.238416452 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245810361 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.235678711 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.239938804 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.244220073 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.233592591 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.234852404 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.235971047 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.23551641 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240378174 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.256675255 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.238200785 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.242138335 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235041036 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.237211915 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.236424699 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.237705514 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238729297 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.235679753 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243336492 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.260668651 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.240858758 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237075721 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.235458543 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.237365361 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.237284669 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23606265 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236834701 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.236548066 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.238690429 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.23774186 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.23587818 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.237871863 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.237821252 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237692533 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.235450606 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.238149431 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243442527 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.261274269 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242589194 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.237942378 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.245261345 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239386401 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24768905 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.259664939 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.239560993 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.23666272 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.237327394 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.239698192 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.23741667 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.237908013 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.237915243 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.239148698 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.242423047 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.237051872 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.241719356 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.23943159 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.240023518 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.241210202 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250077345 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267456847 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.240426367 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244100471 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.235759835 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.242624975 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.243612545 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.239632332 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.239026282 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.243737101 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254914167 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248283005 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.239477265 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.764882327 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241310789 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240583625 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.240735574 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.240071125 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.239112827 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.240398672 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.241361025 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.238580803 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241261118 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.24279494 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.242761214 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242032836 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.242781496 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.25010702 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.241118733 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.242405784 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241096122 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.244138543 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241437752 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.242165433 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.240096956 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241258309 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243223269 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.244943333 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250072747 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.251937068 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.244751552 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.242816336 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.242006245 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.242587348 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.243581484 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243370716 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.242641457 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242019603 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.243855759 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24448907 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.24279725 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.243419902 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.24438428 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.243129487 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242951301 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245671656 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.252377917 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243570335 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.241091754 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.243600235 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243272779 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.242598423 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.243445251 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.251117237 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247156273 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.255313198 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252616209 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.246484706 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.243993203 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247783822 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.253356965 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.245364509 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.243623011 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.243776183 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.244586217 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.24555538 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.246498424 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244494818 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.250115196 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.244114573 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.243397123 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252576197 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26919884 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243470694 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.246827012 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.248239495 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.243487923 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.240859303 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24367588 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.243427932 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250445042 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.266150413 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244475126 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246213667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.245610326 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.247395557 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249192631 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245240333 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.245700564 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.242632222 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.245683576 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245317096 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246192601 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.242546475 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.244962595 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.245208227 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.247543296 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.254959 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.243567349 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248473034 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.245580853 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.247080375 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243849854 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246338744 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.243966631 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.24456441 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.245384379 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245313327 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.247151535 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.248552057 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.245574595 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.247317884 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.249098569 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246857564 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250951447 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.261421258 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.258078319 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.244099489 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.245647926 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.246584294 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.249354847 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246237496 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.246352791 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247026901 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.250171714 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.247772033 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247401041 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.246951971 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.251382208 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263985415 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271857549 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248520942 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.248954509 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251612564 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.248818626 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.245874697 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.248823317 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.249946668 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.2521526 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.256890593 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.248557214 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255084138 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270440039 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.251569126 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.254117287 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.253622892 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.257730763 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.252484411 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249213955 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.250754019 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.25616806 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.268772473 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250666874 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262261999 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285690777 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.272137045 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.250992301 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.251514981 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250945131 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.250405284 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.253784144 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.25084593 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.251356838 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251593131 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.25090623 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.253103047 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259586024 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.252958575 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.252063512 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.25017438 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.250800204 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.251842627 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.248413132 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.250077013 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.252190372 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.250118772 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.251985373 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.251022026 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250967383 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265468758 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.281225311 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.252990095 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25322635 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.249938175 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.255895516 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.255535182 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26505043 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.260924446 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.251141454 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.251793269 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.254703 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252787123 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.251424296 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.253411066 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.25210625 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251752518 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.250795586 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.265658053 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282032999 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.258412137 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.253946263 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252318547 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.253257473 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253527007 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253475592 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253617999 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.255756462 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.256533389 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257430752 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.253638884 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.252886666 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.257259394 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.264005085 seconds)
  done (took 738.746497155 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252809569 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251252184 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251284245 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249915725 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252240229 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251680433 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251078092 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252361515 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.252459974 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251808015 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.252080177 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253700212 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252882614 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253836043 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253326084 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253855803 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253652307 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251718205 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251962901 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250901027 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25206355 seconds)
  done (took 27.459063459 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.253504334 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.251621775 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251483787 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254732608 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254393901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.256386515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253967671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256641388 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256101729 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253418006 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.256640473 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256966986 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.253120909 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.25316527 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254100678 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256872776 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.257275951 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253568675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.25666839 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254448139 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256555179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254713187 seconds)
  done (took 28.770551425 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.255475112 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.257268539 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.258064801 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.255135276 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.258253754 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.254444283 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.257149091 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.25826882 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.257873965 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.258167424 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.257898992 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.25891464 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.26571414 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.26524855 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.258685605 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.258352313 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.25732939 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.258392141 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.25800735 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.255364271 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.261908361 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.278992216 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.255994107 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.25829279 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.257815764 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.257997724 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.258188177 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.257956791 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.260299776 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.263654597 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.259847516 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259426338 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.259907992 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.259763182 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.260003685 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.265092477 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259209373 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.257713549 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.259887673 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271796887 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.287814033 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.261020966 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268021755 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.28459226 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.260626 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.266916606 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.269296455 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.259323356 seconds)
  done (took 61.711562438 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.868197934 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.885871053 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.880853748 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.886851236 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.886006675 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.890693858 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.89921516 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.894872929 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.888459471 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.887442192 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.887667718 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.885669029 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.891964525 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.889686117 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.888512388 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.890052567 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.889535854 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.887819952 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.896907953 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.898321373 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.889406253 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.889902368 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.889727919 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.885608615 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.891592074 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.889717726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.886877064 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.890908807 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.893323409 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.888746201 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.896238582 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.899147661 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.900177842 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.886803652 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.889766611 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.887906408 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.896103395 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.889000735 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.892295415 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.891380765 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.895728926 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.889687595 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.899021473 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.897756754 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.9072047 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.893677228 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.897709954 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.894405384 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.897348969 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.896722811 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.894218855 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.890548771 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.897972822 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.891806319 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.901141704 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.901740325 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.901941557 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.902252054 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.894340846 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.890976113 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.890124495 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.893713052 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.896724795 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.892055556 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.895431931 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.892584668 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.896083674 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.897187478 seconds)
  done (took 129.860074294 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263919015 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.264111806 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265720952 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265134332 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267570299 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267306281 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26532129 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.265451395 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264077251 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266425376 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266676512 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266618105 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.265207261 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266781034 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.265306688 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266619505 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26659521 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265915126 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265883638 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267415289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267123657 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266930121 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267544972 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267810553 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267300666 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.268270332 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266498992 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267959044 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267909016 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268245027 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268500647 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.267427648 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.267470519 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267435414 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.268708462 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.267487121 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267976024 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266822846 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.268763815 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268107046 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267946803 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268130517 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266999008 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.269008329 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26791373 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269217694 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267452704 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.269689543 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270724765 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269505671 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.269761958 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2703966 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271692732 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26925406 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26944263 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.270628539 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268844248 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269651629 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268577195 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26998428 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271530066 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.26997207 seconds)
  done (took 79.775896163 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268697969 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270391435 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.268959632 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.267819989 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269193074 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268477825 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269811887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.270948904 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272259885 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.272264704 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272771093 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268456013 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269558238 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271792581 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2671841 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269059819 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269883088 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26802834 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271977515 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26826865 seconds)
  done (took 26.574344866 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.267610898 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271112178 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.269064195 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269216935 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.271544619 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2684003 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.27262774 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27179147 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27117219 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271652422 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271883868 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273043651 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269527217 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269698752 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273920543 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.270526322 seconds)
  done (took 21.511595811 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.270508207 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272909555 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.271931172 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.27205475 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.271515284 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.270214162 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.273272427 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.270131951 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.269847022 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.272579184 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.272539222 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.271967604 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.27238778 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.272657625 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.271818467 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27462863 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.27169081 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271239701 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.274169788 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272552187 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.271941115 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.270404215 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.275145639 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.274988612 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.27213333 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.271739363 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.272016834 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.270977005 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.272064696 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.274644144 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.272201253 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.270796214 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.271585075 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27138693 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.273552075 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.274906144 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.276881143 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.274105782 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.275267115 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.274286282 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.274142297 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.272115882 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.275065985 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.275511171 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27297975 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.276449652 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.272769841 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.273867246 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273500509 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.272764877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.275833675 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.274811492 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.277096965 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.277129154 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.277187996 seconds)
  done (took 71.206571831 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277614768 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277274377 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.274125185 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277153512 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277139549 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.273443632 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276861661 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.276484474 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273928217 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27637717 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274757163 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279524019 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274967443 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276370023 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274442376 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278078145 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27334558 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274175867 seconds)
  done (took 24.149208931 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.275346136 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275787652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.277919376 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.27676502 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.276296591 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278077533 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27613894 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.280362741 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279059585 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.275737513 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275465829 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.279380275 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277672143 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.278246318 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275664799 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276399204 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.278874285 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279072945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.276350154 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275040137 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279179651 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278627234 seconds)
  done (took 29.285748682 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.276098658 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.277698074 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.276678588 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.296501423 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.305005398 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.277788176 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.278912096 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.276559388 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.302794729 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.338521996 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.332845393 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.305660852 seconds)
  done (took 16.730541819 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27444841 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280253963 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277694607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280435825 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281671472 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278890421 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278120959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276874587 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281189765 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277354831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279373038 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280715483 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281157791 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277869276 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280871846 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281444354 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27790245 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277647805 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277835621 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281440306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280469773 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282592505 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279901508 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278891271 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279044177 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278497973 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282565202 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279633819 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278464565 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280255803 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282995194 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279278693 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283216663 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28021075 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282521018 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28418674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277738646 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282993235 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282792268 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280954102 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283188947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283667028 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283476931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28260499 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281983746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27913127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281613358 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279924616 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280242013 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285099081 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283864783 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280908591 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284171723 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283294836 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284739323 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283916742 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281641208 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280653701 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283751863 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28169886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280304267 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284260277 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282736538 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28252624 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282512394 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281030135 seconds)
  done (took 85.731381333 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281560804 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280298475 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281152322 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281731695 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280413133 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281975799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281743553 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282144487 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28306633 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283222836 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284588353 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281857615 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282714849 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282870197 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282225966 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282868779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283809778 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282136264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283391398 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286458346 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282899431 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283356753 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283069309 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282402935 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284147497 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286160994 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282312798 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281603832 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28353092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282676832 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283567908 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283312632 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282171901 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282195516 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283534945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283509493 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282729748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282644713 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283369235 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287338739 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284417253 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286991184 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283186027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285526368 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28415251 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285023783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284776843 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286497641 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287261809 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28665281 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283775447 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286656229 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286794716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28449173 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284763363 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285116987 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284748956 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285142642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2843468 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288336312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286349532 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284349471 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288177251 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285235487 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28510616 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286569704 seconds)
  done (took 85.93428648 seconds)
done (took 1772.988017252 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.456179407 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.404214187 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.286853795 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.299301344 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.286536352 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.280269935 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.297680483 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288509001 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.287660884 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.287529995 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.286077523 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474178306 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.283398223 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.287876984 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.288082048 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.383203112 seconds)
  done (took 26.372707933 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318158405 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.293109442 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.420151323 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.315661399 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.317287662 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.4970975 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.353173441 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294676227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.480823293 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.337032858 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.297589337 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316449299 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.290457518 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.293270454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.312373789 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493531485 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.564426355 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.297074211 seconds)
  done (took 28.686343496 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.809947748 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.314399998 seconds)
  done (took 5.317854342 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.313218553 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293232587 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294435421 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.291666354 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.284277419 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.284352534 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.292409114 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.288175264 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.284694907 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.437210508 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294531533 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.304646225 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.314863794 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295379522 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292419687 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339103611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.45612281 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.291966844 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.291129079 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.302958215 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.293890927 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.414080245 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.341533462 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291508289 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432616917 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.28588278 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.302494848 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301023231 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436072522 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292839672 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.291661024 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295058345 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297245359 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.261151698 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.811115443 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.287673787 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.322232016 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303943515 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.292020201 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.463505094 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.296124658 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302275188 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.288331612 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.794222738 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.464119385 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.42945689 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.312248154 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322114429 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.298178543 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36983115 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.300156066 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298522803 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343045793 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.190573459 seconds)
  done (took 83.48067011 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.304769134 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.294708908 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473845808 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.317577704 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288760018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293720883 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.294456942 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.623903519 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.327302397 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291554244 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.639080651 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912752097 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313994367 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.336866682 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.140480944 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.35276216 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.2910759 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316180763 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.29618271 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.294605321 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865750426 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29244247 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.313448552 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.47082634 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.333706875 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.843588227 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.290801123 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.315871114 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.292657889 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.291696123 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862825947 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.322774235 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.344508283 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.293832043 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58157813 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.709717481 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66864518 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.291660996 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.302222854 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.291147663 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.310081265 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82958257 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686963925 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.291784746 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.297157094 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.857286403 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.295618027 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.300703863 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.293633312 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546180679 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.292429573 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.29391773 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.312035042 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315563226 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.29239935 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.360198976 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.364611822 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.861591275 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296750005 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.296212622 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345742271 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.295317414 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.301837274 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298389483 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.294630486 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691198721 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.438624823 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.301316375 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.6887072 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865358803 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.316635157 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926148581 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.318803649 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.320962449 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.507674442 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.295019732 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.29443169 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.884117861 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.30472884 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293047413 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.695181948 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.303910554 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.641056869 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.323924255 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.294230082 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87771761 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.302640918 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.37136199 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.293449765 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.294757585 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.294206083 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301055701 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592626736 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.344847771 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.294056913 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.294934408 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.308196505 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296686463 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.295668438 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.301718614 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924601487 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.326822996 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.294639467 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300134149 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306629158 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.298700725 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.297511713 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.298468749 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565998952 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.297499172 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.300932193 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.299904903 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.297759261 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.305163676 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.483003437 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.302030288 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.664700599 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.305595635 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314011829 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.299324853 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297021029 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.301930251 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.298006552 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.301542038 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.209200767 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.597882055 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.31804247 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.299273005 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2993327 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.295983438 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318724395 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.320500136 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.339204383 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.301520115 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111586294 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325624319 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.323772143 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.298698147 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.309428864 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298797472 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.31844705 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300206442 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59802286 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.601847334 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.452850728 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.300314046 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.299648739 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.117946993 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.369175222 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482289721 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318097043 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.297059991 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.553180926 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53659658 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.301193444 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.304349171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.302208759 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56579987 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.300881328 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61313219 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901193498 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.324127591 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.304838357 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.120394192 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.029909115 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.30167807 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.303580394 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.6557437 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.323708333 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.302620906 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.300590066 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.301304538 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.299927416 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.322725998 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.306433389 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.301956598 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.299804632 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.345547608 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500428551 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.321378715 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.310765458 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.85845576 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315338098 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304079216 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.330672486 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.304866824 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.301173901 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.364419862 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.30597411 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.313801252 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.306724106 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.300975622 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923452629 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.306072253 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.305480501 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49617597 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044170249 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.32778407 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.304144697 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321702495 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.21165328 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.897325935 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.355559373 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.669064129 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.313786331 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.345848597 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304112734 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.316484156 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.886045499 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311243372 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324388793 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01259218 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.325630699 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.924611128 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.304170991 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.304542247 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969088849 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.32689783 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.30545576 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.303759139 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332593908 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.603502943 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.303484732 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.323198065 seconds)
  done (took 492.765283526 seconds)
done (took 637.812722578 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.304133436 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309151333 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.295983638 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.307980861 seconds)
  done (took 10.433128158 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.315324971 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.313311303 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.311983833 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.311334975 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315655644 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311720213 seconds)
  done (took 9.092878215 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.306067734 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309992521 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.308189686 seconds)
  done (took 8.138041578 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.544757114 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.335462195 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.684442902 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.331985796 seconds)
  done (took 9.114383732 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.312127696 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313262618 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312109167 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.315609931 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.316389899 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.316795894 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.315853406 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.316011751 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315242982 seconds)
  done (took 13.046086062 seconds)
done (took 51.039388211 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.326784008 seconds)
    (2/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.318199226 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.389254638 seconds)
    (4/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.329312492 seconds)
    (5/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.39090647 seconds)
    (6/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.07185381 seconds)
    (7/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.558364746 seconds)
    (8/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.084445429 seconds)
    (9/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.345452148 seconds)
    (10/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.304971983 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.352449841 seconds)
    (12/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.35275005 seconds)
    (13/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.3095147 seconds)
    (14/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.35024309 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.319996549 seconds)
    (16/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.198434532 seconds)
    (17/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.327813031 seconds)
    (18/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.421579265 seconds)
    (19/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.396331238 seconds)
    (20/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.385365903 seconds)
    (21/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.327245322 seconds)
    (22/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.448685519 seconds)
    (23/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.703542179 seconds)
    (24/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.504433636 seconds)
    (25/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.349609288 seconds)
    (26/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.321403781 seconds)
    (27/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.011477262 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.321296671 seconds)
    (29/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.59666909 seconds)
    (30/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.334913632 seconds)
    (31/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.422714404 seconds)
    (32/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.471305706 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.393236584 seconds)
    (34/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.293453188 seconds)
    (35/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.362622936 seconds)
    (36/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.529500134 seconds)
    (37/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.657060046 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.363062328 seconds)
    (39/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.385798775 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.442822266 seconds)
    (41/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.326363257 seconds)
    (42/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.324594206 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.334053379 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.422549517 seconds)
    (45/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.315158367 seconds)
    (46/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.361890095 seconds)
    (47/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.685165676 seconds)
    (48/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.493201045 seconds)
    (49/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.33269017 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.429238149 seconds)
    (51/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.320379813 seconds)
    (52/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.448941352 seconds)
    (53/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.397671539 seconds)
    (54/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.300387413 seconds)
    (55/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.962128847 seconds)
    (56/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.463756985 seconds)
    (57/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.344209124 seconds)
    (58/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.439488877 seconds)
    (59/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.340212678 seconds)
    (60/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.406133827 seconds)
    (61/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.422418524 seconds)
    (62/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.575988377 seconds)
    (63/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.373356476 seconds)
    (64/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.323456271 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.374796471 seconds)
    (66/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.301243492 seconds)
    (67/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.403951299 seconds)
    (68/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.384823134 seconds)
    (69/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.419809019 seconds)
    (70/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.395603773 seconds)
    (71/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.684347051 seconds)
    (72/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.562911433 seconds)
    (73/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.396852105 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.508499489 seconds)
    (75/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.338419794 seconds)
    (76/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.395016581 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.405470439 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.491657078 seconds)
    (79/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.296878407 seconds)
    (80/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.480943324 seconds)
    (81/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.464831056 seconds)
    (82/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.992431764 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.37326114 seconds)
    (84/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.081310259 seconds)
    (85/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.397051056 seconds)
    (86/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.443867026 seconds)
    (87/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.342617339 seconds)
    (88/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.488960392 seconds)
    (89/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.334470584 seconds)
    (90/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.372337543 seconds)
    (91/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.300889289 seconds)
    (92/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.131534888 seconds)
    (93/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.537167425 seconds)
    (94/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.363828394 seconds)
    (95/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.298140666 seconds)
    (96/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.329964475 seconds)
    (97/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.384468631 seconds)
    (98/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.343711561 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.339061452 seconds)
    (100/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.29845016 seconds)
    (101/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.453009241 seconds)
    (102/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.035974063 seconds)
    (103/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.162608222 seconds)
    (104/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.532897053 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.413295612 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.43744307 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.341199502 seconds)
    (108/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.085085847 seconds)
    (109/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.499507304 seconds)
    (110/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.313839013 seconds)
    (111/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.331238827 seconds)
    (112/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.414020354 seconds)
    (113/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330597512 seconds)
    (114/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.437968 seconds)
    (115/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.39919249 seconds)
    (116/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.31883776 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.354973836 seconds)
    (118/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.454567785 seconds)
    (119/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.320042244 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.326907465 seconds)
    (121/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.516083564 seconds)
    (122/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.437802961 seconds)
    (123/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.37288927 seconds)
    (124/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.970471846 seconds)
    (125/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.413439005 seconds)
    (126/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.312748412 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.427679307 seconds)
    (128/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.328440807 seconds)
    (129/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.029534751 seconds)
    (130/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.403462427 seconds)
    (131/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.971740773 seconds)
    (132/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.429683873 seconds)
    (133/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.330354829 seconds)
    (134/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.412630715 seconds)
    (135/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.332530874 seconds)
    (136/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.329182261 seconds)
    (137/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.33924668 seconds)
    (138/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.405968054 seconds)
    (139/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.421639069 seconds)
    (140/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.200143377 seconds)
    (141/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.341639226 seconds)
    (142/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.401927238 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.389106617 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.397329699 seconds)
    (145/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.308525223 seconds)
    (146/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.485513845 seconds)
    (147/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.477463975 seconds)
    (148/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.099428809 seconds)
    (149/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.324872305 seconds)
    (150/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.418332327 seconds)
    (151/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.421217966 seconds)
    (152/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.347740542 seconds)
    (153/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.414107873 seconds)
    (154/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.340097822 seconds)
    (155/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.9657459 seconds)
    (156/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.322459075 seconds)
    (157/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.084352618 seconds)
    (158/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325996879 seconds)
    (159/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.987837473 seconds)
    (160/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.365992422 seconds)
    (161/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.537260898 seconds)
    (162/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.328235402 seconds)
    (163/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.027817412 seconds)
    (164/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.364200449 seconds)
    (165/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.330523324 seconds)
    (166/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.479352533 seconds)
    (167/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.330665661 seconds)
    (168/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.229966871 seconds)
    (169/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.365298384 seconds)
    (170/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.338236993 seconds)
    (171/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.371968121 seconds)
    (172/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.979554346 seconds)
    (173/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.426301498 seconds)
    (174/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.30958775 seconds)
    (175/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.508341891 seconds)
    (176/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.456905342 seconds)
    (177/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.481271664 seconds)
    (178/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.541045436 seconds)
    (179/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.354369817 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.432023121 seconds)
    (181/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.224000193 seconds)
    (182/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.369230466 seconds)
    (183/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.348020491 seconds)
    (184/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.396145935 seconds)
    (185/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.546542559 seconds)
    (186/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.306686131 seconds)
    (187/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.324184811 seconds)
    (188/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.478970315 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.397777704 seconds)
    (190/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.403855097 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.414702452 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.38185357 seconds)
    (193/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.329006585 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.52071119 seconds)
    (195/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.514354339 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357110255 seconds)
    (197/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.405591404 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.360843274 seconds)
    (199/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.488161857 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.39838655 seconds)
    (201/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.343274625 seconds)
    (202/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.470613162 seconds)
    (203/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.169659603 seconds)
    (204/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.425210721 seconds)
    (205/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.350074374 seconds)
    (206/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.341602654 seconds)
    (207/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.971668124 seconds)
    (208/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.437981711 seconds)
    (209/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.334096816 seconds)
    (210/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.516525902 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.521790783 seconds)
    (212/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.335320817 seconds)
    (213/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.39456113 seconds)
    (214/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.096792238 seconds)
    (215/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.487040893 seconds)
    (216/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.524315872 seconds)
    (217/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.329487127 seconds)
    (218/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.339292927 seconds)
    (219/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.416540295 seconds)
    (220/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.560554446 seconds)
    (221/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.483471602 seconds)
    (222/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.570438058 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.379237894 seconds)
    (224/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.335431202 seconds)
  done (took 366.480340198 seconds)
done (took 367.693222575 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378153453 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.505415289 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.347080096 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.350271529 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374804659 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.320245092 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.368226627 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.338090153 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334582778 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.332503409 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.337722618 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.340823804 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.352947273 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.365170018 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.446843387 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.338510289 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.349077911 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.333532792 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372343505 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.39023633 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37436854 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376917719 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.343611103 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350753435 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378906473 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379244334 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.353441875 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.321974737 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.332540433 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.371323304 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.328519383 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.353158588 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.382243477 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382854179 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37623606 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.335296025 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376977852 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.508905903 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.366769298 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366317943 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.336416216 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.384145552 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.34376983 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.34397964 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.382940784 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.344771295 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380107413 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.457625753 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.330571597 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.324276284 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382349492 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.394694307 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.33540143 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.323521221 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.324681074 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.456860372 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.336013806 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380968938 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.337265598 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377633386 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.448820023 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382594709 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.395279702 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380917648 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.337061591 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.35457358 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.33558317 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.394697017 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.33416542 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380296696 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381904073 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.342199027 seconds)
done (took 107.614590321 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.400959175 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.333957014 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.435720313 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.336136652 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.438679666 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.438516101 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.333232134 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.332286975 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.334078473 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.756931272 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.333652473 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.332210808 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.334700221 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.335167415 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.42053299 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.336634051 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.335454326 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.687363091 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.335688585 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.409304859 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.337958937 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.334508106 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.337428737 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.728587771 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.334464915 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.330008892 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.403730478 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.335488127 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.681501855 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.329534574 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.331849882 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.690630117 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.427289045 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.355472654 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.349418972 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.345073905 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.439237705 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.357181457 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.420527 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.418641267 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.43874542 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.375203829 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.331117829 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.33302349 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.339523012 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.337630783 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.336879472 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.364843244 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.336504286 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.339609536 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.681630835 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.347785584 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346796502 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.338191988 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.337817345 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.358331359 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.336937216 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.339810409 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434315673 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.341052647 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.402334654 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.721004726 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728258388 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.337988535 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.336621652 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.337046067 seconds)
  done (took 104.784984494 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.406361805 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.416080487 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.461607627 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.363657056 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.391662691 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.466957369 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.360892837 seconds)
  done (took 11.107075735 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346891059 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.342258651 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390408879 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390988703 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.341285861 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.555101739 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341504944 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.35139108 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.33693009 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.415844973 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.342614683 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341301651 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.346066421 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.336199677 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.38968748 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353647497 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.457022555 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.341969044 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.341603015 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.49593905 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339778411 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.348646626 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.414322194 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.353645547 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.344646315 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.348604826 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.298879219 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341042434 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339539164 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.342910018 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339909986 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.454192947 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34444606 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.339945864 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340998704 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.501723558 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.34080822 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3398076 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.342470105 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.342967915 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.342747762 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.34373216 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.342756457 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.339557941 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.342235811 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.367498395 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.343435924 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.342357307 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.342595796 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.343754193 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.416401124 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34287824 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.342239413 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.341326517 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.421649377 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349248081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342933482 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.340419422 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.345266916 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340176758 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.496629075 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391313747 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.344236524 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391316604 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344479266 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344816815 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.344856468 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.343610698 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435279544 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.344259099 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39259874 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.342599186 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.569032365 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.369738447 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346319996 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.347360074 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.348690097 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344752618 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.341503058 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351306284 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.342728152 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.347692852 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.35131939 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341206417 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343741257 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527478213 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.501813662 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.342633747 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.358366132 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353668144 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.345018448 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.419113962 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.346323958 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.344101344 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396816945 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.461454914 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.422362655 seconds)
  done (took 139.074236395 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.351768584 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.353203916 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.349707976 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.36793917 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.346596783 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.345689376 seconds)
  done (took 9.358406955 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348810449 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.349611186 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.348461852 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.34713211 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.346993065 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.350267592 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.346883301 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350240095 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352341204 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.347891308 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.347461662 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.349545885 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.3502634 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.348111559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.347664873 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.349860495 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.351623016 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347220393 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.348008933 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348462992 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.347889266 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.348904648 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350658717 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.352351443 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.354387975 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.354008365 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357517016 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.350260101 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.349593725 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.359499978 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.372233566 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.351626847 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.351155617 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.355796032 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356103182 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.353793284 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358410937 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.346916548 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349483649 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.353681833 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.353697671 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352658336 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.352350243 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.35082313 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.353116231 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.356673545 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.355852036 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361930515 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.352352393 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.353624671 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.353803305 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.352573958 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.353242057 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.354106375 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.355872711 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374562865 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.357442886 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.354399536 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.351710364 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.355885938 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.35586245 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.351923501 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353926082 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.356502901 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.350440089 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.352080122 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.355760182 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356681542 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352897784 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.353733782 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353218013 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.350127246 seconds)
  done (took 99.647896345 seconds)
done (took 365.200708782 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.1871393 seconds)
  done (took 4.436471696 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.458035418 seconds)
  done (took 3.711037735 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.07424489 seconds)
  done (took 26.327847128 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.40888445 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.440713389 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.369760344 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.35915992 seconds)
  done (took 10.829897189 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.705210025 seconds)
  done (took 3.954680169 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.352992289 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.359177386 seconds)
  done (took 5.96341894 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.717168059 seconds)
  done (took 3.963613284 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.814514306 seconds)
  done (took 4.068158788 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.369667635 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.362286958 seconds)
  done (took 5.994491264 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.333753752 seconds)
  done (took 3.583735364 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.348044641 seconds)
  done (took 17.600880841 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.352818361 seconds)
  done (took 3.605359265 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.367380802 seconds)
  done (took 3.615120118 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.532718521 seconds)
  done (took 6.779548068 seconds)
done (took 105.683055015 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.345897172 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.353011521 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.348190121 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.348891904 seconds)
  done (took 10.646057362 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.408662201 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406613254 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408359183 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406541962 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.407940071 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.408156168 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.37890922 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381264081 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.411127852 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408494479 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.407055714 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.405771223 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.408577011 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.379497335 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.404046684 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409834814 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.405973522 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.40791405 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.380759637 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.406700047 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.352990374 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.409830538 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.40731561 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.35527043 seconds)
  done (took 34.819311506 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.875176461 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.429889471 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.512028622 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.413493919 seconds)
  done (took 7.481658842 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.433779628 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.435832179 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.448469474 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.488233117 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.500915736 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.445281461 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.381726958 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.378586245 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.365473337 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.435933001 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.484522304 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.42437787 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.517193768 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.357953994 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.57040612 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.356659904 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.354441334 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.434372946 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.486148558 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.503777558 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.355993683 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.434592844 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.437834511 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.434866018 seconds)
  done (took 35.717900335 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363926697 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.370027704 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.358214694 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.372990349 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.355625938 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.358929323 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.36052334 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.360053534 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.352162416 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.35311765 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.355705217 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.370619956 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.35988292 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.358401105 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.368351731 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.359679946 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.36291715 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.359788169 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.357230411 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.366956078 seconds)
  done (took 28.477176681 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.351573509 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.35049768 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.699650229 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.60914741 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.35181399 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.353752015 seconds)
  done (took 13.972346068 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.44258858 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.624456086 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.360282215 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.769411399 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.853885264 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.359446051 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.358547037 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.636871862 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.006517035 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.000298407 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.425443529 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.449705008 seconds)
  done (took 20.540411947 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.350002797 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.358170261 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.372957782 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.375738533 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.42665828 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.38369855 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.369980356 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.355813982 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.428965548 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.447458197 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.387857758 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.42478807 seconds)
  done (took 21.940542132 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448712177 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353884397 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353668541 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465450854 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356126286 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204525044 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355158459 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168570454 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.382683209 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633912033 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360171179 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454391501 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611391789 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358444355 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356975225 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.346701918 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591873432 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918627711 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356051388 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358840482 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391569517 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371927327 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362327951 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.607966788 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358677236 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35664115 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.621987124 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356253256 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692277545 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37274176 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369142921 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354708921 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629223162 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085174157 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47844332 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604712389 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375602086 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360966675 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.348863066 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.361289354 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379441692 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36455128 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37039926 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361094352 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357442736 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367119394 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189274534 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.385118746 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.357221045 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358692424 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667109216 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459328778 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.362021297 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360690032 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37135134 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362365871 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.361371441 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457777205 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947898552 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373839092 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370809462 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.361497955 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357678687 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37138174 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079028802 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.372478269 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.364667379 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361975593 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362349621 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362117302 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377723086 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359656624 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.384137789 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360156133 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224387087 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36737861 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36457749 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975462934 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358395696 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.363697101 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592626002 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360916716 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365101009 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.360019037 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357694271 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190278679 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375474555 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.346589139 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385028087 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184737428 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642693105 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391863935 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398855492 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591778303 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.352810704 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368597177 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.366772846 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370188431 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388666766 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189619322 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391499862 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.364248105 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624532784 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579776668 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369378296 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.355996651 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93972635 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386768111 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.383789984 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371067271 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622567292 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.053190811 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385962201 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370847698 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390267269 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365611877 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234492165 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372131736 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.469369934 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368183145 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67392682 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.235607869 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367201502 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435015558 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372767674 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367611834 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377341657 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372455474 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368690855 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.608232028 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394963723 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.379107269 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.368726922 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364999073 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.367666869 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374142986 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.372425823 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594109426 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366067756 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64683111 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366173274 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372565749 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369273227 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.595058504 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.371172975 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.706617731 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636248544 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370295795 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376959915 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385034756 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386421847 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474933069 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389481799 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.373888357 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631170578 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373490059 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.375438081 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379455922 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374595726 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376487501 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37859034 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389869358 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052801693 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343176115 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376370428 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262354748 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.381756253 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434200722 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376748028 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618739963 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.370365039 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397011497 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.376354401 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.370785382 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598369135 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377664364 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.381035067 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450917366 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.932336263 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070780746 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386005005 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.370175191 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.368262772 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.367360562 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369728045 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370697343 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370573912 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624485982 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389999296 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372050009 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0619826 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377544495 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38012137 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.378659913 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385166364 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.374308862 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374990515 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.364299688 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403044463 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37950535 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.387282728 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516421903 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.383151208 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367271187 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.886506564 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37521234 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369566631 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366848291 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408429521 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383290025 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35120298 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639561868 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389390075 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686460898 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38728185 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.393736269 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.370460487 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378036584 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376631925 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.378245702 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382894017 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.381270997 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386518694 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376840758 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951305539 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259523612 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007590839 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39618637 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.382960643 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375804735 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200584738 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395136027 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371944844 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638581602 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198582119 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394367386 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942862017 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.400618197 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277258508 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684749002 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610610786 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387101021 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.381699971 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691821688 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588927509 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405785493 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383342301 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376267065 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.356036285 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035039475 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396666863 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456427147 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203444593 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399871043 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377739573 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.429212093 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.376812179 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870296252 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393524071 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371333758 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381274913 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382132895 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352051713 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385391619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37353127 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06666744 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378855398 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.942153328 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399024716 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628955225 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389370807 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.381318896 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.377577205 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.377760974 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.637472596 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6875811 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382487291 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376364199 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015796898 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.250230632 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.382741875 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377501738 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25208539 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38280415 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717876502 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.388110172 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.378482765 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388117791 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381193639 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377578775 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.375075214 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381850016 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348809669 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964130582 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.397945081 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388768494 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389800438 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382782514 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638998222 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.393608085 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066267858 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611171614 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384322343 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407446511 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.382734296 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391255963 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.369880642 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382450587 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379803316 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398326939 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608364279 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375090275 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.369609431 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467385864 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595696373 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383836964 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389034613 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670465411 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.383412844 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.390413934 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272952143 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414857332 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386738974 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385983205 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382121559 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401341863 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453196314 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637851284 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.395181493 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.3945576 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858538053 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416749837 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388178255 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.398125051 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478535698 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384136385 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.392427088 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.158054906 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077633215 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265571439 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08164869 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704339719 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389629741 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394453028 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381872763 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546085174 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385198563 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655608827 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382151412 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.382982014 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410877443 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396075715 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393378138 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598853379 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657370563 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382695468 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379839113 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385344458 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.383344414 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397878337 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597339895 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974904301 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05031582 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385861794 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387680217 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.222103122 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684020077 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387126341 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384762538 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385032978 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.397854815 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.386671087 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.393120944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401352867 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528864949 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693941072 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129590504 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.418296712 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.414957678 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.900629011 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386878321 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670665883 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395191414 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.647169602 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084029922 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.223759483 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659737126 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452775249 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642407048 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.391441718 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548460443 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.398307893 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393832585 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386074434 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390514225 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.388999977 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.400918644 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091319495 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662619768 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.393102973 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.399410759 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423320292 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.399640729 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.612279003 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236801089 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618528883 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403335602 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394233176 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388959502 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088513776 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709176644 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388887402 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.390480788 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676118723 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392407095 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410070923 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.907504584 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.384166577 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043612519 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.368695408 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407869996 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389069382 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.22960417 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095438772 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.406363451 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983307015 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394934958 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395266144 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66702004 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.399807667 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392479863 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674909676 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.398620412 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388369897 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649062299 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.0857737 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306239191 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.403764541 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394740081 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.394864334 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389565183 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397864774 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394886527 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391565653 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.886546136 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414296785 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38925476 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399380161 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.40616801 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395189626 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.394465944 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388909721 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.39474435 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.402100368 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.391720121 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395835243 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489829899 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06252723 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415290781 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.074851238 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.714236598 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645064551 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391301474 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.37550503 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.398342677 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392685346 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387907199 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384558171 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397582922 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05153212 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.394503899 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.406164306 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397465307 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.389006025 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6006791 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405448957 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653360573 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396476282 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411506893 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.371770385 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389986523 seconds)
  done (took 984.613904458 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.44723572 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.422060571 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.411411072 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.424273827 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.398456614 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.508992018 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.469092307 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.413037105 seconds)
  done (took 20.78062876 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.402466142 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.404259784 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.406118662 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.404762308 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.402731492 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.92199921 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.40737179 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.399965485 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.407831304 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.402174187 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.400164906 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.383516424 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.40621675 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.400962108 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.381810835 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.397876252 seconds)
  done (took 33.224146335 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.73264863 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.663591391 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.11553747 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.485255905 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.393788036 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.409296825 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.785980886 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.414511765 seconds)
  done (took 28.291733409 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.406193929 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40359894 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.405566774 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.400848459 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.401621631 seconds)
  done (took 8.304242112 seconds)
done (took 1250.059880829 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.397514223 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.398104011 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.398091673 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.399426749 seconds)
  done (took 6.882338521 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.381572926 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.382866919 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.384539557 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.393828894 seconds)
  done (took 9.833323279 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.238958773 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.156293665 seconds)
  done (took 5.688309879 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.908883517 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.909120241 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.906386058 seconds)
  done (took 7.024948035 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.728027826 seconds)
  done (took 3.02173925 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.326436053 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.403404566 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.097507899 seconds)
  done (took 8.124863964 seconds)
done (took 41.863437653 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404944007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.673743033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.553305592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410166716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.558161036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.553225341 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.165810409 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.395900764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398369667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.409876786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.399325782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.561395182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.223152712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.655465438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.222246619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.750198968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.560908928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416862016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.396956524 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414490574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.16472756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.412018376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415941839 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39749055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.561362973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.543819123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.399525554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.747332643 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.401259548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411964227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.549761637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.398939849 seconds)
  done (took 83.827210792 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.409389251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.406897975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.402049273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.436846695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.400608846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.403962764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.425987314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397659953 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398443552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.414144338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415586079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.401688449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.396883362 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.420750403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.419319912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.420069221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.426377464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.413999361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399899081 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.420670339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411851373 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400072109 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421751735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420723954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.399469309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.404237935 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419062721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.419248096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.400624786 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417335001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.404687392 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420605192 seconds)
  done (took 78.469310883 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401474967 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.40687936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.427704103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409694547 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.401112273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.44373955 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.405399282 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40365647 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402676117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423496717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414374685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.401960536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.404500694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.401785954 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.402718222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.404602171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411411814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407884862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.445179313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415107094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40276032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.402850711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422949898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.4070238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.416088281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.404688581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.441843857 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.402669646 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.4082415 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403620853 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.407431116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.42532778 seconds)
  done (took 78.481767203 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.687027068 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.412508972 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.415226378 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.403501998 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.40903725 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.408068183 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.406845714 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.686055931 seconds)
  done (took 15.126051989 seconds)
done (took 257.202002974 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.40955178 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.636412514 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.4389436 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.406601765 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.43164871 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.435645676 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.667068666 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.453830966 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.664364553 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.430204669 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.433188828 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.40696138 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.741962196 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.579127539 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.412649572 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.407983228 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.777219119 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.434019656 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.703616514 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.714824304 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.43143938 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.407709909 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.382054286 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.820123302 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.418468661 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.533895182 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.534560084 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.656830757 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.592181543 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.51010497 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.660978726 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.418515127 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.4132776 seconds)
  done (took 63.670553637 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.416954586 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.527735738 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.415582489 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.415069979 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.530541432 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.414434861 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.414913804 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.413804964 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.415238253 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.413990254 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.417548686 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.418123816 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.41905998 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.463736276 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.534315981 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.438544836 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.418240485 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.529656548 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.415617158 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.410387689 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.456736592 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.418365085 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.41552981 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.465380949 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.414568476 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.415566207 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.528845065 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.415838791 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.414179574 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.529456007 seconds)
  done (took 44.620891925 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.418418244 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.698461145 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.909811434 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429249491 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.417608412 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.425049597 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.512596269 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.422013284 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.423348607 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.423133709 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.607306392 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.424710121 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459964089 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.938978575 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.420966324 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.419568634 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.421846214 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.424631164 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.709229693 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433434659 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.53652784 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.422819231 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.515186569 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.432289179 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.445373587 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420469702 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.430007387 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.02111002 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.426495978 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.606977768 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.357650599 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.513202815 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.972885381 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.924576276 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.360376344 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.424625813 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.423494975 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.612960365 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.425436228 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.422694769 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.516531354 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424730443 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.921312057 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.134522185 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.446774463 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.426779871 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.050996372 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.615133517 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.725737949 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436276488 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.954514796 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.428270436 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.431498391 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427730175 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.725907799 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.425326576 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.42774554 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.085715075 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449305604 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.519533465 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.428426987 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.429362422 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.70755726 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.426151518 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.705368024 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.431814977 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.432534142 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.450214025 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.924797092 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.431186365 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.15179552 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.449309893 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.429768006 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.611683147 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.709401065 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.094775153 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.450109629 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.714439593 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.989854991 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.520227766 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.432352323 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.020466778 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.524626856 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.435741089 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.430353074 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.431937107 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.428185402 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.477353992 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.518229315 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.081178553 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.154902332 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.113339363 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.541742154 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.437971736 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428349097 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.090700402 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.4472587 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.429191059 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.920814455 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149654665 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.450358806 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.44194751 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.162822476 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.453404928 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.526700646 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437624535 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.932389862 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.432911701 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.47793724 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.428561184 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438628981 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453899298 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.528037355 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.43647409 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.432668302 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.130557454 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.650416747 seconds)
  done (took 189.722184639 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.427328311 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.421169329 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.425748516 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.421938733 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.425139773 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.431476223 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.426917 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.422367254 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.430313537 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.424636562 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.423861855 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.436115481 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.4322822 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.426122928 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.428262314 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.424526148 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.423044957 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.429338985 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.425062852 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.426829871 seconds)
  done (took 45.852577989 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.431569422 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.129543241 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.593262543 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.460345547 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.429368917 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.428429444 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.500985419 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.431854205 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.428064375 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.786864086 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.640770981 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454577532 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.430838209 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.432423617 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.592144698 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.451398056 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.805911679 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.133950771 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.435583151 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.133043813 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.427321537 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.433882852 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.432005374 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.133846503 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.812517475 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.528728659 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.50727252 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.134012469 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.430637444 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.431140244 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.089736593 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.432966853 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.435603585 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.127067591 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.453986837 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.4381089 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.432169433 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.504596095 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.507495799 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.810648498 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.211900501 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.525747963 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44782404 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.812015886 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.437780786 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.420326677 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.140003921 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.457675527 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.423184451 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.43479873 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.44199374 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.60675215 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.433472392 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.612641103 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.43170087 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435109658 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.114508559 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.609461637 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.591403273 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.665764737 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.454235112 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.525061083 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.430333899 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.105305948 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.453184834 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.436897512 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437919694 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.648465201 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.157419751 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.526266816 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.815313953 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.819896101 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.43906293 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.507084636 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.452504369 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.883017625 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.506260767 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.897722089 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.821216493 seconds)
  done (took 129.525150828 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.717930857 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.559541261 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.607615423 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.109638486 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.430679572 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.572240935 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.563440595 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.727651489 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.448106028 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.528929298 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.686684865 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.523789272 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.241515255 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.521244113 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.548225901 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.602162924 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.598328758 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.458146827 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.163462831 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.65153311 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.470109186 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.568885318 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.049108993 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.628051528 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.456197708 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.015437583 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.436250388 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.217131015 seconds)
  done (took 54.428917455 seconds)
done (took 529.124260931 seconds)
SAVING RESULT...
DONE!
