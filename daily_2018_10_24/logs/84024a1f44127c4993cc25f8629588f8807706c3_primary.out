cset: moving following pidspec: 7532
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.25193471 seconds)
loading group "string"... done (took 0.468799664 seconds)
loading group "linalg"... done (took 7.564838578 seconds)
loading group "parallel"... done (took 0.170199798 seconds)
loading group "find"... done (took 1.164763529 seconds)
loading group "tuple"... done (took 2.087258647 seconds)
loading group "dates"... done (took 1.337438788 seconds)
loading group "micro"... done (took 0.249080998 seconds)
loading group "io"... done (took 0.658852295 seconds)
loading group "scalar"... done (took 41.926591283 seconds)
loading group "sparse"... done (took 12.505754436 seconds)
loading group "broadcast"... done (took 1.109177229 seconds)
loading group "union"... done (took 13.681749173 seconds)
loading group "simd"... done (took 4.763197397 seconds)
loading group "random"... done (took 9.611587248 seconds)
loading group "problem"... done (took 1.971373721 seconds)
loading group "array"... done (took 22.37054409 seconds)
loading group "misc"... done (took 1.416842877 seconds)
loading group "sort"... done (took 3.565831155 seconds)
loading group "collection"... done (took 19.357898283 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511534237 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138085062 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132415939 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147789031 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203420883 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14383162 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156007188 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114696777 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.968445613 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187567018 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153604693 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512129295 seconds)
done (took 5.112432633 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.309711112 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093416604 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102484193 seconds)
  done (took 0.864681079 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076991846 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144293855 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094663391 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077791418 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095237169 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0777139 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09457863 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07702714 seconds)
  done (took 1.334820369 seconds)
done (took 3.265553533 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732801222 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286680148 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201629287 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460348838 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193978864 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214964547 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.713925 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341414165 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252323929 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099300716 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143762788 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387903631 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135913114 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687311616 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092097993 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126073084 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.191021642 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.46243762 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084183558 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11107874 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116233033 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141982979 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131108595 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091107642 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184462514 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081549917 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193764856 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109673156 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079831379 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289630241 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201706071 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695017297 seconds)
  done (took 10.944509563 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111854493 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133098644 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097161033 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138293898 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133152808 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098778074 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086446005 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096347699 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121416832 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175280028 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114757509 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135638363 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095464494 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082922766 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11511429 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243455665 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12215544 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10627758 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102607357 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104872548 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123792703 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111511498 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107849887 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093113965 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166459944 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220121228 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110224839 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125071491 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096324484 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11221882 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144872898 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142237099 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095647707 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079964191 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171135371 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124183126 seconds)
  done (took 5.135875276 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186494779 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120546801 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167492317 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162385688 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138959699 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159123224 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112920195 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.227745053 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110641634 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164152421 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140797517 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116155268 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080490369 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098724487 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095621999 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.669566433 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122743598 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154554305 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114267729 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102344374 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08348861 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154906833 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104921809 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079732215 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100622788 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.106627101 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.694543947 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159063633 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098590742 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.141103247 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120423525 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081966898 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134140781 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209187132 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114366695 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09561817 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133294707 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080013647 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094975554 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177665777 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08684762 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096880741 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101474297 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136098279 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132935065 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097848373 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096123344 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203670902 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082304982 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113855315 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.93036443 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182399238 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104730875 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096408294 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320629937 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097091718 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096260701 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077679565 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256395566 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184590294 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097189988 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080025698 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096222418 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080328535 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397276423 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080522664 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.723046361 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084418474 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110666226 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082430054 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095781328 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103206412 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087011327 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114084671 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079332502 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098921503 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079401931 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096562016 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081271362 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093445987 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105746051 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078133438 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100318267 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080669872 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163695727 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078797874 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113499012 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125951587 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082899941 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095237275 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130405728 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083570674 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097159666 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132780479 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080706429 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108310096 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098381967 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142137043 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080129389 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.166015702 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080714545 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127972422 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098326333 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113330856 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111351388 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098521359 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084080201 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095221221 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077141829 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164253809 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079524082 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097390216 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080937077 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110288162 seconds)
  done (took 22.862551467 seconds)
done (took 39.616344469 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32480481 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103800516 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102190022 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101871735 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099238968 seconds)
  done (took 1.476367855 seconds)
done (took 2.196636785 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286909194 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17125156 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094894322 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166366803 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092938009 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173268114 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159628835 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110544515 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21741333 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077257096 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161452292 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093459749 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076577626 seconds)
  done (took 2.626508655 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094775772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114493343 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082201093 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110551894 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076597271 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110187327 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091873263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116704789 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1084862 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085534951 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092906933 seconds)
  done (took 1.800625622 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093151526 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112638279 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08262019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108736693 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076146337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109877723 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092281185 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115676095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108989305 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085059183 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092246293 seconds)
  done (took 1.793522178 seconds)
done (took 6.930172122 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090466102 seconds)
  done (took 0.801616095 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.919661274 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.886386835 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112959919 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148603135 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299854778 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190585694 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.472255888 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123950671 seconds)
  done (took 11.078075043 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.1440738 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082878814 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103292534 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08638669 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103081168 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082868755 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097133151 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098935751 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083940934 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099851433 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085564514 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097658144 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101169317 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082968114 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099650016 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086173378 seconds)
  done (took 2.313996033 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11943272 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118116587 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105583784 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107985055 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086620661 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104295293 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105693585 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089117922 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100687346 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102345883 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090121273 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103978653 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103009811 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079493814 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105521363 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107294475 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085401335 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10516883 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105837208 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089722231 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104392349 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095651038 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086864224 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105491093 seconds)
  done (took 3.230605644 seconds)
done (took 18.14087484 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158076658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108164926 seconds)
  done (took 0.986475556 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094490716 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111988565 seconds)
  done (took 0.92746642 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097610003 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094094697 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122511449 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108760066 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080040582 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09553458 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119296097 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079947096 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09544117 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080326325 seconds)
  done (took 1.697168703 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081395348 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109087261 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099857922 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095038271 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104454706 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094298677 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087500263 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098194594 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108984143 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07725222 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101494914 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11301337 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085637684 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115716998 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104479074 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084413572 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101556674 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098167582 seconds)
  done (took 2.488604089 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079112777 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09567385 seconds)
  done (took 0.898513651 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081815463 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093834153 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08139344 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096410905 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092663966 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076283837 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093642725 seconds)
  done (took 1.339952531 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.470883711 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134912194 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252480899 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085185419 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119772632 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302073875 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097248241 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084534016 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102258209 seconds)
  done (took 2.429582721 seconds)
done (took 11.492499289 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093559647 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116726019 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112275921 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464684789 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107241575 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097102991 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159507693 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252731401 seconds)
done (took 2.135478724 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148779995 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323756939 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112786451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066701374 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094102211 seconds)
  done (took 1.332635279 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079895751 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098770304 seconds)
  done (took 0.911355211 seconds)
done (took 3.129244125 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079834925 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128198073 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08034195 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095898283 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079929352 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094720065 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077225682 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097280451 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079691316 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095336198 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095639554 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079799397 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096004323 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07986943 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093588702 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076607439 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095346605 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076848462 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093976377 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076845699 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093371789 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080004011 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094434716 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076800298 seconds)
  done (took 2.884567019 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099575247 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097491543 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101729534 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085053269 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100985723 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085776673 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101536075 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096108735 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08596724 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098476587 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100066192 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083697461 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098965076 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084093886 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098469882 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100185703 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085367854 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096465988 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082109176 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100005792 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101689528 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080384281 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100140157 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101143416 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083222293 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100894014 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08265049 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096702811 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102112741 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084355089 seconds)
  done (took 3.551583523 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084768758 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093382029 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079370638 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100982305 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077620786 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095679787 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077669567 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095090294 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078606623 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094572919 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079039548 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093954429 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078010664 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09522148 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079868926 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098755275 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106754624 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078515401 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094280462 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078325582 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09786617 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077771598 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093913472 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077063064 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093802827 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076768557 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094130918 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07815441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095050208 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077338018 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097708702 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081196855 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093783116 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084255726 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097588954 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077158665 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098003638 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077875105 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094818719 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093461982 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078369011 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093795571 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078454973 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101072214 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07787976 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09683786 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078446333 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096800321 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078785126 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097399645 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077377074 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094311544 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080322675 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095763335 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098747947 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077568243 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09491185 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076727154 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095058089 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078125702 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09399156 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077147303 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096101429 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07889895 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109425555 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085178403 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093931946 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079517735 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094697659 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079941677 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095732095 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107647579 seconds)
  done (took 7.09675666 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08370516 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105484747 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08017667 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096401095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076709551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095292284 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098206876 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07815814 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096845606 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085245331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095087934 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079434164 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095697045 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107724198 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078810386 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097749406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084644976 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092383124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078171532 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098525522 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07942397 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098377802 seconds)
  done (took 2.72483615 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209012142 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103796004 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140952458 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106617194 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084077416 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105617902 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101295379 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085933072 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101774156 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083219108 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098818674 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101617727 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082670074 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099763331 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099022162 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084608273 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101072879 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085502357 seconds)
  done (took 2.621775006 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093821548 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098260734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102366479 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09736362 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097813156 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082918615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103744626 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106722789 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083510557 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097209118 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090421092 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099650029 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100041374 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080839277 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10048698 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080708475 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10072698 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080653206 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106752166 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10375753 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102913004 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09002113 seconds)
  done (took 2.846337509 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096666994 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100162898 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11653212 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083861518 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093822737 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079169152 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104912456 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080254106 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105959756 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099042084 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080934644 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096796853 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087682944 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09704863 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103088405 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08140779 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100341942 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081477237 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100205487 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077620547 seconds)
  done (took 2.613209956 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101742665 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099723903 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098954785 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092335257 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099498081 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083264598 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108458823 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098837942 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08254856 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123061025 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09958317 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082161263 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108573476 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105711576 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099251563 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091856128 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108345252 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109211817 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082307282 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099234104 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123990439 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083017446 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107577781 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.205350631 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082345294 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09914735 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099336811 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088870516 seconds)
  done (took 3.613250553 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081965398 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098033819 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078620028 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096208864 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078143303 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095651836 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078577865 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09526967 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081328852 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095441562 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080858048 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097724576 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080711205 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09786718 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082862448 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097906177 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081193173 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095565537 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078716961 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096671003 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081143851 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098186371 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080724265 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095783713 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078648398 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098128407 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07893206 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095942425 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081040248 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095689082 seconds)
  done (took 3.404326024 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091102157 seconds)
    (2/2) benchmarking "in"...
    done (took 0.1056305 seconds)
  done (took 0.948055984 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078531725 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114610522 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078759558 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102051674 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087018256 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10033466 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107051442 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086210945 seconds)
  done (took 1.504375905 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095929281 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109723177 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083017996 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111659751 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108976762 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095077435 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160038746 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100404182 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088298625 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097005172 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09470192 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097652767 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105524291 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082368067 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104338916 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088068261 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097037553 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088127427 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102136794 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097482688 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083392221 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109984666 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084788164 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095813218 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082787368 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109595138 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108642671 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083349746 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102437476 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10821471 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087236908 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09288932 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082361653 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099650561 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080076423 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107924777 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111229434 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084891698 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10758611 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083346317 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110216058 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094004391 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086994089 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105392519 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09174832 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098905776 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082916499 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093352808 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096098373 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083564871 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094978784 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082035266 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092449016 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089233038 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102987345 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110999516 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080210614 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100218562 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084823409 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101740414 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087921588 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100410605 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084429633 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098115765 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105571012 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085780735 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10645883 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077377669 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092832659 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079649175 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107524461 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121569889 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089695202 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099316539 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083398289 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096813388 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102043114 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083618916 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106571044 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090029639 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099416403 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106461732 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089254019 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099019012 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084665828 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106369373 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096804363 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084196304 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096387213 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096467714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098104112 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079973026 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097218577 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107455696 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085390892 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099603546 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080000194 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1084594 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07632504 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100495078 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083483866 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101119553 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108262993 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088245583 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106481677 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106737898 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088748778 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099164673 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085015112 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096558376 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082987293 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102600253 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089337236 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093923084 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10241042 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084203102 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100639489 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088967494 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097773799 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083399529 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107306424 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105930846 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080944536 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096415509 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08621106 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099820945 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086620268 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106408296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097619695 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078191445 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095145554 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087167624 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100218421 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08749266 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105935371 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103419266 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077063292 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097268912 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087525656 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106798958 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099526707 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084266675 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104294688 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083902116 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098667354 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088991044 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102282496 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081291511 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103994021 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101418932 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077601495 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104102328 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085779046 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098517712 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086493861 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104926379 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102761232 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083575295 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098425346 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088443485 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101297489 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081416924 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099969922 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081545098 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109209927 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102276535 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078011862 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096969911 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091084549 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098146272 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082144956 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098648232 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102802965 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084138026 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097847459 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08218827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102242453 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095079353 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10514318 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101558978 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088999819 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110547793 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082757863 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102088847 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100442037 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083922205 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101224592 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090134204 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105705912 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106213243 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085582405 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096771475 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088867108 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109064621 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081445403 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098384592 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081797092 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103900745 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10720273 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086772505 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100913028 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081299234 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100651045 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104174977 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086311545 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100301059 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082057538 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10534298 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081978929 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107428679 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101473355 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092021416 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104716061 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077664185 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104276987 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098464505 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088248024 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09582415 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081290777 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098809608 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084412992 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099733062 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085625661 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094778245 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0902342 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107933898 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101000469 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082428828 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101010167 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092243543 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101933065 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086884488 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104118238 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105824537 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095814292 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099866237 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086106122 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109585965 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100300663 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076392473 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105061753 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081018306 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099878996 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081830812 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098368176 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086234822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109546769 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105464339 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076346906 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103425147 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081805233 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099325779 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078404168 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107908526 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103909386 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085042237 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109631668 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083771023 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101296316 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08589335 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100386318 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101339567 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0837027 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104235771 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083900588 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102739481 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081340602 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102545424 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099266235 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080197337 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102021308 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086098489 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100674349 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088982199 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100181421 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082663461 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104122475 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101517581 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08407209 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101839139 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082915603 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104530508 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084120236 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102095128 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085227362 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09597901 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107715027 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082445001 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108807711 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083025782 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097738724 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088462684 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103603686 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105876157 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083919258 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101750597 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084211313 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101404272 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085966581 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109369532 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098611071 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091674729 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107142561 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083925269 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103437089 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082923122 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102184817 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081717554 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103020063 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101853226 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08282489 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100087015 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087186497 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104022039 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083679961 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102154652 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102243382 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083141333 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101647407 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077538095 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100168157 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082612322 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101008022 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090924032 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101976055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103745324 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081399598 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101969283 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082918443 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09793793 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091293274 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111263979 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102467049 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091260936 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100003895 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084889376 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110536546 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094616874 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08099968 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099018941 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081354396 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109028431 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083965837 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109848978 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082614252 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100492387 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097913968 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083809496 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100061678 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07785715 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098251104 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086977757 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103799496 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082479586 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101521631 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086108049 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102263744 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108102571 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082775452 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103147717 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083933335 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097779826 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081668733 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100759801 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085994236 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102398522 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099199536 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081287817 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100997542 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08502367 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101585229 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083184956 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103046809 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098536137 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100935139 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103795842 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086823498 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096421033 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085784253 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100774549 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082351961 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099946846 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087612042 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104888608 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102827045 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090806199 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101571471 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084078395 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101982941 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081389547 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101514199 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100935499 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083888087 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100462793 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085895324 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110302022 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082026433 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103664118 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082409188 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101873675 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10604802 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084093028 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103513141 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090920498 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104522389 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102346993 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089738142 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105812194 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086420925 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102910193 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085187656 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107437973 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099840642 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091513371 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101125866 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085016567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103270772 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080730109 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101449672 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083004018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10185614 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105796532 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084727261 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100922934 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081785579 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09890705 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085152947 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105535773 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108906259 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085602371 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104513536 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078733568 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098714775 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084686485 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099333178 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085269445 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104589157 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107903288 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085105971 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101171568 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082123151 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109143444 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090285355 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106223858 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099110645 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088365579 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102781918 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086684052 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103050669 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083341256 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103958813 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107647817 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086146134 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101069897 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092473231 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106857521 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085347234 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104120272 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083785723 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102074839 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097410758 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084757191 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10376642 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090086037 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104446256 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084448875 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110301437 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101033854 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084055742 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106212709 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083701633 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107827966 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078728289 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103028294 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102394953 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08464307 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096720449 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083602687 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099548567 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086442765 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101522928 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078643434 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111218063 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108466482 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085815305 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100331599 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082734091 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097015853 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079331993 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101611114 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085008243 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102985645 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110568372 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082968936 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100405311 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078881793 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102288339 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086368361 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104934774 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081178078 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097495761 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08190302 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104052118 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108605472 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082995174 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10178627 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086852646 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104206739 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081461682 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105642137 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098535922 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087838377 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112074012 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085117683 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102146538 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089536973 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110467833 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102605619 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079050546 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103750181 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086097685 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102489436 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085145525 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104058605 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116821169 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086973061 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101857303 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08310394 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106043798 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083623266 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10941549 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104181131 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084611442 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106906074 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08561117 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111747513 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105390554 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090504863 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104228028 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08657316 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100780896 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083622086 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100821647 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081761503 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103955503 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103261395 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08897717 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11029937 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083584107 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113196763 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109923354 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088943503 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098106744 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083275798 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101827584 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079467186 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103793635 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081228957 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100462416 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100439373 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083232496 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102239277 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089681034 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104262162 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084804941 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103074692 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078285045 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103374821 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104491236 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087369894 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098863551 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084119508 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104227605 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089573672 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106159189 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084499796 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104723013 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104732662 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085066397 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098292293 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090728813 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102106216 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087235249 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101468425 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085086234 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104489593 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106693962 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090450507 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104650002 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086031334 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115011613 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105054448 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08166633 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099599212 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089114025 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100613399 seconds)
  done (took 57.513268246 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145350489 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080609627 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098250835 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079233221 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112785889 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099071049 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07991668 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099060594 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080627593 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101786048 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080290259 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097932665 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107608277 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1240617 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093833306 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102951445 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079664732 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099211673 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096748554 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080425452 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108195633 seconds)
  done (took 2.850077714 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105664835 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116600263 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113948365 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118583336 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090222026 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114842411 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113810702 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114390979 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099986524 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110851528 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118559212 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114777759 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092413173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109656205 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110434688 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093807869 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117923456 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108801427 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115367429 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094772157 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11244713 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11396988 seconds)
  done (took 3.205265814 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083760518 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10196116 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085585161 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097088053 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083546272 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09759301 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086911186 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101135104 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087620262 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101897045 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081743125 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101155457 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103776697 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078956516 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101088688 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082821579 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151612449 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106599231 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083850237 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104545098 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097658281 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086140884 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097653993 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080597226 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100839503 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088137164 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103866915 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081608149 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102279298 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082033821 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103201917 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080784078 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104131294 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103463552 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08244336 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101236821 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08328496 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101995158 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078836988 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100044859 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083724548 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098532314 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083700646 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103816572 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082184165 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100610489 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084532649 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102457116 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097327995 seconds)
  done (took 5.425146438 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105374741 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160358007 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085363176 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14230566 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120470608 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112886202 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087235029 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143017977 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101816234 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082092894 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122396229 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119066191 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102946738 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089681543 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106666446 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103170772 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086248494 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101475642 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088857988 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103357146 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108350997 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090687462 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119494493 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118253363 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108226313 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083795769 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102217608 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108002014 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09833326 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109300655 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108348503 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090433014 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120354614 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105308712 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084027713 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105846913 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122023845 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084746764 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10654598 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101528751 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087173706 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109450363 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110001437 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102639556 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104388581 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10806073 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084400511 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100272949 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116378232 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087811841 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112607419 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119001144 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088045281 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104567456 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109358705 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120138792 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084681923 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101902122 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088747556 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117982704 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100972872 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089097461 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118897031 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105881947 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09225716 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118821468 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108695316 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107346907 seconds)
  done (took 8.085481725 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093913869 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110833913 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120447211 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119957931 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092132011 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111349176 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110250278 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092081689 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11008431 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116471086 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110917412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133219627 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086479429 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115620305 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110681916 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09172485 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111466452 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110429544 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091270862 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111414257 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110675314 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120450205 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091862677 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120578351 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142200082 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106242467 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091600212 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110659515 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121067497 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110871221 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123063072 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091916356 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11050551 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121054113 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123676165 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091258587 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103283495 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109732574 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091826447 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111527991 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105788841 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101218218 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111114954 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105417548 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09220184 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110434222 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120564395 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124660951 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113727708 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097974503 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111596652 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120815815 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110956 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092735288 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121122937 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146883543 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120512742 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120574853 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11046252 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101444157 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120597407 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128973205 seconds)
  done (took 7.659672264 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108069714 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11538199 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117073618 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100148339 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083181019 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108494049 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083022385 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10287255 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113981358 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093919776 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117187165 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10806688 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111089807 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096692642 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108288181 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111724894 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088973336 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108772418 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114640828 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108665121 seconds)
  done (took 2.919181764 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093576365 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123711337 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084975294 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112176365 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107357776 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091238708 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107272261 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106671404 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086187959 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10723727 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097277024 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117018061 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104744379 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091286353 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116620791 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110821126 seconds)
  done (took 2.476597189 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096216875 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117288151 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119834059 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084746537 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103562909 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080744142 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105474183 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100492934 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081678606 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121263874 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085120073 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108082973 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.1047108 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085344462 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101136105 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088603821 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101783043 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082824532 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105325471 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11886254 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096265265 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103911314 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104540582 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087924366 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10468732 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090333503 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105744876 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102680051 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084237448 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105292043 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085692731 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113527901 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100748128 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084589923 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102274659 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083031903 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104049722 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085670136 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109201384 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104470943 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082984829 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104379451 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085921661 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10621282 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081642591 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105750682 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100805461 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091677241 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102837347 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08482723 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105621471 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107037871 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086480077 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115566787 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088961778 seconds)
  done (took 6.224939535 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099796236 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108689216 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080958297 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103079503 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088298799 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106814992 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108342886 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088008435 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106734059 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083067497 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107337368 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089658516 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106726959 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108084923 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087269908 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109192869 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081263129 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106896696 seconds)
  done (took 2.598540077 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091636062 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104289746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092984729 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105544513 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085431864 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108279767 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080088822 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104477638 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103075749 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08621884 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105158776 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087999486 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103941211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087094535 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105171793 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084645415 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107449431 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10286222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08569478 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100670995 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088274388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103347408 seconds)
  done (took 2.950512046 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11828847 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124437077 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092629065 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227920196 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104454692 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132304547 seconds)
  done (took 1.627421313 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109070583 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121143636 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105230859 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106891457 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115316416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106108039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087628923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107809551 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117302359 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102223306 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107439162 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117118283 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116885892 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097993558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113868571 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113703307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107259935 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088104643 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106915545 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128523381 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088703855 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118286617 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107967388 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087690701 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108099698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117527896 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117744644 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122860227 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087304421 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118519343 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114023971 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087653694 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118633302 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122771777 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108747258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097994511 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107957309 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129565286 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114131922 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09736094 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109016019 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114874832 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098943084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113180178 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118357713 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107493677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094199406 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108101572 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107246754 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135849842 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094637459 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118176651 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114700917 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118573193 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117433729 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135703662 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102324647 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117377005 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114625287 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12247073 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116622071 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093966863 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117714411 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123374779 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115223564 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1168076 seconds)
  done (took 8.128302051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102471021 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126544827 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107620206 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122633331 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096979848 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107948003 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10775081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087771943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108021935 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106499673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152512474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08822539 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118137366 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116986095 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107773701 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088977033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107888016 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117140698 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087369168 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135642736 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108134868 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117530194 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117623492 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099006048 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123284915 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114629485 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107303027 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087647537 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108474722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107444667 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094088801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108011883 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118213538 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086828438 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117979587 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10872888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088753813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114105401 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10810446 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114035822 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097763213 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127558107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107876275 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107773011 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12140436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088664283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108577058 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087332301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108600821 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107476901 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102832731 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123491764 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122639065 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118254545 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10783606 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088640006 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108430704 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108091842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088368211 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114310413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117305563 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108149082 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135233311 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088572585 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108171974 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118218844 seconds)
  done (took 8.000865705 seconds)
done (took 154.205861057 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098994779 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136554979 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095488474 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167400309 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105989059 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11968748 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137585777 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097559027 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10634326 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086364372 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10618203 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086943903 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171926467 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10657342 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087030525 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107109464 seconds)
  done (took 2.651568165 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200146861 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25325938 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102770061 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10598071 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089054762 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110234956 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104198104 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091015288 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109757754 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086227558 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108873094 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086736426 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106213583 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08637894 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110077649 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088467377 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105962352 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088526625 seconds)
  done (took 2.872929791 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113087592 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150429245 seconds)
  done (took 1.108654505 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119433785 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180140124 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317897955 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155235976 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10675136 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127786033 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156652454 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131195979 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197773369 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124011663 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122357861 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097757916 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140168669 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115767082 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094008578 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11860057 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142004505 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093711871 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11522546 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115814439 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116652577 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107003849 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114504964 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094004302 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180838913 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119567126 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08560588 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106467998 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116472549 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095722377 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113591486 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124562955 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098925992 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176184113 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10311102 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175687087 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097691762 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114889397 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115054794 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091430412 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119290218 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119158607 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103982931 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118838164 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085260689 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118890855 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105759305 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085597795 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115163635 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097275123 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11540714 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112925904 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15651609 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118867704 seconds)
  done (took 7.53326582 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793894295 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164286119 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091331901 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884395077 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139257078 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103998075 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781904237 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133806734 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233744632 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758325459 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134226017 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121563214 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228556091 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237394246 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929749683 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308089082 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673344267 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103305743 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150460436 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154067955 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119732474 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137930538 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130831855 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430122271 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095309036 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112909661 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116905886 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100226144 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161515135 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125601546 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114488362 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178741821 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246259715 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206553605 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115459052 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089576719 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112701349 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169813384 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267833425 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214908239 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181455163 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086541326 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111352207 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121906094 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111139468 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108829533 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164360088 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194316595 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174748742 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092224834 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121455694 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1199153 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120736457 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166823557 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120129629 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296796465 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323403289 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111822695 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120545085 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105772256 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264828921 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122583795 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224189995 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117197749 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212665647 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111171365 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776093254 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190585422 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090756245 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117828546 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118598871 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095119368 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121980571 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166711869 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392054169 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124356036 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093511444 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111467647 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205859057 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125409628 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111472851 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162970358 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115688163 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099458605 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125200071 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122268446 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170723152 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229738126 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124158025 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119086996 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094382298 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125529004 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115472936 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212679 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218779502 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162013524 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208012773 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123542089 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163988709 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189245832 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09799564 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193485576 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098529368 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126691407 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122075 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216315147 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146260598 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102236785 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11676177 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117872484 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148846241 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125863519 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097679972 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.1908633 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457852304 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168418528 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109222586 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127537589 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099413148 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162100955 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118684718 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258486133 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121660392 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170208937 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120289203 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08803319 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121216052 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165253407 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121649474 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121002526 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101460692 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11894931 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234532772 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218239379 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123247423 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221624988 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184127933 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120478217 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172771815 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121772241 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16735268 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120221223 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121124106 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095801862 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796996785 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124095482 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098442277 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116434003 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187041888 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11093346 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103302992 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125583403 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108529531 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753156826 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127940659 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121025193 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102885787 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118777854 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12100553 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09604412 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115858925 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162204839 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231390771 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12211573 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119354807 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103604572 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181732635 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095411279 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125394725 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123953795 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125198384 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100730535 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115077152 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123815312 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171204819 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162007352 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221401004 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.598775263 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091376621 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125993881 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22997494 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090578228 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288814607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120062733 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227514223 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166891696 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121986195 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318517099 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167934625 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188151048 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.1269747 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175318801 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087379663 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118974129 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164191868 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111704811 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117323646 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162527882 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125693789 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102885773 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948693741 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112428267 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225909149 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108516382 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173337059 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094996542 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121554216 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290552875 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111275019 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108572345 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187223154 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093767463 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125276101 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.720496639 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10538479 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122957613 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118765955 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222438214 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16495169 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097845277 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119733744 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121039138 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163367945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211446826 seconds)
  done (took 44.027240239 seconds)
done (took 59.032787947 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274816197 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213525179 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257644042 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168138639 seconds)
  done (took 1.856532766 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174548338 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148159401 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120995307 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107567942 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149797498 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085983125 seconds)
  done (took 1.654454375 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35141376 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270415163 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237613228 seconds)
  done (took 1.728995219 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288132713 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253394017 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354914604 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420282005 seconds)
  done (took 2.305647128 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20878246 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131877416 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110578297 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105046264 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19652964 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248529276 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141287627 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201137333 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12242353 seconds)
  done (took 2.381337321 seconds)
done (took 10.800485514 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.266493631 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.172890609 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.227487249 seconds)
    (4/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.208138985 seconds)
    (5/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.174637355 seconds)
    (6/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.251858667 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.133607661 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126263047 seconds)
    (9/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.130438778 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101490328 seconds)
    (11/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12280992 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094134425 seconds)
    (13/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116678115 seconds)
    (14/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120452835 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.198702057 seconds)
    (16/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217501296 seconds)
    (17/286) benchmarking ("sort", Float64, true)...
    done (took 0.231962506 seconds)
    (18/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.231682994 seconds)
    (19/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119241627 seconds)
    (20/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097682397 seconds)
    (21/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.218660546 seconds)
    (22/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.140634172 seconds)
    (23/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102716788 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216992135 seconds)
    (25/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167380656 seconds)
    (26/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.116143336 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.12311438 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.140545305 seconds)
    (29/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115498662 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.218100958 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.225537043 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088574187 seconds)
    (33/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.098873844 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093961173 seconds)
    (35/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.122553347 seconds)
    (36/286) benchmarking ("sort", Int8, false)...
    done (took 0.18716672 seconds)
    (37/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093807473 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.239711514 seconds)
    (39/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121106789 seconds)
    (40/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119151093 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111715271 seconds)
    (42/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.230967412 seconds)
    (43/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181996586 seconds)
    (44/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.211956672 seconds)
    (45/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095992178 seconds)
    (46/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117728741 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11002513 seconds)
    (48/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114685415 seconds)
    (49/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.147749722 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093528155 seconds)
    (51/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.222307154 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133117505 seconds)
    (53/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193196766 seconds)
    (54/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121533489 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115513731 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107819517 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088724656 seconds)
    (58/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.182314105 seconds)
    (59/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119742297 seconds)
    (60/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08233122 seconds)
    (61/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185448757 seconds)
    (62/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06803995 seconds)
    (63/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171163057 seconds)
    (64/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07821571 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.1097895 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092573052 seconds)
    (67/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139844439 seconds)
    (68/286) benchmarking ("sort", Float64, false)...
    done (took 0.171111226 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086512922 seconds)
    (70/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116398222 seconds)
    (71/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.19620691 seconds)
    (72/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079166869 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087789768 seconds)
    (74/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110829737 seconds)
    (75/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116790648 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.1339372 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.109663143 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.188657176 seconds)
    (79/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098067986 seconds)
    (80/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116521586 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112194759 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135418551 seconds)
    (83/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.134994538 seconds)
    (84/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067486352 seconds)
    (85/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.186314885 seconds)
    (86/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.194601063 seconds)
    (87/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089641611 seconds)
    (88/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09040641 seconds)
    (89/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.150172759 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116828483 seconds)
    (91/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149846821 seconds)
    (92/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124201055 seconds)
    (93/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109761165 seconds)
    (94/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08743633 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126613993 seconds)
    (96/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096750081 seconds)
    (97/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.105792624 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094301278 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118439701 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094722171 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117577697 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139034331 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087022114 seconds)
    (104/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.147172169 seconds)
    (105/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067090302 seconds)
    (106/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171872892 seconds)
    (107/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.237089753 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06667821 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134781989 seconds)
    (110/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09111097 seconds)
    (111/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067470879 seconds)
    (112/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.157562576 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122769786 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.133222817 seconds)
    (115/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094367459 seconds)
    (116/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.152570186 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.161673858 seconds)
    (118/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.173812775 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.180872633 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119054878 seconds)
    (121/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06736641 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117107992 seconds)
    (123/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.167216818 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08929926 seconds)
    (125/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090816388 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108787913 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093155583 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11682616 seconds)
    (129/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.116787618 seconds)
    (130/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.145204346 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116756708 seconds)
    (132/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118591894 seconds)
    (133/286) benchmarking ("sort", Float32, false)...
    done (took 0.174072019 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109640749 seconds)
    (135/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097151572 seconds)
    (136/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136991185 seconds)
    (137/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096864257 seconds)
    (138/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137122296 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07080423 seconds)
    (140/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110341466 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108158771 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114826141 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117841414 seconds)
    (144/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067526602 seconds)
    (145/286) benchmarking ("sort", Int8, true)...
    done (took 0.222936764 seconds)
    (146/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.145221879 seconds)
    (147/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067053241 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11831621 seconds)
    (149/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.070561796 seconds)
    (150/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.187023901 seconds)
    (151/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086885992 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091419606 seconds)
    (153/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066464117 seconds)
    (154/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120702261 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06695844 seconds)
    (156/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067008993 seconds)
    (157/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.10441639 seconds)
    (158/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100229798 seconds)
    (159/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.104179625 seconds)
    (160/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067801671 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092916796 seconds)
    (162/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117784141 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115527424 seconds)
    (164/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067845976 seconds)
    (165/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086099106 seconds)
    (166/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173628001 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108774581 seconds)
    (168/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087681008 seconds)
    (169/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111670033 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.142670514 seconds)
    (171/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089282423 seconds)
    (172/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.07580925 seconds)
    (173/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112291109 seconds)
    (174/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.126917225 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115687043 seconds)
    (176/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.120112778 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168983631 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08695123 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118822937 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087062592 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126373893 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.222791186 seconds)
    (183/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067709091 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109941199 seconds)
    (185/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090819721 seconds)
    (186/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117407533 seconds)
    (187/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067895769 seconds)
    (188/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171652528 seconds)
    (189/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.166891341 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095562758 seconds)
    (191/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172597854 seconds)
    (192/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066906845 seconds)
    (193/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091310145 seconds)
    (194/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067698828 seconds)
    (195/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233789454 seconds)
    (196/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136602726 seconds)
    (197/286) benchmarking ("sort", Float32, true)...
    done (took 0.232842393 seconds)
    (198/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092609613 seconds)
    (199/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112917422 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096326873 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118294162 seconds)
    (202/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173498625 seconds)
    (203/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106570258 seconds)
    (204/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101054403 seconds)
    (205/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1192844 seconds)
    (206/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.1850704 seconds)
    (207/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067749511 seconds)
    (208/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11796586 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112553621 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115583624 seconds)
    (211/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06722115 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120096968 seconds)
    (213/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089486085 seconds)
    (214/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.098716333 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.306347532 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089620597 seconds)
    (217/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140565016 seconds)
    (218/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.09993864 seconds)
    (219/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067671601 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067620082 seconds)
    (221/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100261931 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086747591 seconds)
    (223/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.089329372 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068648848 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086545766 seconds)
    (226/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.152764911 seconds)
    (227/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077095817 seconds)
    (228/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116272889 seconds)
    (229/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090118063 seconds)
    (230/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126600235 seconds)
    (231/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111383669 seconds)
    (232/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066609553 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06685398 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164095542 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110599504 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068966978 seconds)
    (237/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093105161 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091414227 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06666717 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116630442 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096241167 seconds)
    (242/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114313847 seconds)
    (243/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105917362 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.200938052 seconds)
    (245/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067496425 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11013662 seconds)
    (247/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093225163 seconds)
    (248/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090287542 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08798214 seconds)
    (250/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.0909005 seconds)
    (251/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087605535 seconds)
    (252/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099268065 seconds)
    (253/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115187693 seconds)
    (254/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115177428 seconds)
    (255/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06674785 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067473672 seconds)
    (257/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108292111 seconds)
    (258/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067414433 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108896048 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095147131 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108369547 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08763329 seconds)
    (263/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089503799 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085343768 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118237826 seconds)
    (266/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220310698 seconds)
    (267/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078416822 seconds)
    (268/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110337771 seconds)
    (269/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067785412 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122879542 seconds)
    (271/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068482548 seconds)
    (272/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076916315 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091266329 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092526951 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113989158 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086557289 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119165647 seconds)
    (278/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089637315 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181273372 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110855726 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086749105 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111350281 seconds)
    (283/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067117903 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11523931 seconds)
    (285/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086326666 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132921748 seconds)
  done (took 35.975807063 seconds)
done (took 36.84906558 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100531665 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14677726 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096125846 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134949603 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122999385 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092228705 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117889107 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098100695 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122464353 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124077412 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098783443 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092275907 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09770934 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120287685 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097567566 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138241036 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122608765 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094746341 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118094806 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086719668 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117663338 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089676579 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111682025 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069949518 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120989587 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094518674 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116515491 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118818287 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086620965 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109966144 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089999376 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116800755 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086602463 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123120026 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094129981 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118237804 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097461455 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119263165 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110986917 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086566395 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118163657 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086897707 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117648206 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094472163 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115469859 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092736008 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118541383 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103132232 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140294959 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11513394 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095867352 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12167406 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0961883 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118495875 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090851284 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118742808 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092016646 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138890094 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119157719 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0924119 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118319838 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09466724 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11573197 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094413635 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118920262 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120275235 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098794898 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115444979 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097195244 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114629108 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086793579 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119085201 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090276186 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109777823 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09564856 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120313454 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108827327 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092924408 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116865278 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092425852 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109488518 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090127919 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111265794 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093697669 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112378734 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069652397 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113763824 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093642267 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110202686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09647678 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116993305 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093665951 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111805605 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098382476 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110321954 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092630133 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111267045 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086916081 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112688776 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091189802 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110648319 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090447521 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119229289 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088296986 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.1160531 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122553374 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086558869 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116751944 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08707864 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109519897 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10281379 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120705499 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087188292 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11629895 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086511237 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117890326 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087227009 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110906458 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087317928 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110003603 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093401537 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110320593 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112820344 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094256259 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125165187 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087304176 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113495218 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089405126 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110104969 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093064027 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110685714 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087596569 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11302495 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078145439 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112315866 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088235772 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118272095 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090587161 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119308907 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089077597 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119927825 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092143827 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117850165 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093038642 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109600586 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075468198 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115504221 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090442332 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11291708 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087478635 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113009203 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087506689 seconds)
done (took 16.885832519 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087762878 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183167856 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152190084 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141515171 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107891218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111520464 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121944082 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.1183791 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113511859 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142558846 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110320565 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131618079 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147852193 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087661453 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112428893 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091629426 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112805383 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10308167 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144610634 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131926272 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163493744 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08696244 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146706874 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134180125 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120575704 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114938436 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111875656 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092051334 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114273552 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103987321 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131676496 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114733847 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088307833 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133347291 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104942151 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119270592 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087208574 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117975956 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087405559 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111791238 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1407446 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132639763 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092792377 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116554652 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091062057 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1142275 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089534413 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120674912 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098384531 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116972715 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12555166 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155999353 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091264001 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121035684 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087219681 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122346874 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120947159 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091207131 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111412403 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090426216 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111533616 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09133604 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126911222 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141736781 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092760576 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121463136 seconds)
  done (took 8.576850297 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105439101 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139461427 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105788417 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131070753 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111264595 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088636122 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112513145 seconds)
  done (took 1.729485824 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088790324 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134610895 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111808476 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135793207 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132826359 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112229849 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123000525 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089087044 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13315848 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090048119 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133715252 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150784785 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090312259 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120527711 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137079867 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088730494 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136576741 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089528179 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116349828 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136936912 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092754321 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134588587 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091463701 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113882369 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104209295 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113807518 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162553686 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094098291 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11361574 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09238637 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110952008 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150272152 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103173887 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125032382 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089737928 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128989068 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12830862 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086993393 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.12545786 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094610988 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127225028 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090240343 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114578783 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086911505 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118092828 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.0999382 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117741005 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114448289 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091669655 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133165127 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090549371 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144335646 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090230354 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118201895 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090723552 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119261807 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098913769 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113544341 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134012219 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091054924 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130572509 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110093394 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127853076 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129543961 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091838173 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127252579 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104111594 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115988209 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090746532 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117242449 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105593027 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112027771 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115252374 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100356394 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115643004 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11261824 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137855441 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091390651 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123782179 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113828088 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090316839 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114282186 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113256002 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117668957 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089975508 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117656151 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092727954 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112294815 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0880863 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116998841 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088251646 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115035163 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095020419 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114231707 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092281235 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129964449 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114656986 seconds)
  done (took 11.80784057 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090419434 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114178294 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091774537 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113994233 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090713151 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115054291 seconds)
  done (took 1.557611514 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114787192 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117204304 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105809413 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120907617 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155663775 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104098662 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12913409 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122922457 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108334055 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126433658 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128670183 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105132228 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134638422 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120729513 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105137493 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119748109 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104451897 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124574429 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127407239 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096913817 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136409103 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120235309 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096844787 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13170902 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117656219 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095587809 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125916306 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10307714 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126810758 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123082878 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098191618 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117324402 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097114395 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125449848 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130014465 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096726061 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121089472 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118788953 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10098291 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117446747 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104412579 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121701637 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127114428 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095400262 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123930302 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119974018 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094174324 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126102017 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103938433 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11902677 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121650478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096179794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118911759 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095131814 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12263297 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123403757 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09503552 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128835151 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121291053 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096990391 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118274078 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093694338 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123688773 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117438571 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104589087 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118707546 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121738402 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096471877 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121384753 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095605372 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119340682 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093111156 seconds)
  done (took 9.197841491 seconds)
done (took 33.798665509 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.680984997 seconds)
  done (took 1.621316248 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817089316 seconds)
  done (took 1.759538639 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.177049564 seconds)
  done (took 17.14806046 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.486901563 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.568375307 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98606735 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180353235 seconds)
  done (took 3.163830072 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.930891525 seconds)
  done (took 1.892769037 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283201261 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234404213 seconds)
  done (took 1.467721595 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.761891414 seconds)
  done (took 1.719634857 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.358490608 seconds)
  done (took 2.306977225 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324252788 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184203704 seconds)
  done (took 1.466213321 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54735935 seconds)
  done (took 1.507664163 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.629987003 seconds)
  done (took 10.595230307 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265116876 seconds)
  done (took 1.234514341 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300795503 seconds)
  done (took 1.261493858 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.370315412 seconds)
  done (took 4.332451342 seconds)
done (took 52.430388678 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099102811 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126285033 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102085548 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123029794 seconds)
  done (took 1.40722936 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100902411 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121136839 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100825858 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119881976 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126033457 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09618734 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123985307 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101928337 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120325012 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096866341 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119644679 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11952835 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100056932 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122523892 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094250836 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123485855 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099350142 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120886041 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124247505 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096448148 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11775975 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097680401 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123942258 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094649953 seconds)
  done (took 3.630427243 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100343087 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118934594 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097180127 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118057171 seconds)
  done (took 1.406800845 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100397063 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131063567 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106156601 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12445908 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131473543 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106118227 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116645681 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092168621 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119263744 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099527281 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115662009 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138776402 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107456016 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123604384 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10327127 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113962365 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091425888 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130226985 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125191821 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100646156 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117640069 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099986634 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115508664 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109291065 seconds)
  done (took 3.687971127 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171376075 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126393557 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13798261 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095947891 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160272613 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140777782 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088247045 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139799659 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08868054 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130585873 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118192508 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134484615 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128973131 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088492605 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114004452 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088149409 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128180542 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128784458 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091309947 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127016656 seconds)
  done (took 3.403232128 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098413935 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117189429 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088953087 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115923588 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099857899 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120584773 seconds)
  done (took 1.61316993 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090837646 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114377872 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090235026 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114353337 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093868495 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114418187 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088792872 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114133657 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090128723 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114666582 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089105942 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112462272 seconds)
  done (took 2.19945789 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505072586 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118495608 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11922819 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089238531 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123767865 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089863094 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129371649 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093435376 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140546054 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088719604 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115597825 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090603884 seconds)
  done (took 2.676553249 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236346847 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125219418 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283058009 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363340377 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154604879 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165325875 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277317387 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160049398 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197817939 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149975345 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229720947 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195774474 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151242708 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191331429 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137113987 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144607186 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190316592 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251070659 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15314083 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212421441 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205223491 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165685074 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180541778 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150504421 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113358304 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191975766 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095247085 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130814987 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20704134 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204554267 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188750031 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160352932 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147680573 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235264133 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246820378 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195325297 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277054905 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133503674 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141909398 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166525758 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263790385 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138405634 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231931511 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155822227 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106216261 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219959054 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166077291 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175593221 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145601414 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138429368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197880255 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238863978 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192791833 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138039093 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296829029 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148977439 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157122271 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189840809 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250736149 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226116688 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188087194 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12052155 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189832368 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189740458 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185077486 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151587908 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.20811918 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147124904 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183759069 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189076753 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165659914 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203775674 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179195237 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138730422 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169634744 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172322547 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172327567 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258335245 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184849361 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121494071 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167680228 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149102009 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105060364 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194031521 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125455425 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21591897 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143960846 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162786081 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20861677 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159490022 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162478217 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217494179 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183752151 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148134382 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084643758 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153630748 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154850282 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176299674 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140248313 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157702933 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156342597 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103709835 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193570432 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098595168 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184073058 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117321813 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174031396 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183612142 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126620997 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162541809 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153809287 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149426742 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17738513 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200263509 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140143825 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132867255 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211021239 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176255698 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142413535 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177310234 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227641341 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118129472 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149271142 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225387298 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217123495 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139680554 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22755005 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12641647 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133891708 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133168203 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181123271 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156116236 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16106294 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132263539 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182508236 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205009913 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126412022 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138481875 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19463641 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134209829 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130592318 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153955617 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121181915 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136984893 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14193126 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144135933 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17523588 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179519079 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15410271 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168090705 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149000752 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249143302 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140250325 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149955392 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122722482 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120863782 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193262855 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224048737 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104250673 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231345177 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171013684 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198492274 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168989046 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133905019 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176882887 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129779491 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093642136 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220323201 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167513451 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16289642 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197828396 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221255107 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182219987 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182632628 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165199288 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200044899 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138402725 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15627012 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137560075 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160938721 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158479209 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121946818 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.114024289 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13332604 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149314442 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141544698 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106635177 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224967309 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170894876 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213034351 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133052507 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148587452 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180810995 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127977871 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177491871 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203087933 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119124186 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22558516 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193299156 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185490618 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143331191 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226259378 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093957559 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12471144 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141666057 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169538895 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106653059 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134609308 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161318733 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179849368 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206231326 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169707103 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205826464 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173328578 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215598374 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096115397 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168399037 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183674605 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175384675 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178204486 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139456233 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150526616 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175665175 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154279503 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227022979 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195253388 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175358905 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204754204 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150651833 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131038243 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148630203 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178005949 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153789272 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175116541 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145086625 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138250122 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158730523 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104334191 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159163416 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211291635 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162261959 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187927901 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148676175 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184913297 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127285823 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161818247 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159095671 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165349647 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08102765 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199970628 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202567692 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145604009 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166466627 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18751667 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131856074 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306555454 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232621578 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196035523 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136583912 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154724087 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159522126 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160788205 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169538596 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17898455 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159177913 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187985338 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159175258 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134937963 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111810502 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149869559 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152465808 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131950277 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147450052 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178159086 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136802411 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190380123 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155401288 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159033094 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171995539 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150021409 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118112887 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149635725 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241520901 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184512881 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237384754 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123015275 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203979141 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206869632 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125308887 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104822285 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133670587 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179041663 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135594874 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191264189 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.211835666 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199139622 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180343438 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203013777 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112881532 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119587551 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156866096 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169448472 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202284426 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148420006 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146664583 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227916379 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110790131 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131060127 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165644893 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283590932 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145304426 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195102348 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106928464 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275532169 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099895382 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130554175 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163366424 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233564891 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109251464 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176678707 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170247911 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161684739 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163955282 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149385598 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191883247 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236707171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199891633 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182364385 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133245388 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156346422 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173576761 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216292673 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154407878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111259611 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229805893 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195207324 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195566104 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142585806 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168981425 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167702339 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157952953 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210635337 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107625399 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233849574 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107065366 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219044221 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154020384 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13777482 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176650449 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187863828 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140653787 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18698238 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208235268 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107938053 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133294314 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165673536 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177246674 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154143985 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127774708 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182620692 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128317317 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195946762 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259148245 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133329191 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128651008 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146377842 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134818234 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153964469 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157502456 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138731637 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138899054 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226859046 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106877732 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217457603 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200654203 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19678059 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174291633 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117729947 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.719474076 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103560143 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221100605 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119980231 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233811383 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150839475 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171892942 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158709338 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167976868 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19393414 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159335433 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230872376 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217408084 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179373038 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13110217 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156265024 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153608817 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117073998 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15221062 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168558245 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158899552 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145067508 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177519714 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162831726 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134178189 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139568197 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198360842 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147971029 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185474893 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179368288 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138117086 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172922112 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211904831 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106339593 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179250119 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234879836 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141664389 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148196066 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107211716 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148841112 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260904679 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124407255 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187594184 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182236754 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158721666 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166965617 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145953181 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217501203 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156651971 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184767911 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140987591 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157493391 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15522525 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110088088 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129971605 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155619699 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167773252 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149560496 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159762908 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140456052 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218152859 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095593292 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144079025 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281683366 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198619833 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215804291 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135509713 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107014856 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161264025 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149182284 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175972603 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203577952 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108255981 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134554563 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136386278 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.127814495 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135991388 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154259229 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192783923 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165223606 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206686593 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136133958 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279843611 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138127532 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153906186 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089951471 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130923424 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148941725 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118163067 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154983191 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216024059 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258693951 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122831053 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132699361 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14839801 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098295925 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135899979 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16397796 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164943034 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176051822 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14537169 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080617434 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156316404 seconds)
  done (took 82.049419408 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166902284 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130964802 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145731285 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201132002 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175726773 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269020736 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207662443 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25107889 seconds)
  done (took 2.61080691 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095918259 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144794805 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155871983 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131094711 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092394676 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119545917 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34001173 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131091558 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115178871 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122094326 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172454182 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093488167 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.542126409 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09161254 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119037943 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106568044 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09221979 seconds)
  done (took 3.722804799 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.039547827 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.475210312 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.634730662 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.188592467 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.156282015 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.116242162 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.664342256 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095330356 seconds)
  done (took 11.433149586 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115851289 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134806567 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123346461 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.1515249 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142275453 seconds)
  done (took 1.744956482 seconds)
done (took 122.545144591 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100165353 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126855541 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097580115 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130341497 seconds)
  done (took 1.510684076 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09421955 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071025224 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099637536 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075357179 seconds)
  done (took 1.40615017 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188290593 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167564896 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.399535962 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071891224 seconds)
  done (took 1.570447302 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117015843 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131833332 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10500807 seconds)
  done (took 1.425837382 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109149368 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129565489 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103302764 seconds)
  done (took 1.411760277 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108144853 seconds)
  done (took 1.175969983 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110300863 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136678863 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109519331 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135684013 seconds)
  done (took 1.563074668 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100124918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127019066 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109324262 seconds)
  done (took 1.408050777 seconds)
done (took 12.89581287 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105435744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413547585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412518727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116932858 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721303665 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379995394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.022215243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146435914 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164828269 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093750759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138928661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669839573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.012385399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.369491222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970930959 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.461357553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.724138098 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093895721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119771628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093716491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.00625871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091668099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122366545 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094394986 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701938487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426268099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094220291 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.460751084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092677185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127715805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383395808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122663638 seconds)
  done (took 17.017770338 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095816272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174435873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102052907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138138555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12278497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095189099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126563753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093296849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180300743 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125471562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111417153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120148958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125074106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096374809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141797652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093091047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125594415 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094480424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120903188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120599862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112924908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11985914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094781463 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12132559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095037424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136504382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121686923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094824818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12049269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098892338 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127303867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095392356 seconds)
  done (took 4.816406473 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141950545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183641693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128290945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1262725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16917801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123644501 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198656506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118949921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182584364 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122348099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139092036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092890199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156671292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121074747 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114937102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121040935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09728713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12161563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092818485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123756832 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14038618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096139782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121117524 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093818691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123324866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107899884 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124745768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120786299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095869247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127457722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100662192 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124619801 seconds)
  done (took 5.13144184 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098884057 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125455809 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111438587 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138662474 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096093633 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125951635 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098929078 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125170189 seconds)
  done (took 1.99617364 seconds)
done (took 30.036354033 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11136901 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12717305 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.110010076 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13508346 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102498174 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132006599 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091221552 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133978573 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133625401 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103010252 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137102859 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092127388 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122608338 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091446936 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135506226 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098895514 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132256575 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10251316 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132470445 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131124729 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096807778 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132512128 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105735224 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133053655 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104588909 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133442055 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136748834 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09980588 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12227891 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094585472 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124408889 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10611552 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123741897 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106155285 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127145375 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100335654 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124067033 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094192526 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131626584 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133436047 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.103234955 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133431355 seconds)
  done (took 5.992652738 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.1092468 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13933923 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108213659 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08157125 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115786556 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081274968 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138756279 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.084322031 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110150854 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107906491 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074789896 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105875143 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078550925 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100547641 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079987425 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075667532 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107115564 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076310072 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076487214 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105387308 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079792555 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072606505 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107857248 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078857736 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074590271 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11062283 seconds)
  done (took 3.566120482 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102229568 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13360775 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113153994 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185184553 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161449846 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100578069 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13203052 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139689039 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111103535 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119354348 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097696838 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149275099 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110101838 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129605246 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092073902 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137024251 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134857921 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09510392 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128373093 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112220126 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138446871 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102171297 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139907951 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132356742 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092777616 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123229317 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097176055 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133985632 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097832616 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131266319 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096936833 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126069019 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122940449 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10460447 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126026903 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094547763 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14181842 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104295163 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130426551 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092966536 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130463894 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121669733 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114244936 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161691475 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092218673 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129384776 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095412645 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133480698 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120778823 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111566322 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13088565 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092362626 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125100417 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091885456 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12162198 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106808961 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124524456 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095534541 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133224838 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127348641 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106145838 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125266966 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109094429 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121331152 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100090388 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122153772 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093957242 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120713824 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143061577 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095155562 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160521267 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093702466 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124178234 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102086718 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130353849 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128339553 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094230644 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136787489 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103191017 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125397418 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10222643 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126035942 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095506451 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140105754 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123769831 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096761526 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122181601 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099899158 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124630734 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094184651 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136218975 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091972027 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126086556 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110569503 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122357235 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121370497 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100858832 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126732927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09289965 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135101216 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09900182 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122800087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102606757 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123945899 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124012065 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104483777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125058153 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092894081 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126713039 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099659668 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123889426 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094643722 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126375953 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094943176 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133499846 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128148853 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098861172 seconds)
  done (took 14.815571911 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230596324 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216463132 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.246139632 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264522701 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136152757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.14449353 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212876612 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124754875 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124116618 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160324588 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171710663 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180975812 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169103864 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.17934373 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169401393 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093300292 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141882446 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164685961 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213959615 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258728522 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143811291 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131162169 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.131884559 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161071553 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13720113 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132256606 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110457881 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133255583 seconds)
  done (took 5.787950149 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111429398 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155945478 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098722755 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146540647 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148593653 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093056837 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.1285585 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094356271 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13522677 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136322014 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093184018 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129269941 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100242544 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132447333 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122789513 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103118655 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132658919 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095878192 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126196687 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097710139 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133621213 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102880353 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128874046 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121873904 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103467376 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12136273 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087620546 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144007422 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122796075 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116095841 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12047363 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10136837 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136442536 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094052949 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122646803 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095284104 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124706375 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095183692 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124518991 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091486573 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122505129 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077675005 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122206642 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136726637 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100542867 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080223307 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129978014 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127482257 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094655818 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120274609 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096779458 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125335202 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096822628 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12936168 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096024479 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123936602 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096207971 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115176453 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099447018 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125068828 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084751808 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121139142 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099490453 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118272669 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103124991 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127374419 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092354298 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125031006 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097627281 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128959609 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095219974 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130208857 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091467151 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126661816 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097790858 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127816537 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12414994 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095648642 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.1215976 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095296413 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075413386 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124770029 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074239172 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127007553 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091888691 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122410498 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095326675 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130766536 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138093057 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095593924 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131565853 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094590655 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121447872 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096079269 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112688949 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096476879 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140207242 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14066703 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094386592 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121554973 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108182439 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126253592 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092220286 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105531158 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102675033 seconds)
  done (took 12.956034052 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130057762 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153474972 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124242176 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111600145 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15722023 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157357888 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101479193 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128790458 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095247449 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142265792 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093627146 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130863991 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093401593 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138020778 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157734206 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104021694 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126394192 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107893228 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128727497 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169222873 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111860662 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14256341 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11084655 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125553393 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128509756 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111606543 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161511515 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110754566 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137760072 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141866833 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108350826 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161597805 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144823323 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099213854 seconds)
  done (took 5.460689737 seconds)
done (took 49.656047616 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.199691149 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.390624946 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.174715616 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.047075744 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.196765692 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.214736483 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19101496 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.181727591 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.426226656 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.177143128 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.44181374 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.684708046 seconds)
done (took 59.435101683 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.244064928 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333774333 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471929197 seconds)
  done (took 3.908292296 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.734208768 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.064507762 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433729375 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.179519286 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.175013509 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.482697727 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.705427518 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.405568236 seconds)
  done (took 27.543308345 seconds)
done (took 41.536630846 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.174358309 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.254901662 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.177133996 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.155012684 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.29923375 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.203527519 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.499608346 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.241477345 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.186685751 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.17283959 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.206676915 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.173095944 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.196502994 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.524634636 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.18027694 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.178775425 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.240526363 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.701085673 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.531361654 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.176652927 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.187403457 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.207571647 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.169512711 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.171592826 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.210187748 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.174713241 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193079319 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.174016381 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.166580136 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.176625651 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.266247687 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.694610685 seconds)
  done (took 189.365769012 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.176259172 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.236665441 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.348224381 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.211757744 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.628081484 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.376816356 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.322043972 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.693580761 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.191238374 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.195943736 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.428160033 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.177158304 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.496401913 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.145950548 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.206732897 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.238458672 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.367693972 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.477282082 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.212678141 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.338589717 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.191116772 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.555561028 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.501578233 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.374513099 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.210723122 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.241809575 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.188527974 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.184268181 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.381012638 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.324933585 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.218625517 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.199478627 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.695555241 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.031188283 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.198115819 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.184060312 seconds)
  done (took 149.24628329 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.177516161 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.177475941 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.179426956 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.203403252 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.179841735 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.658947188 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.655637059 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.672680813 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.476961794 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.258751118 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.361506714 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.175812003 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26682555 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.186833299 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.175749406 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.191377215 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.218557798 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.174777635 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.177866002 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.659867844 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.19235578 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.174931032 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.339049656 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.186999178 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.200660367 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.565196799 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.377546653 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184076922 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204856234 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.494159271 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.216484876 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177720815 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.469561366 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.511920825 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286102252 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.177231924 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.180739506 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206780347 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.177198494 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.452883202 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178814411 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.175241315 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.18407016 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.786486671 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.182648368 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.66049525 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.175052802 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.054337475 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.174299826 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178837368 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.267623177 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.674534093 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.19851305 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.180308053 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.183741641 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.178434149 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181494474 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.206871737 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.319337864 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.267320612 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.196477609 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.183845445 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205574774 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.184497275 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.398231159 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.178833328 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.538146386 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.233319871 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.282748922 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.66320804 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185483147 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275554215 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295648627 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.179848287 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.179507868 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182617198 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.180707273 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.285511913 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.176387067 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.178658437 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.535755062 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.180578461 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.342752323 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.194857251 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.274838403 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.27901536 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.179902087 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493418903 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.185725337 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.17999732 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.852655781 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273607959 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.179771857 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.180563107 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18451838 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.539758132 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.663877369 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.352407983 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.183758057 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.374396083 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.185282175 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.548523708 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.651048289 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.759132562 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.181792726 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284025239 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.338043701 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.192782076 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.176933504 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.25526886 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.182931922 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.235599055 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.17719614 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.570898405 seconds)
  done (took 360.076005113 seconds)
done (took 699.790993411 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.768436274 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.761530808 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.860556327 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.754213331 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.721765627 seconds)
  done (took 9.969412533 seconds)
done (took 11.073884074 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.34142655 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.341710576 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224974367 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.342276383 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.202041743 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.358447388 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.31977984 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.192653629 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.265471679 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.244269143 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.26740031 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21936788 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205610005 seconds)
  done (took 17.624411222 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.471051865 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.461400749 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.236867626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.466904866 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.211911659 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.469602705 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.364353599 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.390229523 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371835192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207883095 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.185993379 seconds)
  done (took 15.937434939 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5222036 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.482538598 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.23949239 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491673925 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.214645794 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.475692029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370856017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.380517849 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381160229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204848818 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.185609041 seconds)
  done (took 16.048052882 seconds)
done (took 50.710300754 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.182478882 seconds)
  done (took 2.281076743 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.213665593 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.372047543 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.199015022 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.188804271 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.183699904 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.184441703 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.188883321 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.184320985 seconds)
  done (took 10.814784559 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.182548111 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.180240021 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.181642348 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.182494202 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.182716203 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.180928369 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.179170117 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.17998388 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.179918487 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.182535401 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.183145664 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.179317944 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.184287127 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.180547721 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.181161501 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.182584228 seconds)
  done (took 20.004022731 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.182075236 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.180724478 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.180440685 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.181985572 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.180355297 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.180963693 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.182139345 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.180647022 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.181581221 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.181501416 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.181621087 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.182096944 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.182383019 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.181052254 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.181157004 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.182724869 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.181821201 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.182358646 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.186196027 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.182320631 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.182710199 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.181966044 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.181924467 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.182684385 seconds)
  done (took 29.468939381 seconds)
done (took 63.669488787 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.743592898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.648795385 seconds)
  done (took 6.494839615 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.184057196 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.184409699 seconds)
  done (took 3.475578685 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.184719576 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.184371722 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.18477319 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.185407108 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.184312322 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.184224294 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.184631908 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.183984624 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.184699217 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.184198233 seconds)
  done (took 12.947141146 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.185400641 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.18484145 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.182508349 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.18522019 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.184929265 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.182864169 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.185186529 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.18636073 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.185305226 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.183297613 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.185945379 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.183669941 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.186082058 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.183512633 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.184846772 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.183250731 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.182494914 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.183500435 seconds)
  done (took 22.421580222 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.186507662 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.185253367 seconds)
  done (took 3.475850028 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.183832925 seconds)
    (2/7) benchmarking "second"...
    done (took 1.183796787 seconds)
    (3/7) benchmarking "month"...
    done (took 1.183966686 seconds)
    (4/7) benchmarking "year"...
    done (took 1.184004475 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.184045615 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.183875734 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.18405988 seconds)
  done (took 9.392807398 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.188166184 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.353238703 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.432724119 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.793366367 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.188264578 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.189719584 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.064811908 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.190917794 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.193097002 seconds)
  done (took 13.698811599 seconds)
done (took 73.010123356 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.166125377 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.198823272 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.304944017 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.188525869 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.214076429 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.479743378 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.207964477 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.30144608 seconds)
done (took 37.168651724 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.201781353 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.163997504 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.774870623 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.169039254 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.184584592 seconds)
  done (took 18.397871571 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.101516458 seconds)
    (2/2) benchmarking "read"...
    done (took 1.523712884 seconds)
  done (took 4.732879289 seconds)
done (took 30.439460517 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189025475 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.185875463 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.187220147 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.185759105 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.188675372 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.186383522 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.186659385 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.189086943 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.188951033 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.189356863 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.188994807 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.189543528 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188054447 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.189699372 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.185526048 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186936809 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189113246 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.186774605 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186781663 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.187640494 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186374072 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190181052 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.186375364 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.188661597 seconds)
  done (took 29.614489874 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.189818995 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.187258349 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.19022587 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.189655394 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.187568054 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.190413594 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.190621008 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.186852474 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.190020819 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.189138102 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188121689 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.188749985 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.190231852 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.188677275 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190323416 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.188377521 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.192193339 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188559864 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189658384 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.188775905 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.190835453 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188374736 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.188581043 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191320515 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.188950047 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189014764 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.19137337 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.1898109 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191250739 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.188224053 seconds)
  done (took 36.791060433 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.19529585 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.196832997 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.192252387 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.191092908 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.191152376 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.191043281 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.190901505 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.191449304 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.19082977 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.192232138 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.190898115 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.191971785 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.19204082 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.191994371 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.192670117 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.192445802 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.191884717 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.191935699 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.192401632 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.193350194 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.192198545 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.19232292 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.192316354 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.192839005 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.1928146 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.193198325 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.193153708 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.192572663 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.192133893 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.193038749 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.192557157 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.193331278 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.193188587 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.193660943 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.193378688 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.192742792 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.197702643 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.198911489 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.194661387 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.19369995 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.194067669 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.193282964 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.192553794 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.194147455 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.193731067 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.194102077 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.194892542 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.192884726 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.19387159 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.194315874 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.193806147 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.194262066 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.193076594 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.193904571 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.194298824 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.194127178 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.193826849 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.194221407 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.193601845 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.193801268 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.195095557 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.19393603 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.194935193 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.195402055 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.195325754 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.194401159 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.194958701 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.19537131 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.195023766 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.19561627 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.196544747 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.19598338 seconds)
  done (took 87.044931139 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.195534258 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.194109312 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.19259902 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.193326812 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193322724 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.196008491 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.193350989 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195908533 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193436396 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.196445914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19670049 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.194752183 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193319529 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.196159262 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195523636 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.194091934 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.196299223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194869656 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.196833295 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.196128531 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196802285 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.194539843 seconds)
  done (took 27.403572313 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197563208 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198966985 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.194300634 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.197947534 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.196751409 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.197404543 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.197109689 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.199040836 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197137208 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195196555 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194927523 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196861523 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.19601955 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195002917 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195112192 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19706976 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197617457 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.196097302 seconds)
  done (took 22.653498271 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.196207306 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.195531461 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.198467477 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.195584621 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.195121876 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.198701731 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195219908 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.197979587 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.198348364 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.195934383 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.198436746 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199988495 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.19833709 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194660311 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198554595 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.195817077 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.199164565 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196662257 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.19870384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19660727 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.196474769 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199194113 seconds)
  done (took 27.454808319 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199617995 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200272394 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.196973436 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.197068882 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.196649925 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.199643072 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.200347823 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.197343068 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.201274591 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.199743821 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197089261 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.200244506 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.198458996 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199218265 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.199148007 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.197326521 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.200282317 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198586428 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20040373 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.198692228 seconds)
  done (took 25.094157333 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.201489159 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202240587 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.202426618 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203030518 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202664559 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202755886 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202626057 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.203767417 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203211391 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202775115 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.202431679 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202857831 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203550984 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202954131 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203029344 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202916213 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202777965 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202352344 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.20365609 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202528224 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.203907813 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.202962804 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202981103 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203203585 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203483823 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20350344 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203340258 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.203703049 seconds)
  done (took 34.800710415 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202640824 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.202071488 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.200192292 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.20041889 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.200347922 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.199661203 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.199681269 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.200961041 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203602473 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20053784 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.202865103 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.201915263 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.202692524 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.2037675 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.203186289 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.201899363 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203094767 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.201205307 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200020186 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200768649 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.20358632 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204176405 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.203258464 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.201450988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201253316 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.204258967 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202040596 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.201750497 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203704571 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202779943 seconds)
  done (took 37.179378265 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.223060063 seconds)
    (2/2) benchmarking "in"...
    done (took 1.222402057 seconds)
  done (took 3.56671863 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.20222299 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204032516 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.204681988 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.202057101 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202578004 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.205447832 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.205273498 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202205607 seconds)
  done (took 10.749279282 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.206717726 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.206307627 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.205764124 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.206261554 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.207102462 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.205506799 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214363027 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.225102579 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.207014093 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.206998145 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.212222933 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.211975141 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.209635602 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206927562 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.207423762 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20839236 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.206694674 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.207668049 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.208106754 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.207271457 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207724067 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210286027 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209855403 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.205024283 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.208599565 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.217659673 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.228715943 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.207442538 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.20791262 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.211963277 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.208118069 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.204932912 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.20887368 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.209196525 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.208031336 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208602549 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.21736838 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224583428 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.215633972 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226589314 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209104825 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.206690821 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.208832576 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.210253173 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209407286 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.209563585 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.210042964 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.20607581 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.208663511 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.210922508 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.213035623 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209295906 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.207140141 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.212745541 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.211315577 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.216857 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.226809697 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.213091149 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.216919302 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.219166413 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239052024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.231740352 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.212415987 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.210582254 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220019839 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.229089112 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217708619 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.225793681 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.208622364 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.209838954 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.217091031 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238971059 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.232314072 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.211706434 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2118329 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.210865203 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210882521 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.211341025 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219324032 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.230331685 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.213171182 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.212134948 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.219382033 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230323556 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.211634453 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.211447232 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.212371296 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.211649761 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.212344089 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22220716 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.23022883 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.213011129 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.211606335 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.213244596 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.21294237 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.213225835 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.212311068 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213041979 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.209179448 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.212304704 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213318352 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213916892 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.219651733 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.213506818 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.213287093 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.219778248 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.231603706 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212297286 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.219185321 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.212706241 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213251428 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.214407195 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.218493638 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.209960766 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215550988 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.219970499 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.214589031 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.213985229 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.213401872 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.215465371 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222326495 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.235328893 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.21472836 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.213790552 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.21798905 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.223538104 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215937498 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.217388625 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.21410164 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.210866649 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.211383473 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.215547127 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.215161571 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.215558101 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216300417 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215805527 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.212245439 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.214327669 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.21549033 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.215970127 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.215451521 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.215138916 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.215671088 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.218314687 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.215874375 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.217232148 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.222901958 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232275001 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.217551415 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.215957205 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.212743772 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215605093 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.217174154 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.216897986 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.215446301 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217348035 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.216972028 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.216303658 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216600329 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.216671545 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21728435 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.216600825 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220477371 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.216955139 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.219795882 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.21698839 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.213702032 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.217513047 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.21663688 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.216537652 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.217040571 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.216925008 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.219427042 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.223590942 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.21782219 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.217694468 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.22104775 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.218329506 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218044226 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219231185 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.22172225 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.223775501 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.220290145 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.22493025 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.235669791 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218296085 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.218546828 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.21811103 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.218611608 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218983315 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.220334716 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.224535639 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229169798 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240237638 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.218787363 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.22176449 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.21894684 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.22211273 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.222571207 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.218947618 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.218266089 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219780772 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.218976716 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.219046323 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.221464495 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.219384461 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.218953201 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.219216716 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.218972086 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.220424835 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219797493 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.219521521 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.220087323 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.216136383 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.21999755 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219864091 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.220535855 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.216333075 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.219507902 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.219370457 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.219857102 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.220239272 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.226092665 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.218593953 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.221324079 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22290288 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.220670616 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.220020318 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.221473563 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.221884892 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.220339902 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228452438 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.239557817 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.222274853 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227708092 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.238376567 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.220043913 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.224797676 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.220479819 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.219312269 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.224302208 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.228046494 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.22226904 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.223828445 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.222204238 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222130709 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223125856 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.228335706 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.236963981 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.222276316 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.223083579 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.223587983 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.219539951 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.223531086 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.222784536 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.222715823 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224405889 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222752664 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.222294393 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.223511932 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.222351626 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.223746264 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.222608684 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225572799 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.229345502 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.227265191 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.22258399 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.225680105 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.223912978 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.226318663 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.22367374 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.223967362 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.223847721 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235297344 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.245739268 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230315092 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24220904 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223771061 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229131199 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.2422251 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.227040943 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22528434 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224091452 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.223414872 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.224079076 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.221258324 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224412658 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.224313317 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225096129 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.225326336 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.227290316 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.224462653 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.224886632 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.224931854 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.225776212 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.224639279 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.225116838 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.224920979 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.226670879 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227240652 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.224265713 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.226694589 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232891081 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243986154 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.226571318 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.225136344 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.22553742 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.22434747 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.226708607 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.226491732 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.228686114 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.23308633 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.229074143 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.233689224 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.227699794 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23365495 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.226619334 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.22814477 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.233034381 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.22344298 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.226474379 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.226459618 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.228376181 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233721754 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.245306406 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.227568794 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.23063672 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227291877 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.228704238 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.227619085 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.228267646 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227676224 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.227469801 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236632056 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.244368715 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.230718708 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229160533 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.224953675 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.228213833 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.228347168 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.228209824 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231074018 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.227551977 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.229514987 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.229221525 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.228687927 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.227991517 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229435115 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.228743116 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.225666924 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.228112456 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23657945 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.248046874 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232713881 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.229718277 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.236677233 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246567113 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236617832 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.247139685 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.229623688 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.230727593 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.229184264 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.230599508 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.229016276 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.230840182 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.230073666 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.22965717 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232881526 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.229940061 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.23129079 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.230626137 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.230770164 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.229086614 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239465615 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249837886 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.230996351 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233187565 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.228094661 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.231023576 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.235065336 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.230899549 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.22875927 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.232899842 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239610849 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237108015 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.230183305 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.231311837 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231411761 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232009609 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.231593082 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.231823458 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.231754642 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231664458 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.231002594 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.232486832 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233780485 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.231379113 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.232000901 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232857064 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.231964653 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.241499791 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.250047144 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.232506892 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232232513 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.231607606 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.23200857 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.231730481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.233198384 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233908359 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232099073 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.233341254 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238481631 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.23689826 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.235170056 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.232766915 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.233413706 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.233557668 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.232761208 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233458458 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.233714764 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234106953 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.234011792 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.234550994 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.23405585 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.233027899 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.234107314 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.234871659 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234446893 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236372052 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.240330279 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23488954 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.23069549 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.234484621 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233777455 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.232310605 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.234185629 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.240171525 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254036384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.243732576 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.240002358 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.237763625 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.235080525 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23695804 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.239992367 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.233959858 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.235564296 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.235040638 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.234874765 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.235028738 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.236902877 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23763436 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.241258866 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.253174753 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.234432124 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24433461 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.252737068 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23563796 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.23589574 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.239110414 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.235166767 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.234013057 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.236186464 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.235154161 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2432726 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.2549882 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236623549 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238339955 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.234957054 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.236664386 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240641107 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236469688 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.237615392 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.233256207 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.236952929 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23661847 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235874844 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.233596242 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.236418461 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.236326589 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.239501585 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.241253294 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.234985818 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238270904 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.236162021 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.23690133 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239260549 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238042405 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.236371763 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.235457848 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.236842727 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238836633 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.2369137 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.239211406 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.236602963 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.239678968 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.237404627 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238104372 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23979961 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.245770726 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.244336612 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.235777947 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.237181122 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.239446305 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.240439278 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239580868 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.239043288 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238796983 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.239687975 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.239322189 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239342962 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.23800036 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.241298345 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253435324 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.256531795 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238424793 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.239380485 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24138074 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.240246104 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.237007767 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.239524748 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.241908492 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.241331918 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.246124724 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.240048815 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245119796 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25628724 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.240120724 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.242800794 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.242387483 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.245293559 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.242245368 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24127826 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.241170687 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.244147917 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.253783637 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240868622 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248530223 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265944884 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.258878041 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.241223783 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.24142225 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241655669 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.241819562 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.241919964 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.241081394 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.241157623 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241122618 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.241589966 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.241578321 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245402602 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.243282336 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.243433191 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.242521151 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.240598532 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.241628666 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.239030288 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.241560741 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.241116785 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.242689637 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.241750596 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.242609176 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.241901149 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253846135 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.266317108 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.243024236 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.243648146 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.241059893 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.245072841 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.2447216 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251322142 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.24860569 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.24329767 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.244248519 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.244679471 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244907493 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.241698072 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.242870403 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.243027274 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24442109 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.241306662 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.255412113 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268382206 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.248069379 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.242546144 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246444293 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.243484458 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245105796 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245444443 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244772721 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.245064799 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.246147577 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246655691 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.24347283 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.243851514 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.246728097 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.249764599 seconds)
  done (took 733.025084749 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241426607 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242447432 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242606686 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241569197 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243094201 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242410927 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242887364 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242603028 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.24225973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241221713 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.242369932 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242538514 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242243749 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243320971 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24279507 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242185088 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242308506 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243370412 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2424727 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243307027 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243682587 seconds)
  done (took 27.250039707 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.245703488 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.244063117 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243275326 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245765912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243095793 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.245482309 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.24385498 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246349636 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2467546 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242780089 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246596699 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24652795 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.243988144 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.244221125 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243358453 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247380546 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.246641323 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244548667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.24737713 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244396132 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247248559 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244908016 seconds)
  done (took 28.552615714 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.247324683 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.248045729 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.246272233 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.245533636 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.246882837 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.244707215 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.24823211 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.247264489 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.24749378 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.248439066 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.246796507 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.248631816 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.251978567 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.250554079 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.249363147 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.245899319 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.412105551 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.248315438 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248275162 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248736581 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.244619006 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.253997238 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.264487314 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.244498216 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.247616247 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.24908164 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.247673158 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.24779076 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.249205621 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.248638431 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.251704357 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.247984401 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.248190794 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.249735078 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.247940956 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.249236734 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.251192444 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.249051558 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.244734488 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.248599252 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.258339116 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.266467113 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.250316666 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.255136508 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.269504572 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.249297241 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.252398959 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.25703981 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.246864119 seconds)
  done (took 62.572000704 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.249263981 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.250518751 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.245682772 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.251130457 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.250848365 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.250123609 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.250047435 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.250061368 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.247442141 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.247537098 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.250994194 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.248059986 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.247993833 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.249390793 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.250027201 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.248013935 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.247335447 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2469716 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.247358956 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248598281 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.248162241 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.250397132 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.250751576 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.248702891 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.250876309 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.247583587 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.247494873 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.251375415 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.249112 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.248255779 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.250836945 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25063379 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.251659226 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.249128114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.248866272 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.25198236 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.251734108 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.250009621 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.251900444 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.248333642 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.25160989 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.250983296 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.251064706 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.253429699 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.249032569 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.2496426 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.250172212 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.249178448 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.249808586 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.251773923 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.252631153 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.249859885 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.253473921 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.250491661 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.252877699 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.252945942 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.249827724 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.251009225 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.252808757 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.251228248 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.250597619 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.253623592 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.25154494 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.254247388 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.253295186 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.250542386 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.253227429 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.253031899 seconds)
  done (took 86.18293225 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253767243 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.253032316 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253454414 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253030893 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25369026 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.253187443 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253821237 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.253210094 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.253792229 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254169954 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253749795 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.254434571 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.255142789 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.254157716 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.254217297 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254331755 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.25419078 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255080654 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254524498 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254657636 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.25367786 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254086326 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25469631 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.254502089 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255729608 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254351437 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254866681 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.254985215 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254831734 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255049985 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256377271 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.25626877 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255751733 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.25537754 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.255169238 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.256746023 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255728048 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254795871 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.255623708 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.255445004 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25618172 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25589083 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255878724 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.255870553 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256868479 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255332654 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25720596 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.257551679 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.255139065 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257127969 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.255892976 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256619599 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257569085 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256300138 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.257872288 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.255670247 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256149412 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258817559 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257392264 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.256082534 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257194018 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.257788218 seconds)
  done (took 78.997734847 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257462438 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256577109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.254666124 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.25473763 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257475706 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254711027 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258902774 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.257178094 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25835614 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.258503603 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257180681 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256147312 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255550547 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258250099 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255412813 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25576995 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255780486 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25472815 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258654865 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.255840568 seconds)
  done (took 26.302028133 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.255795321 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258471014 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.255297246 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256614732 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.257962408 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.256672569 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.258875433 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259177603 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255986305 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259519135 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258726432 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.258738767 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256110519 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255669599 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.25964341 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.257224449 seconds)
  done (took 21.290135397 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.257111365 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.259004383 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.258835075 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.259405488 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.25671077 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.257142515 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259496093 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.258052728 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.256769356 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.261122667 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.258814423 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.259878698 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.260636402 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.260187587 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.257099268 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.260438414 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.258779546 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.257966326 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.260551343 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.260111049 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.258154156 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.259320296 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.260842189 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.261370104 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.258373612 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.260136966 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.258020843 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.25832057 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.258988478 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.261003922 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.258052311 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.259761883 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.25842506 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.259183043 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.26212099 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.258786552 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.261512675 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.262287632 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.261200773 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.260846062 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.262697692 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258580308 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.262456348 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.261738162 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.25898606 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.262255478 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.259591296 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.259928902 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.260461495 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.261928149 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.263017878 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.262627239 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.2635434 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.262844709 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.263562596 seconds)
  done (took 70.471395501 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264118972 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262562168 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259840374 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263144438 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26270055 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.261660832 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.263231348 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.262445851 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261106784 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.263185663 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261738477 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26445406 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261421407 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.264002424 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262154707 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264612922 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.263426891 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26185214 seconds)
  done (took 23.907432037 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.26133577 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261694321 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.265487005 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.262152683 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.261570405 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264734914 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264576267 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.267147087 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264065029 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.264496561 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265941159 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.265326253 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265818482 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.265750468 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265292157 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262648475 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.265683293 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266136844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262368718 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263632382 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266491418 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265888697 seconds)
  done (took 28.994723136 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.26486217 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.264461313 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.265830585 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.279292251 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.28083032 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.285451504 seconds)
  done (took 8.816916246 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272118488 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265969573 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262987423 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267132267 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266634016 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264378732 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264920985 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263939436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266772153 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264223869 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263249329 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266433842 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266160866 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264746882 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267728259 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267066264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264515171 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264152871 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266248282 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266901838 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264899838 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267831562 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264987641 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264244633 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264848214 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264458758 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268389633 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265196725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264863413 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267827487 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267817287 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26552859 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268454379 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265953266 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268671713 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269307617 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264895129 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2687598 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268734946 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265711272 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268800739 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268735525 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267391547 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265697404 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268806943 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265239259 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265885266 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266292835 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265774432 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269962957 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268291952 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26564043 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268796307 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269176872 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269415112 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269354739 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267239405 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266869503 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26960004 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267185025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266055481 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268980654 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266794416 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268413922 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270055181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267616375 seconds)
  done (took 84.813231504 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267082084 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268275544 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267170079 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269402497 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267352555 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267217995 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267736133 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267746202 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267156657 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269187705 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271500022 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267997924 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268245931 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267476619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268254315 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268285608 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267358518 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268810727 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268278435 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272083831 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269671937 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26869974 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269330711 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270547632 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269499917 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271972666 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268586133 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268678102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269100836 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269126311 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270241101 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269439866 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26935529 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270019483 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270009372 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269734243 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269964221 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269521018 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269930251 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273549568 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269360727 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272571368 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269675146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270839822 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270350575 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269209508 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269921815 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26990751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270433492 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271087946 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270907249 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269611085 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272636755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270904795 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269994993 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270312515 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270407638 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27127802 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271111277 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27347176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271623831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271737692 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274290879 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271141451 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270879999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270993131 seconds)
  done (took 84.990228247 seconds)
done (took 1709.62839994 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.436495555 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.388528174 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.271482053 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.268714348 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.273099934 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.289290681 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.288476981 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.272438293 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.273249682 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.272357231 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.272606221 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.457393419 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.327636733 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.272988689 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.273295624 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.365880053 seconds)
  done (took 42.190348948 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.300652672 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.283939124 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.382315679 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.302389734 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.300281772 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.450613163 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.332862545 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.280589636 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.435795892 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.318625502 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.713961472 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.301873805 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.279153564 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.298144051 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.295022458 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.452919099 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.509303044 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.714214324 seconds)
  done (took 29.138235132 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.685604763 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.297166121 seconds)
  done (took 9.169486709 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.296874484 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.279995281 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.280335145 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.278879774 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.270829624 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.270838102 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.278813934 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.270522478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.64326914 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.394666598 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.280163726 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.286790076 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.296848901 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.280303782 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.276553187 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.313754269 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.430021985 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.278275572 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.277357328 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.28573226 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.279910343 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.36550058 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.318034413 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.276760772 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.39414047 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.649417908 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.280103635 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.284509039 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.40617423 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.275514296 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.273109076 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.275725467 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.277164407 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.879262068 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.778926833 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.287051516 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.303540399 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.291244324 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.274984161 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.442716151 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.284036981 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.28491977 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.281172591 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.775240038 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.414970792 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.389084739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.418069302 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.296066338 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.278227949 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.338417715 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285859627 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.278681392 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.309850999 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.011816573 seconds)
  done (took 107.730359335 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.327353627 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.661605323 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439030525 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.295046618 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.903622684 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.874217866 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.286973772 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.536176692 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.303475689 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272087639 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.556373755 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.755260316 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296813691 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.28078049 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.295572778 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.353038959 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273519629 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.997795477 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.290063098 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.275492847 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.758231577 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273750086 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.285343519 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.410366779 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.311417061 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.706213303 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.525066945 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.705656587 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.294733876 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.273232911 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.714630779 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.295575756 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.33035885 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.276575577 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.525729886 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.607353376 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.604815877 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.293099337 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322187911 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.276775104 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.311966504 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.701940095 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.606137738 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.293655359 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.275693296 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.704792906 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.294774929 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.27569378 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.279890798 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.467578811 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.172742522 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.276502461 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.527755762 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.277506593 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.576202858 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.319341473 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.360248187 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.735362956 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293522772 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.350749324 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319845647 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.275587494 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.282685797 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278625647 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.277736993 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.600009469 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.665278473 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.283000945 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.597705192 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.727075239 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.292809063 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.796131542 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.078557994 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.305783332 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.335170125 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.278218855 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.832098363 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.741010038 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291254052 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.277805265 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.586861173 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.293193723 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.546146699 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.288710266 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.275586571 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.781351742 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.289093236 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.283836126 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.282125709 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.277302509 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.923398691 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276579236 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.534505969 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.296601646 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.276871254 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.272193207 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.315511062 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278960324 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.297637779 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.277604982 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.780049119 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.307956525 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.37680845 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293539741 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295899989 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.276862628 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.280490461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.280372962 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492583827 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.735042157 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.300691623 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.27750558 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.277673128 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.287626254 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.428949683 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.278880757 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.563431779 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.293233966 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278974583 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.281586382 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.902623508 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.342174023 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278551291 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.295380224 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.156208687 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.482379418 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293364959 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.279251658 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.277485357 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.305629398 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.419723035 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.299147326 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.311863093 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.28262264 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958750681 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329769668 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.292983587 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.818515423 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.285991254 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.12208319 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.303935353 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.281324784 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.575002788 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.533440916 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.527487001 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.283277501 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.297580176 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.948368963 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.304439142 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418133053 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298559023 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.397597916 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.476271809 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.405680713 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.284433158 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.87129126 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.28206953 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492217013 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.283547964 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588907829 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.745141245 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.29700941 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.288809718 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958249399 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.997663462 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.945229022 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.284285905 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.547178377 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.225077668 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.761682844 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.2810808 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.286056974 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.703346644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.284421598 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.282460314 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.283416406 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.283238587 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.443373395 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.453028498 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.892786426 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.285513767 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.709035312 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316710177 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.283365238 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.284987065 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.284603624 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.630738847 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.371306399 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.281508627 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.292255582 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.284879805 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.282561052 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.730763375 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.12186278 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.283670227 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4332106 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888729576 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.304347425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.286172628 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.870985213 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.589824665 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773844847 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.354775273 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.566757063 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.304914382 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.314992658 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.831522264 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335964295 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.73679806 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304857649 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.286316779 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854088692 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.296861517 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.338126323 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.285756569 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.288353908 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79564635 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30481113 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.2874409 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.433538311 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303506121 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54632306 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.285005551 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.301824632 seconds)
  done (took 1096.723652792 seconds)
done (took 1286.137869806 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.28593851 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.290507298 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.272045179 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.292044993 seconds)
  done (took 26.342409702 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304123348 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.292990845 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.291818377 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.291708038 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.298478475 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.292935607 seconds)
  done (took 8.972418093 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.328388887 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.293070842 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.293781244 seconds)
  done (took 19.117938299 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.489592605 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.50135943 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.601623219 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.342079798 seconds)
  done (took 10.136915341 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295633411 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.295892737 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.292358175 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.295612447 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.297109838 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.297942868 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.298198263 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.29291822 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.300829002 seconds)
  done (took 12.870729044 seconds)
done (took 78.642696024 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.287723224 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.292582836 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.295451072 seconds)
    (4/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.883454996 seconds)
    (5/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.073845816 seconds)
    (6/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.273384804 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.404321878 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.528554408 seconds)
    (9/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.405373074 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.331711064 seconds)
    (11/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.298932879 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.317561683 seconds)
    (13/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.316298637 seconds)
    (14/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.419141609 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.280815366 seconds)
    (16/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.267913726 seconds)
    (17/286) benchmarking ("sort", Float64, true)...
    done (took 6.309513197 seconds)
    (18/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.272304357 seconds)
    (19/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.43101815 seconds)
    (20/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.318242308 seconds)
    (21/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.941681312 seconds)
    (22/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.875459018 seconds)
    (23/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.529164474 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.293344956 seconds)
    (25/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.277543352 seconds)
    (26/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.275005128 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.901709344 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.29473427 seconds)
    (29/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.37637151 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.274560359 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.28858371 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.353336076 seconds)
    (33/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.519287905 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.396685084 seconds)
    (35/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.380769302 seconds)
    (36/286) benchmarking ("sort", Int8, false)...
    done (took 4.376637556 seconds)
    (37/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.015533788 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.373034725 seconds)
    (39/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.32460459 seconds)
    (40/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.33348482 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.118361639 seconds)
    (42/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.770987527 seconds)
    (43/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.409977992 seconds)
    (44/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.479750295 seconds)
    (45/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.430885403 seconds)
    (46/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.336752924 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.307236968 seconds)
    (48/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.323245685 seconds)
    (49/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.280284746 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.408225622 seconds)
    (51/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.760117559 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.554881765 seconds)
    (53/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.31037427 seconds)
    (54/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.306740671 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.824453575 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.185589973 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.352278524 seconds)
    (58/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.622810797 seconds)
    (59/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.41670597 seconds)
    (60/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.277186558 seconds)
    (61/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.271467018 seconds)
    (62/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.282481887 seconds)
    (63/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.276668745 seconds)
    (64/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.109666851 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.300905979 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.016449895 seconds)
    (67/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.718961616 seconds)
    (68/286) benchmarking ("sort", Float64, false)...
    done (took 5.55304513 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.872677863 seconds)
    (70/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.417823717 seconds)
    (71/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.290444683 seconds)
    (72/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.291098776 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.35884215 seconds)
    (74/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.116357933 seconds)
    (75/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.323874086 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.277323 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.472614449 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.283096894 seconds)
    (79/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.301668568 seconds)
    (80/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.30783616 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.177506686 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.549317548 seconds)
    (83/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.52994872 seconds)
    (84/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.279119233 seconds)
    (85/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.278517371 seconds)
    (86/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.472590257 seconds)
    (87/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.41668812 seconds)
    (88/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.293735043 seconds)
    (89/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.526203792 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.02214908 seconds)
    (91/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.28122145 seconds)
    (92/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.42286701 seconds)
    (93/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.346782196 seconds)
    (94/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.309517608 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.996092504 seconds)
    (96/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.314742236 seconds)
    (97/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.777472039 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.316239079 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.424789827 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.327122771 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.515274457 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.135097995 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.198051731 seconds)
    (104/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.342355745 seconds)
    (105/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.376697707 seconds)
    (106/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.295305084 seconds)
    (107/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.296213205 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.726922219 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.659901617 seconds)
    (110/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.361922458 seconds)
    (111/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.279537813 seconds)
    (112/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.430340372 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.418353318 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.645789015 seconds)
    (115/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.322569639 seconds)
    (116/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.657220106 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.279407223 seconds)
    (118/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.292994948 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.815342679 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.336204514 seconds)
    (121/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.530669999 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.591488959 seconds)
    (123/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.39706558 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.44877298 seconds)
    (125/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.386341431 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.01271164 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.018133602 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.562515497 seconds)
    (129/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.477579302 seconds)
    (130/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.864403682 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.434363054 seconds)
    (132/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.080520853 seconds)
    (133/286) benchmarking ("sort", Float32, false)...
    done (took 5.28889069 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.510417763 seconds)
    (135/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.334351448 seconds)
    (136/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.386734361 seconds)
    (137/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.299853006 seconds)
    (138/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.665398165 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.285865041 seconds)
    (140/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.323304508 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04324204 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.322460555 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.328181132 seconds)
    (144/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.284086474 seconds)
    (145/286) benchmarking ("sort", Int8, true)...
    done (took 6.319659191 seconds)
    (146/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.668608279 seconds)
    (147/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.452269784 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.327250428 seconds)
    (149/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.286024874 seconds)
    (150/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.292946152 seconds)
    (151/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.304036319 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.860154423 seconds)
    (153/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.491047011 seconds)
    (154/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.306109058 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.391243834 seconds)
    (156/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.29436384 seconds)
    (157/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.659849715 seconds)
    (158/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.331325434 seconds)
    (159/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.809834166 seconds)
    (160/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.766171092 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.780455707 seconds)
    (162/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.418570383 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.328829909 seconds)
    (164/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297105393 seconds)
    (165/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.38148067 seconds)
    (166/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.284510743 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.124822556 seconds)
    (168/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.106062721 seconds)
    (169/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.371160926 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.322370392 seconds)
    (171/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.642676935 seconds)
    (172/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.641073816 seconds)
    (173/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.453214358 seconds)
    (174/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.640068915 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.329552604 seconds)
    (176/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.873821881 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.284821467 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.723993869 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.362430762 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.697672651 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.610158501 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.398821164 seconds)
    (183/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.299426796 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.363632032 seconds)
    (185/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.366889642 seconds)
    (186/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.622770155 seconds)
    (187/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.771096433 seconds)
    (188/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.285064169 seconds)
    (189/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.030756581 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.328101378 seconds)
    (191/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.284939686 seconds)
    (192/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.05427579 seconds)
    (193/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.804802854 seconds)
    (194/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.789029304 seconds)
    (195/286) benchmarking ("sort", BigInt, true)...
    done (took 6.304487495 seconds)
    (196/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.3193772 seconds)
    (197/286) benchmarking ("sort", Float32, true)...
    done (took 6.305619264 seconds)
    (198/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.38161742 seconds)
    (199/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.367640844 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.956563803 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.517153631 seconds)
    (202/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.504460569 seconds)
    (203/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.075111663 seconds)
    (204/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.294722601 seconds)
    (205/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.096505459 seconds)
    (206/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.287425833 seconds)
    (207/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.500827644 seconds)
    (208/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.336239847 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.138977315 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.339027803 seconds)
    (211/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.295626506 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.714719734 seconds)
    (213/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.444872785 seconds)
    (214/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.685321099 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.364967602 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.28359203 seconds)
    (217/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.303001768 seconds)
    (218/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.539134313 seconds)
    (219/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.289312166 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.717533823 seconds)
    (221/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.703909723 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.713834456 seconds)
    (223/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.081883859 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.29086278 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.913625046 seconds)
    (226/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.057348252 seconds)
    (227/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.514010885 seconds)
    (228/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.337746549 seconds)
    (229/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.383552311 seconds)
    (230/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.038992487 seconds)
    (231/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.349084122 seconds)
    (232/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.269882897 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.659311592 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.327977024 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.512389266 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.338558336 seconds)
    (237/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.331273676 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.290260564 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.238558303 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.349694327 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.697008922 seconds)
    (242/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.334519242 seconds)
    (243/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.585960598 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.949497725 seconds)
    (245/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.302314141 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.185996346 seconds)
    (247/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.32945456 seconds)
    (248/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.659210313 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.336811252 seconds)
    (250/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.289254087 seconds)
    (251/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.311106674 seconds)
    (252/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.030640063 seconds)
    (253/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.213787952 seconds)
    (254/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.396676403 seconds)
    (255/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.119243232 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.001356304 seconds)
    (257/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.65515731 seconds)
    (258/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.506971658 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.660769918 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.415468914 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.388555661 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.394536273 seconds)
    (263/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.123270072 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.44167388 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.130292051 seconds)
    (266/286) benchmarking ("sort", BigInt, false)...
    done (took 6.317687837 seconds)
    (267/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.342144705 seconds)
    (268/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.41514673 seconds)
    (269/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.48372807 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.63081394 seconds)
    (271/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.675013542 seconds)
    (272/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.5404077 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.294011396 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.357370021 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.326963537 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.929648742 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.393080391 seconds)
    (278/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.406174076 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.411717306 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.321043924 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.906133164 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.316148054 seconds)
    (283/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.080664566 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.344670769 seconds)
    (285/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.737713965 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.324117317 seconds)
  done (took 923.996402488 seconds)
done (took 925.201381677 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.34168245 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339492416 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.315850026 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.342911919 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.431088828 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.341596408 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.324120022 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.326629193 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.368247161 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.369990864 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.319258484 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.340518003 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.317850252 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.319774746 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.316687663 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332413838 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.310722983 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.315534194 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.336765029 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.327405352 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.336095107 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.319086966 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.369670325 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.339618571 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.323890132 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.324228061 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.324474873 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.335876445 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.42938401 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.325051236 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.323559307 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.328818244 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.314379154 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.317235461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.315911293 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.336540545 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.326316464 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.328793786 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.322854631 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.350159118 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.698134445 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.335934511 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.322269286 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.32062594 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.321581531 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.326655938 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.321417237 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.326293162 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.334230265 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335053428 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.685973559 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.348820602 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.323307475 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.318173932 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.334209278 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.320060028 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.323099498 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338403281 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.338805737 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339421243 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.313947133 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.33211671 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.3232755 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.336404373 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.327650121 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.751958528 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.340805608 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.326207509 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.710554181 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.346251982 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.748794341 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.3487634 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.327016935 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.335908367 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.354035958 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.328617872 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.321458984 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.3202727 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.329381591 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.322975264 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.330649896 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337792384 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.329528782 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.323028708 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338017911 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.345240144 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.334699134 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.325822543 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.331675441 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.340913717 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.332342884 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.336277537 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.326926646 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.318450421 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.332313061 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.32739763 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.32474148 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.326401739 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.332636441 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.337032852 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.703921756 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357097305 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.320409659 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.323824348 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.324607311 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.339363245 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.710555975 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.344513562 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.347056813 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.372844528 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.331463517 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.321518951 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.329786718 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343974509 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.333237064 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.332196757 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.320148433 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.320771836 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.726610302 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.361950245 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.330070144 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.327110021 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343683438 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.328824355 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.322962159 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.335888509 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.335934312 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.340914522 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.445885875 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.33173179 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.359845187 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.322527996 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.330783375 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.352484692 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35006306 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.355298526 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.329696905 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347754121 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.342048484 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.323735569 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.336899553 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.336870073 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.330343779 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.337234967 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.323992895 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.354041418 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338002888 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33873568 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.345321667 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.448064203 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.322847656 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.328757463 seconds)
done (took 223.310713716 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.38704882 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.324347793 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.409238212 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.323864835 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.426805009 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.428206007 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.323288821 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.31984266 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.324387945 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.709854849 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.322754817 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.327554889 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.326461873 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.323434829 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.414714004 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.322746011 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.32689375 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.665370189 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.328493258 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.396917517 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.324841014 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.324246348 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.326873616 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.711664804 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.31967185 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.323237665 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.400042681 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.330103606 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.677590427 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.319999957 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.32533212 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.67565604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.416485107 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351537355 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.340242247 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.334564195 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.429102944 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.350865897 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.410907861 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.410274903 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.415264777 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372539281 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.323596795 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.324749099 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.332099499 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.335258536 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.330480664 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.355864658 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.324866838 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.327786422 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.672503379 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.338697625 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.328591808 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.332368385 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.330267044 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.361459062 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.326468772 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.332924649 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.417610907 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.332909847 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.388547167 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.713556807 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.709537941 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.330075011 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.329966632 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.332981572 seconds)
  done (took 148.087969674 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.394177617 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.406850227 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.437834921 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.351037126 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.378561132 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.446256993 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.34807427 seconds)
  done (took 10.996920585 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.337188435 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.332223923 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377903605 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.377454264 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.332385399 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.507433895 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333439771 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.345712161 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.33350625 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.384867442 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.330256479 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.332073908 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.342433187 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.337598361 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.380503141 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.346391135 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.448409 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.334445167 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.332432439 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.477632992 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327364453 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.344069409 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.388120264 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.34434718 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.334680469 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.341353128 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.152308193 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336752464 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327801394 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.335587662 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33092716 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.408895504 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.332741729 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.33420163 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327169004 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451465446 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.335474061 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329840751 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339091074 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.334295105 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.332662045 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.334466297 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.333560391 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327767667 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.334253879 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.35520091 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.330966086 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.337368932 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.334200954 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.334545606 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.383371202 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.333801443 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.32821124 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.335059524 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.393697898 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342557899 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.335372812 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.32917768 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.333199131 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33103744 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.483641986 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.38035431 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.334622615 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.383357308 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334430007 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.336062314 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.338496963 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.337657137 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394053856 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.336369915 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.379921425 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.33481063 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.522683036 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.359286363 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339893725 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.339377248 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.334877604 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338811478 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.330069362 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.341104644 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.332578574 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.337840426 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.340393812 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331505602 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332109279 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.504899387 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441448736 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.334036069 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.353210772 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.341122489 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.334803186 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.390771244 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.337941155 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.333716565 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391162005 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455294173 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.395774119 seconds)
  done (took 153.687354512 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.34277235 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.345024893 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.340892397 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.355370518 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.336601597 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.337215215 seconds)
  done (took 9.295413572 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.341583669 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.339286413 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.341883235 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.337334226 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.336662242 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.336253654 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.341701691 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335660862 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.339611819 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.336217576 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.343462071 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.343107862 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.343676844 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.337847474 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.339405055 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.338012359 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.341378219 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.339963622 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.342668217 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343617297 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.446388311 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.339520539 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341785827 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.343754285 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.345711517 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.342249958 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349889774 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.347708581 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.339898665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.345767012 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.362500755 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.345145301 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.344047232 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.351085058 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.346638892 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.34388257 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347349897 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.343802276 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342805339 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.345678538 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.342002694 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.339216674 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.339244582 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.346539427 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.345230923 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.345763493 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.349715965 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353315562 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.342425087 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.345698314 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.343508211 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.345277852 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.344706158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.348292683 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.346371225 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365232057 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.351119513 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.346713011 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.339742549 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.344094153 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.343269318 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.347852594 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.346327295 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.348450007 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.342796771 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.348411459 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.346346119 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.348708654 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347593658 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.345530455 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.346454277 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.343672065 seconds)
  done (took 99.13633899 seconds)
done (took 422.434785247 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.633080693 seconds)
  done (took 7.876532896 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.368677259 seconds)
  done (took 7.613913725 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.295343995 seconds)
  done (took 21.55062628 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.422695453 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.468636751 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.355598979 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.339740362 seconds)
  done (took 26.830875424 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.532621901 seconds)
  done (took 7.777720844 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.349827399 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.338120385 seconds)
  done (took 13.933726483 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.850934367 seconds)
  done (took 8.093919167 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.051226462 seconds)
  done (took 8.301962831 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.337392232 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.352058789 seconds)
  done (took 14.198440896 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.319440287 seconds)
  done (took 7.564984229 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.638907646 seconds)
  done (took 11.88512937 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.347396825 seconds)
  done (took 7.594495156 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.413640943 seconds)
  done (took 7.660714725 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.120279755 seconds)
  done (took 9.366142033 seconds)
done (took 161.494211121 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.341141614 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.336059244 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.33913078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.333904116 seconds)
  done (took 26.59440652 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.380256185 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.381863603 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398290021 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.392280406 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.38202905 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.38240258 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.373836256 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.372552188 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.395159929 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.38638018 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.383131651 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.382883986 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.381499656 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374923618 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.38534282 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.390322281 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.394126816 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.393382056 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.373726558 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.385730348 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.352259841 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.395956396 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.384893477 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.349561162 seconds)
  done (took 34.419290911 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.868874759 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.419638019 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.505765618 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.401590375 seconds)
  done (took 7.442027776 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.40048707 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.403965699 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.41314394 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.455046528 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.480734784 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.410147502 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.378414871 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.370929814 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.358665152 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.405448388 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.480201652 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.418887182 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.484881464 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.352235817 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.539539737 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.352569814 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.350785845 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40296816 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.45513713 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.48278083 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.353103537 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.401836183 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.406462739 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.419042766 seconds)
  done (took 35.224026352 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.35027105 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.370928715 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.350514176 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.348964914 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358324534 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.349990973 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.350707463 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.351511755 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.351825319 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.354114593 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.350954532 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.363888564 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.352253447 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.350795006 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.35848555 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.348302029 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.355442288 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.350192291 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.351359677 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.358878755 seconds)
  done (took 28.326313898 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.346539323 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.280091152 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.697865909 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.6006891 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.347020477 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.346983678 seconds)
  done (took 28.870143549 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.416886751 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.566933919 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.352815758 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.69265783 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.788881754 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.368730535 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.35408687 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.587761702 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.889172947 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.875681012 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.408323719 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.419804399 seconds)
  done (took 19.972187441 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.345946338 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.347127323 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.352855164 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.363774578 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.407404434 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.372395445 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.361489314 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.347067805 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407662025 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.424773119 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.37239273 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.406052606 seconds)
  done (took 37.760765292 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435025749 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391362219 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.247755855 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374072556 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083811416 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5549602 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418227156 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.082455651 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.36975547 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625895122 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348975481 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441259204 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.603590812 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356223052 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352036232 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.297116164 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591533354 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81337097 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351418695 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.241981131 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374637607 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360380207 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.312603143 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571970016 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57504798 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.327072268 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.613298729 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.126079952 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623327398 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363744865 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36084699 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352398699 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625247811 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990015549 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4647244 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554536805 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367276994 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.973440222 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.341663301 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.25136725 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358975413 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352893762 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362807584 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349658106 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.285893133 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357156079 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077157155 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.375795643 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.063929621 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353591591 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597981286 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448595574 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.354957192 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.920572885 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397449011 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.356142904 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.356014642 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443260741 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942912111 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.476810246 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363196941 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.280917073 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354179165 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.225367973 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971502499 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.368242102 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357299522 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357528755 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287627472 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.223907982 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368727632 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499748729 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.372027499 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003646835 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029263581 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.375272483 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283878264 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881220614 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35410283 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.288585245 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582767043 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125458304 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289304646 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.299043286 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288007158 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028546702 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364187407 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.847811157 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374918728 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090193767 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577363608 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388191441 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376438246 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577467354 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.233866995 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354859725 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.350688025 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483191418 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371205956 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07314579 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306985972 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.351608949 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612134545 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.567056651 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358423436 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.288626105 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844622953 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388179249 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.369692151 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.355500926 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559244539 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.935960057 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388556478 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.495054619 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376178352 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.133059172 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068278029 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358105686 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.376078369 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36743519 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620751849 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.083434732 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.517692587 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42517179 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360085324 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35742027 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28073589 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206361156 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.23898664 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.546991676 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382963092 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.368240881 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.359104635 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311074203 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.348120527 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371497656 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.13685392 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.581382788 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354242934 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634278832 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291884061 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506535797 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360541433 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.572729703 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.516247406 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.370970355 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618373276 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359815166 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367166964 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36866287 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375867946 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459212795 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38011534 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.372853815 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614348366 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.358770175 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.363855889 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.416534126 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.137774376 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363787836 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.363056889 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367426325 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928052965 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353373566 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361477402 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249523685 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.370734778 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428483418 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365984656 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565677675 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.523114928 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377768868 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.357986342 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.361100653 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583159084 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368770959 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.257178283 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438998663 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.831261499 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.942815126 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389756362 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.295341657 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.071770677 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.053127015 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362838807 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.555040159 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361802078 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565805293 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391439469 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379593291 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.931349178 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378463735 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.270357861 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.36742604 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369695849 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.365825815 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361882169 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.522976838 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.53025514 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374823594 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.372676449 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503856941 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.377494319 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.297624359 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881425672 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368903184 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363301667 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.137665114 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396953593 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.264167976 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234673919 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632997377 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374504389 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611272669 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.353961088 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.394733752 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.37397965 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375077424 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365510985 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.377191192 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364175931 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.37580779 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.281624528 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.801805414 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925275757 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083357768 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900839757 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674975682 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.378266053 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.260256572 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.091558738 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316120255 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.020412274 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597908801 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105205451 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327448437 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834576302 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.549648714 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11385706 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615191836 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593138318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657836977 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.391423616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617386091 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577489463 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39993609 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.370528498 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295079427 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.639820697 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932342653 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388713422 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4473087 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095912933 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399086165 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.156380241 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.437573932 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.02312065 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761077938 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.926627356 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.751988684 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360872309 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366832405 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207194342 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378552383 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.891700713 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974945239 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377406705 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.838330041 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318704118 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.57272747 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.394988346 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.364126251 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.861413424 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.36095773 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.62091725 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616820066 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301934276 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374390279 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886083933 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.236055755 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.373262495 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370960429 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088148062 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382158791 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644333334 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.378030556 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.540092038 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386398967 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30291835 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303453265 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.06231128 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371588798 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344072471 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843223883 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.370881638 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389590811 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369718326 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22865378 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625603993 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.383970452 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936502784 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609413905 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381926413 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38497631 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.372083416 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374488434 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.352470558 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.270162394 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605479607 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451664037 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592553658 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.29079332 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.270797339 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.430916967 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598829337 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.247868228 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373363115 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60781245 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.098612074 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.378580942 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072952731 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410289379 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.800521077 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382662605 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369178899 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392235202 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45904429 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579370467 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.397137234 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382505326 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765660401 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397271568 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375014166 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.385141026 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465641962 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.542388547 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.548330179 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.145435213 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94144309 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105449362 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.962458377 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637670726 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37424478 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374778861 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304917533 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513199477 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899107171 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646657418 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502390478 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.36453606 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404206208 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383213658 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385505102 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585432768 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647439696 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.24063376 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37396651 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046397423 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.253215801 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383227606 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.5859811 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857756271 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933083474 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482881986 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385884003 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102981797 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66519863 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.46348115 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374638927 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96537502 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.388425904 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.044096206 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.38056637 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390001191 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523506088 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623202156 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023501342 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.401723031 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.53046139 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.147204139 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316053383 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629826487 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.821636091 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583789492 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964555994 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073802352 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638731492 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446016623 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584640355 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.495415481 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522734458 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.385435234 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257389996 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376339777 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264504827 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.088140178 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.385166817 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952911634 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653694679 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.378898589 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.388261191 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397216799 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.385322538 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599352923 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056718427 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603175806 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385489102 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378913935 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.368117462 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951152934 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645623594 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311960401 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.374624769 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610252404 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629931336 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401082902 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.830739839 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.087338462 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922801096 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.350202924 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398429057 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38012323 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.062380606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956287453 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.580511245 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865763466 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.036263957 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388885789 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649954582 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.383932469 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391652567 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653880543 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.381581562 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376158561 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588589273 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.968486338 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141495697 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.396863566 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.35147882 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.317058135 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.606063798 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474496208 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315684915 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369307892 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.784957273 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399579589 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509497589 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38419833 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.379980795 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380724583 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.130418484 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652918007 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.378098019 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.361021397 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.366272267 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385540675 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471551341 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954663686 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403606584 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.054381333 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.729709448 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634505338 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380769226 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.360147883 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.383419189 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379204445 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098356086 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.343477009 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376809074 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931815204 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.390224075 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.393779415 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381678207 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.597880205 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595113743 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388631066 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591817717 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398448767 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395197046 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.280452323 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.148568882 seconds)
  done (took 1669.208864869 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429888961 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.387970218 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.420686069 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.439228097 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421851949 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.424236205 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.474927263 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463566371 seconds)
  done (took 52.74482401 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.393663815 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.536505304 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.412072674 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.389296928 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.391561922 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.389056693 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.834503686 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.398823479 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.388708971 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.390829626 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.399151346 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.386272118 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.030612797 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.391661259 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.388045449 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.376182051 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.391982617 seconds)
  done (took 66.177046397 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.407017636 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.712761111 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.03244859 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.382997388 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.378314743 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.383074233 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.853548847 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.39739889 seconds)
  done (took 58.833375505 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.399537189 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.400693064 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.401518443 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.403069416 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.401983523 seconds)
  done (took 8.290640894 seconds)
done (took 2075.11249859 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.388672155 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.390202963 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.388699888 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.391243132 seconds)
  done (took 6.842094575 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.365729957 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.055970972 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.365500033 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.379528452 seconds)
  done (took 18.450789226 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.396108831 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.400326322 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.058628733 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.005395806 seconds)
  done (took 5.351018867 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.13681793 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.14987266 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.131725498 seconds)
  done (took 7.704165212 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.384307589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.386702339 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.386852105 seconds)
  done (took 20.440810015 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.679147987 seconds)
  done (took 2.966016405 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.534033428 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.581862665 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.702414327 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.720726218 seconds)
  done (took 7.825672991 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.769398035 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.766480827 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.577932781 seconds)
  done (took 6.400042185 seconds)
done (took 90.062809209 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.106362394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.379274319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.585659548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.115283514 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.605762516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.5892829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.596969043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.085351565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.625605034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.578983649 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.074013243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.603902729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.544789267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.384603723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.54596506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.760998008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.698662484 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.13556767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.760206009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.959660355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.596152678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.70668904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.904553906 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.765962328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.649425656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.538702907 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.301217258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.748880613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.928425793 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.355433247 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.544631115 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.133198258 seconds)
  done (took 190.197384255 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.385936936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.379694483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.396261963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.397653298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.39531968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.379311768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39750951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.398628589 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.379699586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.382218872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.379310964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.38663904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.381059955 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.394614656 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.401696519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.381945832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.396355501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.378933423 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.400289674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.379960089 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.399059499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.39673353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.394262574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.381016095 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.380194887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.380498589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.385458013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.393301382 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.381496786 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.395091036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.398174818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.381982453 seconds)
  done (took 205.730138732 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.391977756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.384039388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.38433269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.404443262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.387686546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.387925031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.400622359 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.383407083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.381632087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.387420466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.38310376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.390378608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.38241827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.384260461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.382682545 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.383577517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39554888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.39026403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.382107222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.409874195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.386477725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.383214357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.383020259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.383488418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.390031217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.399753438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.409724805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.38276797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400520551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.402327179 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.391719289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.407836666 seconds)
  done (took 205.788001051 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612121399 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.39772903 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.398456559 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.352091856 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.399180874 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.397167317 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.393822645 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.589285445 seconds)
  done (took 14.831296576 seconds)
done (took 617.834661768 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.624464044 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.351140226 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.597253026 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.420214054 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.166006076 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.438418654 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.420488963 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.585968145 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.332461849 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.592341188 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.660330781 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.432035632 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.807986854 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.417712111 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.672317579 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.518156473 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.263901178 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.384057443 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.724410831 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.927690421 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.676144201 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.876782662 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.602240529 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.311979558 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.819448055 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.875776998 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.101033009 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.254750436 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.436934471 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.734631792 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.01491098 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.352234779 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.481887444 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.476413938 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.529333565 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.512876497 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.327466515 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.47502724 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.617301478 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.648406883 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.934435462 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.149295685 seconds)
  done (took 93.839026424 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.383468707 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.382344176 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.380759278 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.385859449 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.385785335 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.384092884 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.383059687 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.383586372 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.383436859 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.385561572 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.384753219 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.383111465 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.382677244 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.380052653 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.381494078 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.383537897 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.384274642 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.385449226 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.384038529 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.38367493 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.383885332 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.384698934 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.385301867 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.384954515 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.385867749 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.384658781 seconds)
  done (took 37.27725556 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.400079223 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.648386301 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.804243163 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.409020481 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.402024423 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.40565421 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.480561715 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.404780517 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.406036818 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.407603383 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.571903812 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.404262305 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438295426 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.833423357 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.408239873 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.404386229 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.404176255 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.404102097 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.659682242 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.413722663 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.496177949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.402820948 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.48168692 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.414093452 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.427518167 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.404917369 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.406243525 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.969059985 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.421953861 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.575580985 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.175380523 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.478149452 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.906577025 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.835249564 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.176976148 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.40778759 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.408021257 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.576662849 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.409376906 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.406148906 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.480815642 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.40749563 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.81918255 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.055748753 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.423766273 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.406611005 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.988495859 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.595628605 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.643955116 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41574359 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.841595941 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.411566609 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.40809378 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.409227321 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.641942574 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.417259209 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.409114446 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.966949123 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.430188054 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.483715158 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.408122371 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.407733322 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.666640678 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.405937354 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.653032681 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.408677214 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.417635257 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.423201314 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.822479949 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.409548875 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.08064432 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.425743273 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.409437769 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.576010294 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.656902214 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.016306992 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.427987617 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.676403775 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926064749 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.498172502 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.411644403 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.957476817 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.502515309 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.41063853 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.412973225 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.412171369 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.410842559 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.462121462 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.477850552 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.017306898 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.090528134 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.995086763 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.503865333 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.422681549 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.411462749 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.968639006 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.429145527 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.409599999 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.813338686 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.073647529 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.428575741 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.417822612 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.082378908 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.430716282 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.486647904 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.416034165 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.829033812 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.412227 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.460161098 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.409391964 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.415849483 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.432121096 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.486905838 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.415252747 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.410932622 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.059269682 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.607453027 seconds)
  done (took 184.960062735 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.405052476 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.414295125 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.410476233 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.397383997 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.402566428 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.412747128 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.405554867 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.406153773 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.406573848 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.40161266 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.40696583 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.405495823 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.405700377 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.405882393 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.408103553 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.412876355 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.059676719 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.405414153 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.400625468 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.397764624 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.194787704 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.404733297 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.401676616 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.415947191 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.402651764 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.405339626 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.40869482 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.417736127 seconds)
  done (took 154.126934292 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.408398636 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.962984364 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.430226435 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.534852865 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.431314922 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.410089001 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.537561239 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.466712014 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.429093581 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.405474689 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.410675448 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.704718935 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.405829462 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.91529783 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.593960154 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.555950273 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.912802023 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.421675754 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.41152942 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.409388064 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.540946062 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.416640863 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.708074177 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.955447815 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.423922788 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.966623138 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.398348952 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.416029481 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.413610311 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.966293539 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.429999975 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.711632919 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.489580095 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.473877723 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.985134304 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.936441537 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.934780598 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.560054394 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.408574 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.412246789 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.409648901 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.39804043 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.968961065 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.432499508 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.415657677 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.957806562 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.434307327 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.417457899 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.420957715 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.411830593 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.473580121 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.490092002 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.730465058 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.97400479 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.505841113 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.427316234 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.542454911 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.778376264 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.418758014 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.917701589 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.398662284 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.975201691 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.433912865 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.398845854 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.416820472 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.42084842 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.559531755 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.541897091 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.920107434 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.4340857 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.921225706 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.576370256 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.414367908 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.416035251 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.418523504 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.972594584 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.938367541 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.576840444 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.545593418 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.596347523 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.40062657 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.418023337 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.399449206 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.492825909 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.41972946 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.975347365 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.939104352 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.431263551 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.4181634 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.418477767 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.41807705 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.585025058 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.991916216 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.508643164 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.911779213 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.734424145 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.719227965 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.415264519 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.475337367 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.431281146 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.720046759 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.420678147 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.472897273 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.844138549 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.71096566 seconds)
  done (took 167.691016899 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.653646999 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.572785445 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.505955856 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.564483967 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.015348234 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.973119684 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.68636958 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.549929745 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.52647834 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.671158678 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.545675614 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.511868487 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.630841337 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.494327427 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.160865044 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.492011182 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.52575281 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.562294453 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.568099695 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.408716922 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.093259964 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.711614646 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.604964151 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.311336695 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.512173422 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.191104487 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.9762227 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.966716253 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.586421141 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.70372956 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.936640067 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.514526926 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.364042305 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.115530383 seconds)
  done (took 67.521673379 seconds)
done (took 706.712434679 seconds)
SAVING RESULT...
DONE!
