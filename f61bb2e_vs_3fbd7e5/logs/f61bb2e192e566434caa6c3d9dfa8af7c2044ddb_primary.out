cset: moving following pidspec: 14233
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.31690476 seconds)
loading group "string"... done (took 0.591553351 seconds)
loading group "linalg"... done (took 7.237141783 seconds)
loading group "parallel"... done (took 0.16590876 seconds)
loading group "find"... done (took 1.128697416 seconds)
loading group "tuple"... done (took 2.014768194 seconds)
loading group "dates"... done (took 1.289967572 seconds)
loading group "micro"... done (took 0.241393267 seconds)
loading group "io"... done (took 0.974773178 seconds)
loading group "scalar"... done (took 39.508469714 seconds)
loading group "sparse"... done (took 12.515322224 seconds)
loading group "broadcast"... done (took 0.974829417 seconds)
loading group "union"... done (took 13.179769859 seconds)
loading group "simd"... done (took 4.506603008 seconds)
loading group "random"... done (took 9.056408118 seconds)
loading group "problem"... done (took 1.940970506 seconds)
loading group "array"... done (took 21.391171658 seconds)
loading group "misc"... done (took 1.948807056 seconds)
loading group "sort"... done (took 3.249196479 seconds)
loading group "collection"... done (took 18.296124617 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537167204 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14263007 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125633822 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140080355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185293852 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132905409 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145348392 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086465572 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.093602382 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168101417 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14072835 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.496641539 seconds)
done (took 5.157581277 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.212524038 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089248416 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097318643 seconds)
  done (took 0.902859108 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066884537 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130726891 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081367884 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069156626 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067892447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081701945 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068380255 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06653967 seconds)
  done (took 1.28940464 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076428102 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06996088 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085221381 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069178717 seconds)
  done (took 1.023341616 seconds)
done (took 4.219422094 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.905500276 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236950373 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190133219 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459092431 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.145901193 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191821228 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671574308 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.352856795 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213592381 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103011033 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105602093 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391090382 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107529687 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672993292 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076474867 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106597791 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159148444 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.46678344 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081660037 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083591522 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104472673 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142429453 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10221008 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07777419 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16883913 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071178144 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147711417 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096295049 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069391541 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.251473931 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191730789 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695077017 seconds)
  done (took 10.60367842 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104404102 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121731456 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070028562 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144143933 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120968674 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072610302 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075714276 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084167744 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095937746 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163067624 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119440217 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10894796 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082719822 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071752475 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10202657 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214518175 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107695915 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085684801 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088339248 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079846949 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127347806 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083429906 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.099291565 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081792046 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153657262 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195610252 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111010806 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112671896 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06960506 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101338049 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13010679 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132258342 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06665201 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08382968 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158165541 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096879281 seconds)
  done (took 4.650780681 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.071623038 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161356621 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09247792 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152598753 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086725248 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110649831 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084217295 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100399751 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247353777 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.09426639 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.484011708 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113195726 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.1025457 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069122415 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086130452 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068677592 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.525154872 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147970635 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121445039 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085871886 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090743108 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071859924 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37710101 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071515471 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068658105 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088197095 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062889264 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147395334 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06951884 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.231180967 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090109827 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089742756 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119397916 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179293806 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095600274 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122492717 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082267072 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067616538 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172452672 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074493532 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083739352 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089440473 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121389487 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120979826 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06963652 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083094913 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183327514 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067215224 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100808737 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.882658356 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167712376 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096769362 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.087531444 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275114278 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104134363 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066864333 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082566664 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249632323 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.16928719 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070860332 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068861302 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084893702 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069578639 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368518641 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083879923 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.701997497 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072658477 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07913881 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088325674 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069854859 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091461879 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073460877 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081959114 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086692905 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067023497 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085665033 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066614185 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083238955 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070684433 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100518927 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20311628 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068794681 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067685345 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082787521 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086241803 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113449833 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108108106 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067421359 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06865288 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117506621 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069666182 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084680473 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103249849 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085786198 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100619073 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070920892 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129530188 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067728805 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170021498 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074639627 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066384206 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083040316 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100284202 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088163995 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115513402 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080364444 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084149169 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154668318 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066624662 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06580106 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08724566 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06790834 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087134053 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072111177 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098799012 seconds)
  done (took 21.106469321 seconds)
done (took 38.155552605 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292338244 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093448079 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092537819 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076069049 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092643503 seconds)
  done (took 1.443464776 seconds)
done (took 2.21291677 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120247818 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117593263 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064621327 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113001044 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064954654 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117466021 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114710153 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08108267 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119083782 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065171404 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112153538 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06527266 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064636313 seconds)
  done (took 2.017168956 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084522877 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085262533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086149485 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082843494 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080248012 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084104597 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081516234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105690344 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081388278 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089032782 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06505966 seconds)
  done (took 1.689486137 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084769395 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086101877 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087476161 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081776356 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079539895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082802363 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080888072 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103380865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081501373 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090495686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064560955 seconds)
  done (took 1.690554863 seconds)
done (took 6.15608357 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081478685 seconds)
  done (took 0.844781436 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.695998991 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.527648066 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084187436 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134003032 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221016656 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.152945722 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.433253581 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110062476 seconds)
  done (took 10.30708646 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105574558 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090671467 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070455119 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086476399 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071272779 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087502614 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072364787 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073639559 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085100644 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069525624 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087314522 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070348413 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088276348 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069510369 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071015094 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088320034 seconds)
  done (took 2.120858486 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095248003 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093219319 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091930821 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077148232 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090485388 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074305621 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092879478 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075664862 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087954584 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074433072 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092246849 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075735927 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088728836 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067718341 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091506123 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077885066 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088582116 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076454789 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091929624 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077936901 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092077369 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066453369 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088746439 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076251412 seconds)
  done (took 2.879996492 seconds)
done (took 16.921364446 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13258067 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076948025 seconds)
  done (took 0.976030121 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084149875 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09859396 seconds)
  done (took 0.96000392 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084985551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082060323 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090146232 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094640803 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083079147 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067571995 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.1030842 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068106225 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082981188 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067655937 seconds)
  done (took 1.601722168 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070639679 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094126876 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071908638 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097458499 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075269289 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081700709 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074863035 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085294488 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078615769 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080099551 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07253261 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099523223 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073427207 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102188864 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074464911 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085012979 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088081369 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068714509 seconds)
  done (took 2.252842322 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06796795 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068686052 seconds)
  done (took 0.916322171 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069977179 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064819497 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082648451 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068021443 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080204391 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064213864 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080762272 seconds)
  done (took 1.289441402 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.3989345 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109533555 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259613851 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072357231 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105135433 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260801885 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08374252 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072658741 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089064766 seconds)
  done (took 2.268173253 seconds)
done (took 11.040792827 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082280951 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089863209 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113801612 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.423040646 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105951299 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068152323 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144834298 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.204744212 seconds)
done (took 2.013737652 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128118403 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619896644 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400763891 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211942425 seconds)
  done (took 2.017762343 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.383796358 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094682387 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07659496 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070016523 seconds)
  done (took 1.412669534 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069116663 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07319285 seconds)
  done (took 0.928651294 seconds)
done (took 5.27324574 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069768664 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.106714274 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066605134 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069334628 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.084756061 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068870254 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066998901 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08489754 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069280982 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068785334 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084755795 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071766719 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083546718 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065891685 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065185219 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082924684 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065426435 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065464691 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080652741 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067335588 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067843513 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08024553 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06541176 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08060713 seconds)
  done (took 2.606925451 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088828199 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086172946 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074808294 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090748759 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072518865 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090316832 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073871258 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067999158 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090057953 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070520211 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087143804 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071899991 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084816671 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071727277 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085550415 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071624108 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091144368 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068306504 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070291961 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086899371 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073178174 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083355343 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071942828 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088876503 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071920944 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086631152 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070377406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084234641 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07371974 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087814021 seconds)
  done (took 3.174097809 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074086187 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066887211 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0841818 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073877861 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066027289 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082889779 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065489167 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081574005 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06668971 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065185555 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083063903 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065156421 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065596449 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082217703 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066747845 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085532864 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081998617 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066403177 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081783806 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066536055 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068776043 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082429624 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06597994 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081581783 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06513849 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064871964 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081272061 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065165025 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066024583 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081032572 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068672104 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085057126 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065027934 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072179523 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085093336 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064949277 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069655798 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081339248 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066005773 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064930953 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081091571 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066758444 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080730653 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072136882 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066459395 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083493777 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066462802 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06704983 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082126775 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068602952 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081818009 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06516403 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067962345 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082667643 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070596182 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066207644 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082456829 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065551166 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082466392 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06597531 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065951197 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081617257 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068923799 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066934858 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096682223 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073000553 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081937101 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067427677 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066467671 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083958312 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067454641 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095350902 seconds)
  done (took 6.088866894 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.12148924 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095606331 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086618326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069622471 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082938702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067250442 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072083762 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084276194 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069540484 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089932005 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067389024 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068567552 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085010867 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079606133 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084269624 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068656861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08840875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064623481 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066400939 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086225527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066835173 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087120288 seconds)
  done (took 2.547052002 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190452136 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091722251 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112965952 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092775916 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086904792 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076169887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08896871 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074075724 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074142716 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089967433 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072123493 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090350833 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071521611 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088160024 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072559247 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089453412 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074103097 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088689366 seconds)
  done (took 2.421737284 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081610143 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069722154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.1104639 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070067037 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08707246 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07331318 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09195523 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077520338 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087326492 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068339992 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092667545 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070660284 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085904918 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067910601 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070987163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083703223 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07070153 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083677505 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076481279 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088760769 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073330495 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092296108 seconds)
  done (took 2.57248099 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084595637 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07179781 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104376962 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088742504 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065779209 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06815948 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092409183 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06864322 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090057767 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069661448 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068277403 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082200335 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073270844 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083452406 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073251783 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084101038 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069738087 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068241467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085175037 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064306286 seconds)
  done (took 2.354891327 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090363269 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087427601 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070385165 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0944208 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069655151 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085515626 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07717997 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08504347 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069776171 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10889775 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07008159 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085809573 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077337752 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.199617783 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069573139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0923785 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07747617 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092983175 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069233679 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085118144 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109735516 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069136618 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093249155 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069436963 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084910766 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069306155 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069925624 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090349965 seconds)
  done (took 3.217897494 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070085841 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070075023 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08419907 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.0673401 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067235499 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084190969 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066192207 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066256036 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084977079 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066166624 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067755054 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08468259 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068139771 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084425349 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067761168 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068309274 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084188968 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065674267 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066361968 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08188503 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068626935 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068098642 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083862562 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0658399 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08189849 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067125231 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065539254 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081764236 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06800483 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066513737 seconds)
  done (took 2.985891225 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080194269 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094193941 seconds)
  done (took 0.981487423 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067291921 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084954363 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084003479 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072746515 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089883119 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069760242 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092604711 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072401064 seconds)
  done (took 1.437744092 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08504961 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080777393 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087427865 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079403765 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095213091 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084932882 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154924891 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085924872 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074395154 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083033825 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081122831 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067024984 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090364589 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068296243 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090641029 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074227959 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066333038 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089374334 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071331765 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083460617 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070210514 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092841112 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070190702 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064736187 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085136176 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077844333 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095755795 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069225213 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088226527 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074987448 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090012903 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062374135 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06907079 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084692401 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066073684 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094553002 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08260238 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087081984 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076957117 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068731939 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095383774 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063090351 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088469714 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074461961 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094246629 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069371628 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085625308 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063441556 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06673645 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086334822 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064331115 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067698841 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079276165 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074864087 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088132181 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078016656 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086054155 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070310718 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071174603 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087631749 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075071334 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086242561 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070763422 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068210993 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094144105 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072152992 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093182079 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063953673 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078810085 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066462898 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07758142 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106316071 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074373646 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085247381 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070288107 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082345146 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07073357 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069280467 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089598067 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074546933 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084667787 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074163888 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091375982 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06866732 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08684966 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075957199 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066871301 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087077647 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066302726 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100739269 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068030072 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083202839 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066522368 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078171284 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087700188 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068701052 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082305429 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075013932 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062914579 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085217807 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069744288 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084541822 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078130457 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090004743 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073667743 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093623532 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076204573 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067910442 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087860881 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066014933 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08562666 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067462131 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074361176 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079514247 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070557808 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085158863 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068894475 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093196251 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066261755 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068437895 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092206916 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073657132 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083254273 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065525456 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070578739 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084420529 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071662922 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091918514 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067299134 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080708815 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06373407 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071551296 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08482043 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071951699 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089494288 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071421043 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063639239 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082805119 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072589628 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093250936 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068749862 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085355034 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073899314 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069522457 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085073086 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074353965 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087095291 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0674226 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090433187 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068592078 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064019065 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088403469 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071482434 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083659584 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071821233 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071060407 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086784327 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069537174 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083652522 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073447678 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085909832 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066916191 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068185679 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083514939 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078164442 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086444568 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063753272 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06563671 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091449172 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066490015 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084840345 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067099071 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069840088 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085237555 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066830605 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084531218 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069436539 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095323219 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072381588 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069496323 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089865261 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078542119 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084505277 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070215655 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084832205 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069115726 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069429957 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093466873 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073757369 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089491653 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071343592 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081654702 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073671286 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074822698 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084187443 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066852065 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084391846 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071812862 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073194153 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088999979 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069144181 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08356253 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068326004 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088315581 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071571629 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069005217 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08604389 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074905978 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086412033 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076485816 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088540097 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079832342 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089764266 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065410735 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07345998 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086574268 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075727062 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082334879 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067646224 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069144118 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088708621 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069142709 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072011155 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082826323 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077396031 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094620901 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069967146 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085899357 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069784155 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07633444 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088196439 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073434424 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090306622 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07614263 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097752477 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069374966 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073906296 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097378752 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070780984 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081777664 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075168013 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068507664 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086875519 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069371319 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085479087 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072914778 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09565168 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076651735 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06407419 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089674953 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069401945 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086084718 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065695269 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074465162 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09041244 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070392556 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09386106 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07162682 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070437857 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091085468 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070671853 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088272391 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071537458 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089749054 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07094582 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072761224 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086792228 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07290451 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08560474 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068277651 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072293097 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087682692 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070407954 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092829526 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0697791 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070554201 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089730765 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071167804 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088090366 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070655798 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069241652 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090471932 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071014494 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087523625 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072595356 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065528411 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094960472 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070623439 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095465694 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070897528 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06715791 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.093523799 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07300282 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.092621997 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071127329 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088546676 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072027286 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07007864 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090379675 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077322373 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084454143 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078933773 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092704883 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068759353 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070280238 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08592426 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069267108 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08374444 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069127813 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069672338 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085221496 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068882307 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089450989 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070584762 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068090451 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086887133 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069559651 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085180146 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06986163 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063175072 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084506028 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06864633 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068747006 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096490316 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069002639 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08670851 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068559255 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088376425 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068740015 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066710246 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094823977 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078203888 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088595648 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077240232 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087112241 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071322839 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097833631 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064874982 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067726333 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085620744 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068614185 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094559255 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069992872 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077381966 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085457913 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067909346 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084373226 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070033725 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067049443 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082943569 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06761017 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090114968 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068731112 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067820962 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087815413 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072226781 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088676653 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078743722 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084880562 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069540944 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069014807 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084173619 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068465267 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068972807 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090658696 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070792909 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085189651 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068240861 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070140316 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088370176 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071274215 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087514245 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07131253 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076089239 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087780378 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072631599 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090972915 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068231935 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072089229 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088156016 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069556874 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086868914 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073754125 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090581053 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071119822 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078263865 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088091349 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071728198 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088049469 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068320585 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069786014 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088187173 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07063656 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087293617 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071321401 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076827935 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085300546 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073470423 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087079781 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069541271 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092488501 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069595608 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070687729 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092373512 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069156017 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08660542 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076427766 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089160808 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071420831 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069233954 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086598247 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074147033 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084969649 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074531765 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067575262 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088049224 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071911577 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086530049 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07035004 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069477262 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087005996 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07602618 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088579324 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069725523 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068706362 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085769705 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071183204 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091251482 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078081286 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089726446 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072665106 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065760176 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08617128 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071429373 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067607841 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090251156 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07299403 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093437347 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072702086 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087632848 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069843897 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078994255 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09432625 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073641668 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086311281 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073437215 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07102007 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090692267 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070769872 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087759228 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072103632 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091185515 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071469568 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068971077 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094770479 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073128327 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088730695 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071522248 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070103521 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088340562 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065738629 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088926513 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071691762 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074931016 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089566832 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070076927 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098946962 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068046256 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06965586 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091892309 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070082137 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092147618 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065802496 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08865968 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071191278 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070726748 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083769773 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069648456 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085092762 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071996409 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070005708 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083354261 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080696552 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096516954 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073042788 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068664583 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088001177 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066049874 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082858145 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070245796 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07045174 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089721424 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079014606 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086354185 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069080637 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065317388 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08874643 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072911086 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091182171 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068106699 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064620805 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087097855 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073279571 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09389246 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068669542 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070096881 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092050503 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072241902 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085956796 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073677503 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066232903 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092411828 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082114866 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088833842 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070284528 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094198402 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077962905 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088979093 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065808337 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07089742 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091110892 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070740112 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089199392 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071415415 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103126263 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073152486 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068611562 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08762157 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073311083 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087363062 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078313066 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070904998 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.090604955 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074193241 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089719437 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079177083 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091209993 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077058635 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090418751 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072554731 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06733738 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087473903 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067571182 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086559342 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071154509 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070668116 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093129754 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077114125 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087625369 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081375077 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09754334 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072409938 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066725575 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088596055 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069913004 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083954477 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071270299 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068215585 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08756006 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068633401 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087482155 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071078254 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075503344 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08914138 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072024779 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088773275 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064700405 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071768843 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090749263 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071239009 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084171103 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070775693 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070849108 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091458668 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073753121 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08593879 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071873581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071982921 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088889511 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065797773 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094946127 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069912064 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072540833 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087496404 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071188196 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089502304 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074421703 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074700926 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089669692 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071777625 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096516016 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072997813 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085294381 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067766199 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075428229 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086063365 seconds)
  done (took 47.611918755 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111399235 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086103513 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065958517 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084228358 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077211762 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086208054 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065452606 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06633074 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085528335 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069463038 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083557216 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065864322 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092671594 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08956525 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096401032 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088443415 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065953346 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06665666 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083949735 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067405475 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092722987 seconds)
  done (took 2.542536568 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078267301 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.093187923 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077100295 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098862346 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071248774 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093966699 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076854784 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093572342 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098429844 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071367398 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098282527 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074801726 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089130826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071961885 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089310381 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074594627 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098652613 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071720291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093321342 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077374625 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093183158 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077494495 seconds)
  done (took 2.71303908 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070999521 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069595865 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089541378 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065175631 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068890842 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083884087 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.083517825 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086121349 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073683496 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067891496 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08712434 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.0687588 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089397427 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065162683 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069415559 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086357358 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135873912 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073812671 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069394145 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090608646 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065498331 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090027223 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066055675 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065460336 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.087421558 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07443691 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08899568 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068030579 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069314746 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.087180602 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070513842 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08581021 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070763647 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069772354 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086910701 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068523198 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069387171 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088463996 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06542187 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086106942 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070009635 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066217571 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088985195 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07053486 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085865397 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067316607 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070412931 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088185348 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065246544 seconds)
  done (took 4.647888077 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087132627 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.134555956 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091285431 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092727052 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105572688 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097120554 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073440023 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114619594 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06694666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088235901 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085693692 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107323248 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088867762 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074795063 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094599532 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069817727 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088951638 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068990471 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073334836 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088874875 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073672348 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095933015 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103402354 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083144352 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091704509 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06905297 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087973217 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074159131 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101162101 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073705314 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093103295 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076659786 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.104262881 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0715919 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088230975 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071066065 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105121062 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069281983 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091825269 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067931925 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09034572 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074435615 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094397378 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08651779 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0893178 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074804234 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088179201 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066842821 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101341815 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072492088 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096883053 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103164973 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074166803 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087990116 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073961435 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104191536 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070583874 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086915899 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07297097 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10062764 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067649014 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09215504 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084492857 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089717746 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077268775 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104186106 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074298846 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092163062 seconds)
  done (took 6.866562782 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079296446 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095098682 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083682564 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104530012 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095430287 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077106451 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094947693 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076830678 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09468546 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081794175 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095376771 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116652745 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072448507 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097103302 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076872863 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095908166 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076322542 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096154544 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095047231 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077806494 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095419191 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084968163 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096204548 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103344275 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106433135 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090615475 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077127214 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095778358 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102916301 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077657992 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107838321 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077412271 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096221031 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103757361 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088473092 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094912564 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068886117 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095092037 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077125656 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095437524 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071882591 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103779795 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095272616 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072470542 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095363852 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076792325 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103015642 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087579198 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098947537 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100729319 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077200984 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103537627 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07568117 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095904759 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103331598 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129293546 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085059513 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104329177 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076191401 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103253059 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103528368 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.11049663 seconds)
  done (took 6.555896792 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091311108 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098060488 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099636772 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065391293 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068344259 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093869279 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068652041 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086195576 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078906589 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097651855 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081623001 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092847273 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076460877 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099723005 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092242175 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076850726 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09214639 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074554816 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098210974 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073915561 seconds)
  done (took 2.570068263 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079509265 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106529868 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071167993 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095460516 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073477008 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075580928 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09173534 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073022114 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08964327 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073239178 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098588287 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081235188 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089844985 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076300498 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098557577 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076585364 seconds)
  done (took 2.219046756 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082853031 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099372796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085061766 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089931258 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069076106 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08619969 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070548635 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06641752 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08595556 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084155491 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090133149 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073484992 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090799487 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069075772 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066786893 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092594318 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06635119 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086963655 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070506484 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103801443 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.08135558 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08750326 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070441186 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070543617 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090812502 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074760809 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090514713 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067946912 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087291278 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070714069 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089559632 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077178378 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086624767 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068879693 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069168054 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086686251 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069823701 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088913512 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073415976 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069162446 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088280344 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069164728 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088845321 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071829884 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08513653 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07174011 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065516249 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095668783 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067394312 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089555685 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06991605 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091778408 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071529125 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099231163 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07395708 seconds)
  done (took 5.272876396 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084444492 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072413584 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085938681 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068468498 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092489144 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072207806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07316051 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09085443 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071547519 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087591417 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07216656 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091540607 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072709218 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072531633 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090476589 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071971415 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083982215 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070184183 seconds)
  done (took 2.299279421 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07651037 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069476842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09662494 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069782736 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089154802 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072543262 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065239843 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087913429 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068841831 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089179422 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070619978 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072447602 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087932684 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073036773 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088593946 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070615968 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071900789 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087456001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06915884 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084833242 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071711918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068242995 seconds)
  done (took 2.576581411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075548843 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096857097 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165961994 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109486034 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08393549 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100818954 seconds)
  done (took 1.509491967 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09402424 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10248654 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071587523 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11038316 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07874935 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091406957 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071832061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091042892 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081250649 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104619387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071673878 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099273155 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098893854 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080716615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096259844 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077393043 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091389922 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071579436 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090571868 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109485235 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072002407 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099656326 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072494009 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090572952 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071956392 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098978813 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080417006 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104703547 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0905873 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080783338 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097278853 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072444085 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100212477 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104950328 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074174567 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100272938 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072094319 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110701039 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077547692 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099749905 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092591229 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078858607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09971372 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077113744 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10075996 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072518872 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096483853 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070912339 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093126575 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115787546 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078033196 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100240054 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097565433 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081239779 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099880085 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116011071 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086202639 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099978286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096687814 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086003581 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100092915 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096293486 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080446296 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104383128 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077871246 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100925726 seconds)
  done (took 6.832964009 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089538191 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109797217 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072154406 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105184506 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099580575 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072439682 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091162807 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071839097 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091093175 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072102865 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132077695 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072006302 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099850603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099667643 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072608908 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092387794 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0720011 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099412751 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071658511 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115503451 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091323248 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081282408 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100041554 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099725978 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084491342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096955928 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071771492 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092127189 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072018525 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091309059 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075995915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093070589 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099451711 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071293032 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100528264 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073256632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091263285 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076593766 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091391041 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077968976 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099933729 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108968031 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071858938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091034689 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085418529 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0929003 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070996846 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092112987 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072076394 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091627738 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105773283 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086395056 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104302812 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099114931 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072495015 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091308252 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072310298 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09110797 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073524024 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097234454 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079712903 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092373597 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115948465 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072054816 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09209483 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080421934 seconds)
  done (took 6.719153929 seconds)
done (took 132.115161845 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210567976 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190223645 seconds)
  done (took 1.277993487 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07163232 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098594882 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102294055 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130950524 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087497919 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101506003 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11959646 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079980125 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067441293 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087442876 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068475373 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088764579 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133481706 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068005793 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086699341 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070395094 seconds)
  done (took 2.347164644 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105941 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.200594935 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110118085 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066458257 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100046181 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078910113 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085771686 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077972289 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092009002 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066714987 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.0969849 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077865006 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066709022 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095059229 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073250811 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098399394 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066655325 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098320556 seconds)
  done (took 2.545493275 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107867081 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144601487 seconds)
  done (took 1.137101676 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.207577867 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123856519 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201006302 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.416687033 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207587465 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27639708 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177226107 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176809448 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161347264 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168921696 seconds)
  done (took 2.999437653 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103181838 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173158151 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312489852 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138803931 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088748538 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116585712 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139247798 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.110730304 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083524124 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102342155 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082071655 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098457271 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11929469 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077509871 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096953458 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080757446 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125434523 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078213009 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100875283 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08012088 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122547933 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070471254 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098902216 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078523355 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.101549902 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082980964 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088926523 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070183828 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078464447 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098785316 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081423733 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116440104 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098743895 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1329692 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082322938 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1525774 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078942357 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092802567 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076549268 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093029279 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078664909 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097448197 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.086103269 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096509425 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068349689 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097501681 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067493619 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067947526 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101341625 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078048585 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100043169 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098677765 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.132194434 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.079104318 seconds)
  done (took 6.339994638 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.752467324 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112276983 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094257274 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.808114016 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111792194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083267641 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.715589562 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122987573 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214832114 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.771251428 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09477685 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103327155 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208148419 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.216106709 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934891364 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.270471805 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.635268816 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10528597 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133322929 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131521805 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14361693 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15590583 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.171435899 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.408473641 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.078868548 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071871957 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.162957381 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079147034 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144725842 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106966103 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074245362 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179043382 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.233250434 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156270262 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097659535 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072202724 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090627765 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150632918 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.226990686 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191483288 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157988612 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069695353 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090764121 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143846538 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13242871 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069305448 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140901043 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174567521 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.150314889 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074660113 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096947838 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146853034 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141883902 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142446045 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101898512 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287976686 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.268111962 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093005588 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124485888 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.083860562 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240920197 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082398094 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198857114 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140157229 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189534321 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07208359 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797542789 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149405662 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071372529 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096180546 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123288861 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076521131 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139692273 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145341165 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38464161 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144996497 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095577293 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070877766 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202353593 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085185446 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092842961 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142042686 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07813022 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127152443 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166748691 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146238829 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149355054 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21236005 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145788215 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.16416706 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075416273 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126355944 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097043368 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.197173251 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171867694 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163605977 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.193265371 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144098693 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141746529 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147368704 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097907685 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151035339 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122488656 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100155199 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141257929 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.169233828 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122825395 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104445804 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07347443 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.16379217 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104334867 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108003201 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142488051 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170261957 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.431253606 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147585797 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068727809 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108233182 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143460864 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.142199505 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09678524 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217805693 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12634951 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168105093 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103165427 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090855695 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122569865 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.142773654 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07797482 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125229871 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162446894 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077575455 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215042882 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192238212 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077099809 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215215898 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161373626 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07593741 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148569864 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121380506 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145460474 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099248555 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140633818 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097050453 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792503866 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.167132875 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123738799 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075624609 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165661669 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07141688 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104201241 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084124001 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090292721 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778638483 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107609283 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101359687 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084416554 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096198397 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124885566 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140180991 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074972138 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138184366 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201784123 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097246699 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122998017 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084264137 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141317456 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09820926 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084692623 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105968914 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103809181 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126135517 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074469972 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103884283 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148912599 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.14156594 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191376242 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.543127113 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070435019 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104834178 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200393438 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072051718 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261032196 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141084515 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198555625 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143651082 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079829387 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286773225 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143896264 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165814074 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106386307 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152801005 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068862249 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138908926 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164885904 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071709098 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095295972 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.14198389 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14902375 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144843881 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.938379576 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070846649 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228350535 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069984128 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.150161654 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097679026 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077775117 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268283766 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072561099 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.169060117 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143554381 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074875276 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104280293 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.80945884 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103820677 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143261494 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074259322 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193527527 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.14296336 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159553278 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140819379 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076699375 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138597164 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211279859 seconds)
  done (took 41.069079166 seconds)
done (took 58.603082431 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260371737 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178658689 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240655222 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144022916 seconds)
  done (took 1.808754724 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149145948 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106727924 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117376042 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087211491 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103540907 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086368994 seconds)
  done (took 1.558664627 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.407342967 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265730796 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230448353 seconds)
  done (took 1.815059624 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.268679897 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217177461 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457558451 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.303094679 seconds)
  done (took 2.285752536 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.178705863 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113811472 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069016121 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106481458 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159496975 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251122443 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129052717 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18712907 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080830664 seconds)
  done (took 2.234862301 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19761906 seconds)
done (took 10.815011122 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.316152667 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.284666484 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.137701751 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.080345275 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.289943705 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.228343019 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.107915149 seconds)
    (8/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08703707 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097432636 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077950543 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084907746 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096549432 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.24156339 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103649364 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075983664 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07995136 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.280734249 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113593914 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108827176 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.166605508 seconds)
    (21/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079873863 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.239521659 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067073156 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159141619 seconds)
    (25/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.192955702 seconds)
    (26/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098373161 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053452932 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098904816 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074742108 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.308926802 seconds)
    (31/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.170288726 seconds)
    (32/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.204400468 seconds)
    (33/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.254437826 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080499051 seconds)
    (35/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.259923828 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101009241 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.222895952 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075157024 seconds)
    (39/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.247118142 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.243207569 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075855205 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.1262252 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194975583 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084912734 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118500972 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123942793 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074335289 seconds)
    (48/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074039788 seconds)
    (49/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.133237748 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.237883738 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053359101 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077421876 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102270309 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079047669 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166274476 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07558127 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.290617272 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.160529292 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096471254 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227227884 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094051643 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07690005 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113204239 seconds)
    (64/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.210344518 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077581714 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054637988 seconds)
    (67/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07591391 seconds)
    (68/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.138325481 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069807988 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.125945885 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081124173 seconds)
    (72/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097061808 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.255903282 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054322219 seconds)
    (75/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078993104 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090213669 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093049814 seconds)
    (78/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.14598803 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117382128 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097071976 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064628817 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092271154 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055081806 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120322063 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078052244 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10008436 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071212599 seconds)
    (88/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054777674 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155578781 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 0.14977699 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091285283 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.089661103 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.283431609 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096783606 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113689997 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074207754 seconds)
    (97/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093712421 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078207504 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077476507 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09034323 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169409787 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148580601 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.166126518 seconds)
    (104/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069924697 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110541199 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067310431 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213007277 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.1017198 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.082649316 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055107378 seconds)
    (111/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114535609 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109791857 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076039142 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.217439855 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097195303 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.262979684 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054509697 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07807243 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092242877 seconds)
    (120/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.178085201 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147957527 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099248316 seconds)
    (123/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064928683 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066843864 seconds)
    (125/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098044398 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083619395 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08976555 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169706066 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.098594807 seconds)
    (130/309) benchmarking ("sort", Int8, false)...
    done (took 0.167389188 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.161642795 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076982428 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095701606 seconds)
    (134/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108944665 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162916734 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112795885 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09553915 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073794721 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095804484 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099050306 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075721591 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.219829351 seconds)
    (143/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091787678 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137316844 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07552831 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068196537 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053664174 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089496578 seconds)
    (149/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.10195881 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095898235 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.22123804 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089915817 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.216026458 seconds)
    (154/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.127444638 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.237762096 seconds)
    (156/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054579801 seconds)
    (157/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10990679 seconds)
    (158/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075507477 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.251066031 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105775765 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06729422 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200388823 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097041418 seconds)
    (164/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.103366632 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053226167 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117709692 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053662187 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105348373 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089206395 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099321665 seconds)
    (171/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108004934 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098614895 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054176108 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.240552376 seconds)
    (175/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.316403254 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067355904 seconds)
    (177/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097677556 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064222617 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06871356 seconds)
    (180/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.088044192 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094514718 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.165441708 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073783579 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093528849 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.056060902 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068759789 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076823821 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091921912 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067611221 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10296103 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053864583 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.140441973 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054127175 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125604322 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17293852 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115078955 seconds)
    (197/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075346303 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096276528 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069416566 seconds)
    (200/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068489901 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143880576 seconds)
    (202/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054314353 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097957767 seconds)
    (204/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115225496 seconds)
    (205/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054704112 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098216776 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069346999 seconds)
    (208/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.090196669 seconds)
    (209/309) benchmarking ("sort", Float64, false)...
    done (took 0.126999472 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12149464 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067031529 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075437388 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086455874 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069081177 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127030196 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067676738 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074454003 seconds)
    (218/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101598278 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.131705568 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068712165 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05353376 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121747055 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076768386 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097167489 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089994037 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089104331 seconds)
    (227/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063629012 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095246086 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126550596 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073526018 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.236901034 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110328091 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066680454 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054863718 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089843175 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056050455 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055871737 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054199769 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166078868 seconds)
    (240/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064478368 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.075888682 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053253858 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078656606 seconds)
    (244/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.084256801 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066981009 seconds)
    (246/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063327996 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075898805 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075571605 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054051852 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094656378 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067764554 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064676226 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088615784 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141953614 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091715333 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089232423 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112372847 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054684475 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096870126 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095658048 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069973971 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094979964 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.22562815 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.076302855 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073691472 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075580692 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076920608 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067804175 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054838807 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116941815 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053923339 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115058337 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074152307 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068302495 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188778472 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088941259 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053229619 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054799537 seconds)
    (279/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063024172 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08995191 seconds)
    (281/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054816012 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066796783 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098010646 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080466642 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087313148 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149632599 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088710841 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091985889 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136077665 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075749999 seconds)
    (291/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195228921 seconds)
    (292/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05487211 seconds)
    (293/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.076926007 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053902556 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07323578 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093164496 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053943466 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054059751 seconds)
    (299/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061758404 seconds)
    (300/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.078314844 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067160559 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072964317 seconds)
    (303/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.075101477 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087744077 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117168027 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067579016 seconds)
    (307/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071452095 seconds)
    (308/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077204042 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070694574 seconds)
  done (took 35.24801663 seconds)
done (took 36.170647354 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084969555 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115584218 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076511663 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116245256 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082530291 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100986386 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075269832 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102007962 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082358167 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105757939 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08015789 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056736124 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098077933 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076738224 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098579643 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093225578 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102233269 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073908591 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075259412 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08895944 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075566617 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089582967 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069292636 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057088377 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101644896 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074478129 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096152173 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076489819 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067546896 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08963111 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071557064 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074764501 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089218922 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081332704 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095295196 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075468644 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075853842 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099828896 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069151895 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088308073 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07548748 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067392942 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095219614 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075098848 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072541402 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094803217 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075644714 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103154997 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093222898 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090809748 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076037803 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09945612 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078313281 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074496687 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093896613 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075788279 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094557063 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093848661 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097620861 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069351644 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076088825 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097997062 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073528586 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097266028 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075225532 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077463046 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100437237 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073618256 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098645559 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072720701 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067207442 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097981587 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071852755 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089388551 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078040899 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078661475 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08862699 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073838829 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073888101 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094849259 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067982953 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091241626 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069766093 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074581785 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091230516 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056513245 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071612129 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095817381 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067412322 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075579648 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095941237 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0744837 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091186669 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078195006 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067090297 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094648494 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068389197 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067463422 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092343985 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072455488 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088266714 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06965852 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076547442 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091337116 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07392835 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.104050805 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067360181 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073660173 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088868037 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066805386 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105968484 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07723419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067670751 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092591567 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067590268 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075323288 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089611628 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067813934 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066435146 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08979945 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074066078 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088636108 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069667313 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07504564 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103250421 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067242208 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070710715 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091464891 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06795916 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0947429 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068227251 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06782684 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.092174842 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064862573 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069527992 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089813954 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074879263 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069256393 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098000809 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070186365 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097604626 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072222845 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073789818 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094967542 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067491243 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060684433 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091321761 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06988518 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06908444 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090230071 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069750183 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088915553 seconds)
done (took 13.415640804 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068698602 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169010263 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125910636 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098202788 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111716526 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068481242 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10131198 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104937144 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092629561 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127616986 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088785055 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109037684 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115816596 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089428524 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067856969 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071842184 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09141141 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089245646 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125822214 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110323976 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118291372 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08947697 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122368666 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091692144 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112814949 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104759152 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090336479 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072445421 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09322367 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094815726 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109657639 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071704489 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067470767 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124763191 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117679625 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087351273 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089623738 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08628614 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090536767 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067447433 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115034674 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101849398 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105965147 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105698966 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074462035 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070719565 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091634614 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08761714 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114530373 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082302304 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112255376 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134483954 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071380821 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107342552 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067592773 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111916812 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10576048 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070643751 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068494205 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093003152 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067299066 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071081823 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112453814 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117450871 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07192243 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106071346 seconds)
  done (took 7.338565674 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088118721 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118632792 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08575521 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108654528 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068031559 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068537779 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091693501 seconds)
  done (took 1.606714921 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070632588 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090532256 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113540501 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090823992 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111014011 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088389992 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101034425 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068929762 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107929062 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069544917 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11286511 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105516173 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093663859 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075643363 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092594701 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091226934 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092028099 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09143957 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072480813 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114184377 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07106087 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112431079 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070461026 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068616565 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105995711 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069058067 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138745691 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073192239 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09329313 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072109281 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067310051 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141856176 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105665587 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079815354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068360036 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105579936 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084024515 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089210111 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086434728 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096954824 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083745585 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069363753 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092855804 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067973102 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095529861 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079540033 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070647322 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093124416 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071792189 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11246099 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069774487 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083495035 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091968946 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073600824 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069992144 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097762304 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079258368 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093047862 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089037946 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070871279 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108656174 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085029533 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10629368 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085904956 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094629609 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083558027 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105216583 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072001627 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070445583 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095743841 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08551291 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089653273 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07046164 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079977026 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093652216 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091978955 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115118035 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071155002 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101538674 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069764824 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069562378 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092506778 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091403894 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095974606 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06914042 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073026864 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094939192 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066869359 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090301159 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072631602 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067891767 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092847596 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072513159 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070182059 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093749425 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085576707 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093131795 seconds)
  done (took 9.460079615 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072869067 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071133297 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094337869 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069308759 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070061139 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092742691 seconds)
  done (took 1.460485527 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101505586 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094063168 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082402769 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097206395 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108470465 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107102214 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084014581 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107188184 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08718364 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104309217 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083842917 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107615791 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090473752 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097959162 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083816431 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097636372 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084329959 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102462025 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080835493 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098732648 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090004325 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097780462 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075827729 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10820509 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072380743 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075085562 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101656848 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081274018 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10491329 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08389882 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098089712 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073231887 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095940454 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084094831 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107368894 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074108637 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097487652 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074265751 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101017574 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072719203 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108313246 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076041667 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.103326197 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073415981 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106932597 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074026177 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096559819 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078423781 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.107293081 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073623439 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073911399 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097308566 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073113447 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096616419 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074115619 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107015951 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073958782 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106379096 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075642202 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09700842 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072616001 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07347807 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106878703 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072738865 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104805347 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073607773 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09675032 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075893564 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098947336 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075209059 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096320352 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072487951 seconds)
  done (took 7.456143005 seconds)
done (took 28.296789581 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.656419564 seconds)
  done (took 1.645665271 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.793111202 seconds)
  done (took 1.784660145 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.28273874 seconds)
  done (took 15.281024612 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.616058603 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.757632584 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.827376424 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161595924 seconds)
  done (took 3.35513089 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.903867609 seconds)
  done (took 1.917420747 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.247550159 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261584431 seconds)
  done (took 1.507726147 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.737854649 seconds)
  done (took 1.741486626 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.306711214 seconds)
  done (took 2.302254263 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325256049 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186889131 seconds)
  done (took 1.517743666 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.525964323 seconds)
  done (took 1.531932834 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.589748027 seconds)
  done (took 7.600901314 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236173835 seconds)
  done (took 1.254956873 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.274870615 seconds)
  done (took 1.283482886 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.120103059 seconds)
  done (took 4.128495764 seconds)
done (took 47.854519188 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083140594 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087495764 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108960787 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083170827 seconds)
  done (took 1.367374815 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080507567 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075417734 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101904826 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074813916 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102884531 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075787366 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100596722 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079188181 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074871078 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098933738 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075470503 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097601418 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077435326 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099900616 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072537421 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07757585 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101547755 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075985374 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101502861 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075771759 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072773562 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099761275 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078234987 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096636236 seconds)
  done (took 3.084338428 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080208171 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075769317 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098663354 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073606274 seconds)
  done (took 1.341489317 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080473341 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117456645 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090358884 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10346218 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093987461 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112079504 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071976142 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073147103 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09718614 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079963214 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094051471 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099990361 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112522447 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078731015 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103526994 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067972689 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070659933 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112462067 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079457417 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102346738 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073515272 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104955825 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069508111 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092423594 seconds)
  done (took 3.20253703 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080348079 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105339635 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10375908 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091461923 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117385389 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067900009 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101653702 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093016724 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151297927 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067417277 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095549183 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068288318 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098295502 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066803626 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078818995 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134060153 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113775891 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09350536 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098811886 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091060834 seconds)
  done (took 2.940663551 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077618782 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07197545 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.0930119 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067378954 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078256306 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097795597 seconds)
  done (took 1.508107847 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070995503 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069260129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092783813 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068639236 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073029302 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092125247 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068269044 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069067616 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09278631 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06874188 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068537673 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090518006 seconds)
  done (took 1.945412588 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.433433756 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069994767 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094282267 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067352483 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072971577 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09184509 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08159335 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069428837 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115180347 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068700473 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092267962 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069677039 seconds)
  done (took 2.35181201 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261667558 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078836419 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322266154 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168882519 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141595393 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156394713 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106015525 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141710353 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199059696 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139644742 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200068323 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226671072 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13560288 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168671791 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116771702 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133744141 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186640933 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222065333 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106972793 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22347945 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206676243 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15757259 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180376945 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129220349 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136192581 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15119273 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07358226 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107121509 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231910512 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162268836 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201012865 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139599281 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098794606 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230704304 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224830517 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196722394 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163423769 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087085847 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158237601 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165319425 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254738892 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115520103 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194516471 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134898488 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107758762 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173055819 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145998936 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147330558 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137596155 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116844207 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174986515 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240581234 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166823602 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11323126 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137855275 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142190452 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144699126 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104771445 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267784341 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193791076 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160728081 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097615011 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099703409 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209633925 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159793955 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143825121 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154566143 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120828294 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167924448 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211839008 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148685205 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175373953 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180849035 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090284955 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148086931 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194549526 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157120528 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230546247 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155435621 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075025622 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15380127 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132051267 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109083605 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144641742 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102350607 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208102833 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126943585 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140245942 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140171897 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137489923 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138953348 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195691682 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20386022 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132584165 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068129293 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131440746 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150334619 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176693575 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115578158 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136099419 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149515714 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08160384 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193499428 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07722744 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15426539 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105205355 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153024838 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162828488 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07756833 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17977839 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104985103 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130277109 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165055982 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219458139 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116939464 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084993478 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227544347 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156167581 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133239166 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176043093 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214723433 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103825571 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13147748 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204903756 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242913464 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092791851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223105212 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136835228 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085765679 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115543298 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155649467 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140914524 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150704514 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110035064 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154781496 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227769349 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076886682 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122851739 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168577839 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08378579 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108240985 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142036106 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129432671 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097443419 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129405322 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134484312 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196265888 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156207697 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111012705 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180387021 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101482083 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225808403 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11722882 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131974949 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131680102 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072207582 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166445314 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216587555 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081932033 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227142191 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154649379 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132580325 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149541642 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08471451 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196052115 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081781957 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097734475 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176227946 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138818988 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137693734 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184905371 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132687383 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157367978 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153643964 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163099995 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187364209 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163016788 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13434871 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089783084 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141341896 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15394432 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101049848 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12217128 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084848265 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131893202 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123885359 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086129055 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199052874 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15671257 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126126893 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140846362 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099686397 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204448474 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079241295 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159675583 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147347083 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121705343 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210942276 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187486804 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165305882 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127725465 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202419813 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073520094 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101363824 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092614223 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156746078 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110103179 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086379514 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170444072 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179340424 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15771805 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19354446 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113806756 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14977003 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211816769 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07382953 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144387792 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179180337 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153552657 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156972125 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113988015 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10182159 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199759125 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137077529 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24606281 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144954228 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153183073 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181404453 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13110256 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107662226 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108213438 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192756909 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134990218 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180747164 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127877699 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114913652 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139082248 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084052531 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131502434 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155841108 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148936796 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188712747 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144396386 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162939598 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084579623 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169609723 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153457972 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151354716 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066843924 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149698218 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219917123 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122614354 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148256865 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185083975 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107596253 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153593094 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237001765 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177243763 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111629077 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139137671 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150789237 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158951045 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147907359 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171921207 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140589915 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164351613 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139188933 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087355433 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115149336 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125995797 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134840812 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097678791 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.165776239 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146523005 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097540012 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160932832 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139568862 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139434765 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147997221 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125666031 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092971029 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125404496 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234550797 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152007931 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235760645 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128994773 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179844802 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228450072 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077982689 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107426943 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08275979 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195534105 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086617535 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16303906 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124106157 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132408909 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157269004 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172506448 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124487914 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070601888 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138223998 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190085174 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114012971 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126534743 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133739426 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220607966 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105487375 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107863549 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155457869 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132218321 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104874519 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232420057 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089422253 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101230954 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104122808 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083361499 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157640754 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214253184 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109840131 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.132414485 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144717262 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148190141 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182676116 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104445057 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124682903 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141807379 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180717579 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184188685 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092691394 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141492135 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158520136 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213978503 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134919526 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123723509 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206377379 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210673313 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221617819 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091726756 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143950373 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143643294 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138811928 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19594499 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086348421 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227170864 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109304764 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167980222 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133065594 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121260106 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160149753 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115830674 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117045517 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204877632 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149113124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084997138 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10721583 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146680668 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152037056 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135146163 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077073031 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195574122 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074969747 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167532218 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228668386 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108452167 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109970402 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123371304 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109359275 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137000926 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131862897 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090028793 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143990608 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22949974 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.094095923 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207578651 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171398951 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143201042 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192877909 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127770212 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665338497 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082007427 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212787867 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149672863 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237322633 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101080806 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148468577 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137740433 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152532565 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200831809 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134636468 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178725094 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188352274 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151331942 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08156853 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131059704 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13944549 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119115792 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134851449 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143229142 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14555232 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12858938 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150458493 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157447842 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109023238 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097348219 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216432485 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147136338 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17385412 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170924202 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113452435 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148989471 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196447577 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082624771 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152636988 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213496666 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136951137 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126121232 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083999476 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134408356 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231683034 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075606367 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222124664 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153368244 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138486949 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143472825 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147417483 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188062368 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135322982 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155705221 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098747722 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139742356 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143983428 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113061332 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104985275 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108922083 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141275736 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127818128 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131075156 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123801139 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206338465 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073612139 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123897408 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131459692 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175561126 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237998244 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11737449 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086054154 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149116873 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141883408 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144879354 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178555739 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084444051 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111348701 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084461584 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13855947 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13802883 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143159398 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105843 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14020498 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22712165 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112138178 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226161522 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123980131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134850173 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072135318 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107945143 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09860118 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126174122 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137055664 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125830604 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207527652 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125917331 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11924614 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121956236 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07629075 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085702376 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184615503 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139872301 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15097933 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101553434 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.090474093 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137748746 seconds)
  done (took 71.734637187 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135193026 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.1050137 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118376827 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.178247636 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146342245 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238680341 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181030837 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224449122 seconds)
  done (took 2.431041746 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071423903 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117230437 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104090283 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117066995 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090523232 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069723075 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293976805 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110629535 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068164124 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115553633 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119558569 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092554436 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.472585952 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067035281 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094764284 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085029466 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069128034 seconds)
  done (took 3.25348448 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433305827 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.638669275 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.45461387 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078459579 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.902220832 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09428296 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.35040479 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167316298 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076126295 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.437983934 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.752968364 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136557594 seconds)
  done (took 17.62912987 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081123887 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075419323 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114765352 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088994143 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.103665894 seconds)
  done (took 1.579896087 seconds)
done (took 115.37855992 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082955487 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.347638935 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054701011 seconds)
  done (took 1.546639663 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085678304 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086051535 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111817363 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084640333 seconds)
  done (took 1.485293547 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07718065 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078421218 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112024034 seconds)
  done (took 1.380660308 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278009876 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166172648 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090252803 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085323081 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079336744 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106050652 seconds)
  done (took 1.385121607 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074736523 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076649486 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100578897 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078640067 seconds)
  done (took 1.438051646 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078599142 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053727131 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056604125 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08276482 seconds)
  done (took 1.386525422 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091276123 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107135627 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082142949 seconds)
  done (took 1.392580902 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10990886 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113358625 seconds)
  done (took 1.338917495 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084537848 seconds)
  done (took 1.193119593 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094771845 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141035415 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15747421 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137123767 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165929943 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137354869 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087848633 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11570112 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104470323 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089572772 seconds)
  done (took 2.349302693 seconds)
done (took 16.61827525 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081276751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392906041 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361796049 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118117499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669134586 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35808887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.020103029 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119615829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121680031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095530913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085014711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675237759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983198717 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350672111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970752247 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324810772 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675779884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069386459 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094357533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069685982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975106661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094725383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069795558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094953432 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649932004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372510971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095110718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324312155 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094852448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071035141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35702472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095724833 seconds)
  done (took 16.03564044 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07280039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145078542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074703957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084509288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098111353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071372464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099468469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07063346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154322244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069428825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112716401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069224525 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099606594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069950369 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088291514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09596519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070403396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096223827 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069698008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070278168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114161282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069548149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095096396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070428905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069630178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107313333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069823572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07040233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095947392 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071583117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098429836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070372216 seconds)
  done (took 3.902401236 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117807563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154314913 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075141142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131188444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115139098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097760323 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171953618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093933568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156194476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070057903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112136133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069591687 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128742239 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070574811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1153158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070163511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096183931 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070081992 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070834355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09652628 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087625904 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094898266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070577634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070015598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096573979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082984064 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096797212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070767681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069642518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098223194 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072780293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09703383 seconds)
  done (took 4.215330511 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075095409 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076896517 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111192786 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085082313 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09800941 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074220868 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074969367 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09833719 seconds)
  done (took 1.813504143 seconds)
done (took 27.084507302 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08101994 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072258031 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100635413 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083435692 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10092637 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079514256 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068587137 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103223584 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078802997 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074372896 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103683659 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069012492 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09906877 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068975371 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076543347 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096151821 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08185615 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099738436 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081015914 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08105411 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099048208 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079237596 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102213926 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08061449 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107140012 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081414124 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110196707 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075380122 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070623223 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098276079 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078948822 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112227743 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070753823 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080791855 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097109852 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069357673 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069352598 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096437445 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08112886 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101517644 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072425494 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102799123 seconds)
  done (took 4.748174711 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091460808 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090804549 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113040273 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071900492 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098962588 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06438467 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117837499 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.071814624 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.095369973 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091357597 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057155758 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087378655 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07199179 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063353581 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.095384035 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058136921 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.0604889 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083926761 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061579845 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060083858 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085430979 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055543376 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062274882 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064597837 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084819076 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063172063 seconds)
  done (took 3.148938134 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077879158 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085602797 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115011792 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129918618 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132546286 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079788088 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105756286 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08929399 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115226088 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068449374 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072866659 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124381714 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089442257 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101982162 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068975008 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115501562 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083114193 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070669878 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101826978 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091733092 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111925909 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080387206 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121953063 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083783097 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068618483 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097356202 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072480893 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109139527 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071570896 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078024841 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099210444 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073071528 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097791444 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080333868 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.099755387 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071601684 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09222729 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105486245 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080493422 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.095880866 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072710347 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069890888 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116051357 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113508864 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096194538 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075883909 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07641198 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.106556284 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068954044 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114297736 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07893285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069026041 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099912108 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06893116 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095582439 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073394556 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071577007 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098738019 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077982029 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099210901 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082374018 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073099645 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112068224 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069928364 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103884496 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068843005 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07038426 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095183084 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094610594 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096772954 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111645322 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096415932 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070871179 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078115916 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104074845 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075552267 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069185824 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111380011 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079498615 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099687802 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07842905 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099976073 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072720253 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090171049 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099171854 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071198542 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070852727 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102614705 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072038565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097624483 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082733904 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07003863 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099314313 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085888505 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096015102 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07106457 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075267039 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100991361 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069338127 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108158463 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074935467 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070367524 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105349468 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069709257 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099566033 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078836282 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074587887 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09504181 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074337921 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102709525 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070685562 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070640608 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098981175 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07154756 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115883848 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075493902 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074158612 seconds)
  done (took 11.492098449 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194789202 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187710246 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071661109 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179188935 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078247727 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108362573 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.1806202 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097721843 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097519106 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069963861 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070266852 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130468093 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124847103 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108355426 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107430159 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069059819 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114164155 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105620701 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182657545 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176326076 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115502783 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078106813 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071599771 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098297322 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072008157 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07906642 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113480109 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103507628 seconds)
  done (took 4.332222066 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084976829 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.138720944 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075164096 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093452438 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120186907 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07018667 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102711675 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07135606 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109852785 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081638014 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096598106 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074747917 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076422787 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105609454 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070222283 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106331166 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079498956 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070886488 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100377348 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074596687 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.108817636 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081923577 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100782961 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068582191 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075674007 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096074227 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066695236 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113252124 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069308439 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120296275 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067633689 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074688963 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11463024 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070163903 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096955918 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072898187 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072277487 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099865656 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071111141 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094734864 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068526057 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059528791 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095472659 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083565132 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076248349 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088934039 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075093328 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102357454 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075502389 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.0675571 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099593894 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072579865 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072604507 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110581406 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074426508 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101929746 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074796945 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068058798 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105601719 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072729236 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066740162 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095527366 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074442492 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096144866 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078076566 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074603452 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096105924 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073106785 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102757939 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076337549 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07264974 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099604473 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067485901 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071736702 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.10182953 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073815554 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.101102799 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068279882 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069008045 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097271411 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057331297 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069188525 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.083279466 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072445593 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06756007 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095079568 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072963922 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075248452 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108935563 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072119176 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102097073 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06992012 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.095908665 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07304227 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064695565 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099522111 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087408244 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112730067 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069861 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067579172 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112941299 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073803035 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096033261 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058003766 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.0757468 seconds)
  done (took 10.020885315 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099475489 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093831532 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097872066 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085111715 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124995975 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094830109 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104380518 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076041061 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070847764 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112993695 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069144031 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104893916 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069843043 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078634062 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125832924 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077172439 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098181737 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078959893 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073574344 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137628075 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085298572 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110895961 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083123073 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097738851 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074247108 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082169109 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12468525 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082688185 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10835154 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.088772303 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110018375 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098351873 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088972197 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100913549 seconds)
  done (took 4.367006208 seconds)
done (took 39.22792776 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211946848 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.410158758 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.197386882 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.047086406 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.243452442 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.201270578 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.211220326 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200634103 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.447090923 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.201993214 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.421750988 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.848318542 seconds)
done (took 58.788013621 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.246383671 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339300125 seconds)
    (2/2) benchmarking "String"...
    done (took 1.470564195 seconds)
  done (took 3.954743297 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.566978944 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.19877189 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.478040258 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.200144057 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.19906506 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.622502919 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.804999334 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.032615872 seconds)
  done (took 27.681256118 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.203784749 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.567548816 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.504780605 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.501286453 seconds)
  done (took 17.923962556 seconds)
done (took 59.517594471 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.192816015 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.238909055 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.241205208 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186394968 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.324439774 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.218314438 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.477506378 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.418325515 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204572198 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.209249042 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.203281281 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.206551099 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.213301549 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.480916602 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20089981 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201717845 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.217788675 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.667208466 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.577584619 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.215978319 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.21121037 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.237974554 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.204548142 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.217559426 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.224319751 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.211676567 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208870632 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.226692574 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.375977881 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201678488 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.291822139 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.711646024 seconds)
  done (took 191.367246227 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202346243 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.27878859 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.384018889 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.258276293 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.67528557 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.407599345 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.349709576 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.73773592 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.21871489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.214871977 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.513128185 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203461217 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.565978415 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.220864855 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.214442912 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.309783115 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.380696374 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541688733 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.221891603 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.468977003 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.205150677 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.528631887 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.449610741 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.440006242 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.233205936 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.220812805 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.215594541 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.220397634 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399773495 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.32410225 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.215097551 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.217323547 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.769019839 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065450815 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.228108591 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.22516533 seconds)
  done (took 150.474969644 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.469728105 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.203601302 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202775712 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203509838 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232756847 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.203159965 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.722888151 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.727014188 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.711066108 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.760582945 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264899014 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.400621992 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.204561329 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295066992 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217331789 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205596442 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.219399696 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229273962 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204405778 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204883813 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716315389 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.216487971 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.272002859 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21060393 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204557202 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233185147 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598755107 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204117191 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234055586 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519196803 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.247392577 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203875023 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.490171243 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.99932238 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312006755 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207040271 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234176397 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205852314 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.472245024 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204816743 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205864586 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208797827 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.760512298 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.205164558 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.726556501 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20838546 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.077065199 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206217841 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205147734 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.495546701 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.590723989 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206433964 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206506784 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.208068237 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207648022 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205256028 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.235283698 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.501717842 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302856876 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207286549 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.210226861 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235320701 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206456968 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.216513589 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208078902 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.228362476 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.264601564 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.327403905 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.719337889 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206640158 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29843033 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324429836 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.206424865 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206789058 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206822708 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206949821 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205931504 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311808517 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206443305 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.599718229 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213001792 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.207673472 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.266235858 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.300860955 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.207803123 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.488185626 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.20818668 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207422874 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207722027 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89617622 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299046432 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207965643 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.207321234 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207640741 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.599896862 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.733513371 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.365679 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210011858 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.56863472 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209883257 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20795644 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207066576 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.610383142 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.711136296 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.764998142 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.209486242 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315083666 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2129599 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.210222479 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208573845 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.237256888 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.209060245 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.270121805 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.208996096 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.604549713 seconds)
  done (took 344.324121447 seconds)
done (took 688.782206512 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.888243834 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.8702964 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.984436822 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.875599811 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.852481973 seconds)
  done (took 10.625303412 seconds)
done (took 11.778702274 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.387617705 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.385725609 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265606403 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.388717558 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236948387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.405261583 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366554506 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228452619 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306601369 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.281208009 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306961731 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256356437 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235287271 seconds)
  done (took 18.205963728 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520790547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.511366195 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27672936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520412416 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253356336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530092089 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405766574 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.412050151 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414167587 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228858388 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227613308 seconds)
  done (took 16.457862574 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528947121 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531583833 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280127418 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527778075 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255262954 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520450981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409699711 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415342691 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398279997 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227682409 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226887959 seconds)
  done (took 16.47773826 seconds)
done (took 52.295727562 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.220552571 seconds)
  done (took 2.375798853 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251720829 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418153178 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233943925 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224014475 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.221390806 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222213718 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.224870956 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220379179 seconds)
  done (took 11.17373495 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.221289477 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.223063221 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219801899 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220594492 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.222226518 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219713111 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222880688 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223096223 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220018586 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219299506 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222630096 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220392138 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22269658 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.21901373 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220179307 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.2224346 seconds)
  done (took 20.696238628 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.22264089 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.220194955 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.220211579 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221167842 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.221192125 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.221322727 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.221768535 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220996011 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.221241224 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22050139 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.222386037 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220899722 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.220677058 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.221966226 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221710707 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221884169 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221201625 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.222317744 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.226390953 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.22141771 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221596617 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221647804 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222756515 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222109232 seconds)
  done (took 30.480582354 seconds)
done (took 65.882791598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.190275268 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.797988434 seconds)
  done (took 9.1473558 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.22426008 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.224694513 seconds)
  done (took 3.609361307 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224971673 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.224794724 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224464938 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.224445153 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.224457284 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224949815 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224852085 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224639002 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224360683 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224544997 seconds)
  done (took 13.405763333 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.224208664 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22433457 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.222876047 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225822298 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.226008623 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222458572 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.225414483 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.224629231 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225415286 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.223130611 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.225240961 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.222867339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225213911 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223656513 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.225155939 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.223364148 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.223887388 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224293812 seconds)
  done (took 23.197258273 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.226602383 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226455341 seconds)
  done (took 3.614013266 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.224488733 seconds)
    (2/7) benchmarking "second"...
    done (took 1.223792688 seconds)
    (3/7) benchmarking "month"...
    done (took 1.223517308 seconds)
    (4/7) benchmarking "year"...
    done (took 1.224528732 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.22498255 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224015053 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.223839748 seconds)
  done (took 9.729928119 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.22790934 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.395362702 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.47481541 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.838054543 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.228491674 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229874962 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.054557819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230414553 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.233334904 seconds)
  done (took 14.073882848 seconds)
done (took 77.935912585 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.199771125 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.21649891 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.062198166 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.23629096 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.233668124 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.515107864 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.21799612 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.337472017 seconds)
done (took 37.179943974 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.225025114 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.91671146 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.959168942 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.220551675 seconds)
  done (took 11.258215238 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205201644 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.118347522 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.205085387 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.225457723 seconds)
  done (took 17.917658614 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.813190853 seconds)
    (2/2) benchmarking "read"...
    done (took 1.551953471 seconds)
  done (took 4.527257447 seconds)
done (took 41.090217321 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227924461 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.227428502 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.225568275 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227442083 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.225918638 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227894725 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.225023395 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.22526632 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.228210375 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227960688 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.228596856 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.227897577 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228962522 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227011323 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225800806 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227838185 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.226408067 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226241988 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226588613 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228649523 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22906067 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226184629 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.225972736 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226253978 seconds)
  done (took 30.612949741 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229127004 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.227457567 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230235465 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229461448 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22733721 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229664541 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230068486 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227295564 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229590459 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.23087491 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227087497 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.228113619 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229870829 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227692575 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230366549 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.226983398 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230439118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227699115 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230259353 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227493801 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.230354657 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227553731 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227431129 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230416237 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.227426429 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226865369 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229997978 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229280436 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230410631 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.228044731 seconds)
  done (took 38.029787194 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234767763 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237793349 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.231134752 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.2299408 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.231397466 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.230624729 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.23127934 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232035432 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230615666 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.23111465 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230829127 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230909813 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231795363 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230352902 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231597457 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231604074 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.23241844 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231352687 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231340174 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231569102 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231738138 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231189418 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231565361 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231698424 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232307034 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.231603265 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231914571 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231986469 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.231838273 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231971622 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232456727 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232834872 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.232196319 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232896313 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233489165 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232399494 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237908946 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.239919463 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.233226726 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232653148 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233396765 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.2315521 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232575886 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.231952927 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.233846547 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232729292 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.232694733 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.232633627 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.232754557 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234438451 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233063101 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.23328967 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.232228436 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233928963 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232896432 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233165081 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233226931 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23425133 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233823188 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233233222 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.233278311 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.234114077 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.233638358 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233501975 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233699502 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233180651 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234461243 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.234213425 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232991572 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.234716934 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234466201 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23547155 seconds)
  done (took 89.928673504 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23391514 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233365771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231086954 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231337734 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231713936 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234573585 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232605618 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234890778 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231979513 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234471768 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234805844 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232897806 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232028485 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235955752 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234889495 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232558402 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234871624 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231913719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234884659 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23539594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234345969 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232764434 seconds)
  done (took 28.306107102 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23591248 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234294009 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.232668131 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234682207 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231816686 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235942925 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234576541 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234498945 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235485397 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234403677 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233212189 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235303723 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232933441 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233457356 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232720586 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232356788 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235510536 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23290381 seconds)
  done (took 23.38255262 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.233054231 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.23398972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235213278 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232799862 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.233771575 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236443583 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233706324 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237066267 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235769895 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232983436 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236364513 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236495574 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237138825 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23403433 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237144114 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234910389 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237390667 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23370016 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237096979 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234160129 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234523183 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237443405 seconds)
  done (took 28.346478579 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236695684 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.237993555 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234080573 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.235295049 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233827919 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237350378 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238152813 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.235191155 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.236879038 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.237492428 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234532421 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.238653969 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234496623 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235821626 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235028178 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235365771 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238301918 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236001578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237740589 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235224089 seconds)
  done (took 25.896286197 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236486589 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236960764 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236612576 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236457054 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236779325 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236886332 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237312557 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237281837 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236898855 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237395736 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237237712 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236930856 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237287908 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237124814 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23779093 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237752849 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237579149 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237527877 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237515268 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237688098 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237691284 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238027793 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238168771 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237944459 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237740903 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238344642 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237111619 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237991913 seconds)
  done (took 35.819531538 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239611488 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238895316 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.236610445 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237635135 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.236689902 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.237058815 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238183007 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.237226741 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239617462 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236794082 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.239722701 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.239884947 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240244696 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.239642849 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240016731 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240263434 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241346217 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.238428016 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238851283 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238182076 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240602647 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240211702 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.240732508 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23811445 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23786949 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.239790059 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238560166 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239149195 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241196093 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238884982 seconds)
  done (took 38.345355985 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.259873662 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259471883 seconds)
  done (took 3.694905918 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.237019693 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241020661 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.241006577 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239503039 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23941564 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242252425 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241854595 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238558106 seconds)
  done (took 11.095956397 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.238344166 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.242513248 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.241576931 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.240937545 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239545159 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.238925416 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247532264 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257638582 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.240542004 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239440562 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244475234 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246455425 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.243968603 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239166236 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.240095233 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241877484 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.241237133 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.240568048 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241133047 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.24291721 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241193593 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242771934 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242929923 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.240810164 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.241323489 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.2537271 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.2476881 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.242934062 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239370329 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247360146 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240684113 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241022048 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.241523398 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240911266 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.243546833 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.241515419 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252174825 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257260877 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.24920027 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243384396 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243427537 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.241410455 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.243651732 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.244114084 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243760574 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.242425042 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.245070945 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242120517 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241702696 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.244473317 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.249193367 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240631277 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241305293 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248040352 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.244150789 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250466758 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.25953845 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.24468589 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250069955 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253917616 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257716927 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.249937941 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244986908 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.243392364 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252572002 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266157846 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251741786 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.26002774 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.242704797 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246244724 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252867791 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257724852 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.253111531 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243259396 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244429083 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.246718775 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24429959 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247129903 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252656137 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264097363 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.244905965 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245221138 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252792422 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265653785 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242899795 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.243600147 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.244825805 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24490271 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.244363681 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255460802 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.260611826 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.247329918 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243399892 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.244405179 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246905817 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244056016 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.243648647 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245315452 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.244990441 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24710131 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244611414 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246867152 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253440469 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245136182 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245184419 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.254269909 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248241907 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244421438 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255744901 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.248178412 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245385724 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.245766865 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252364776 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.245237341 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247699887 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253489911 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.245864147 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247875115 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.246301224 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.249049145 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255315917 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272153115 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.248305536 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248404498 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250120408 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256900348 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24599418 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.250716885 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.248880439 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.246884927 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246200625 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249021429 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24882875 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.247955143 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247371271 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247895132 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246998942 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248816142 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247111798 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248367438 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249315336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248369662 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.249244789 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.25120567 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.248584299 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249527441 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255838767 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.248137928 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248658241 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248433044 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.247992313 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25083583 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.249853243 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248286012 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248881132 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248115717 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247079843 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24772054 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250273894 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.250796302 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250387713 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24783455 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251413947 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.24917938 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.254219033 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246754377 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.248749027 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25152522 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.250474199 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248825309 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25150615 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246572235 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.2515275 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255676962 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251683406 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248975736 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.253635955 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249762241 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249731439 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249596288 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252355274 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256657869 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.249214053 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.257543453 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.249308051 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248773776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.251884641 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249823563 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248603924 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249014941 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251842931 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259540775 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264587438 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258581269 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249814803 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.256021524 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251090859 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25396853 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255942282 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250396431 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.252704624 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251404196 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249669538 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250868384 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252625471 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250175945 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249727181 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252910978 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.253015066 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251876687 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25258551 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.252185615 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252458795 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25109153 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253518062 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251517521 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.249981845 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251026489 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249683115 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250117662 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254459383 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251403128 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262185462 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.252936908 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252282921 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252699008 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251053761 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250044483 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254747448 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254371329 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.25129569 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260382648 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26862982 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252848189 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260638036 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.267893729 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.25145833 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255897386 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.254727718 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.253007789 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.254398198 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.26298501 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254883807 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252608008 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.253002015 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251979405 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255314559 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261392198 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.252892571 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.251934371 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.255556374 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255184984 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251925693 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254546876 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.25340344 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254579453 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255406162 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255504581 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255600839 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254758738 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253528644 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.253099573 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253211072 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255937831 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261247262 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259707559 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254899446 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.256540701 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254390782 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259482806 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254263896 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253667136 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253150334 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267579916 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.262821921 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262372962 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.256459276 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.256849012 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260694188 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.255494775 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258288844 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254177241 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255400392 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254056546 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.253430675 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255099014 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255194954 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256898326 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255863326 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.255967386 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261370064 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.25688356 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254092689 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.254956089 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.254729134 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257744277 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.254672253 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257942761 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260292913 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258137253 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255275198 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.255325942 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263869112 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272818571 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.257757181 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.255075376 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255783647 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.255152391 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.256962434 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.256506057 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.258772916 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262939436 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.258201958 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.266373368 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.257562355 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267020626 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256668127 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.259200188 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262715669 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256238255 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.254915501 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257134929 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256725344 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2653886 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273752519 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257522828 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.260167457 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256867208 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.257544208 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259703772 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.256700056 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260437002 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.256927775 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267689399 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.273722151 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.259768558 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260276849 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256873575 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.257629295 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.259895646 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256043494 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263644687 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25713004 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.259067038 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257224036 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257791423 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260583926 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.25843813 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260587698 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.258110575 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261244907 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265924768 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.275749991 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261841437 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.260601493 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.269916391 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258828034 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266828119 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.274940051 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258451221 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.259547684 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260754065 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261818978 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258297783 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260623584 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.258743169 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.259293203 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264869216 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258928452 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.26285579 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.259461691 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258992466 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258057866 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26812206 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282252106 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26006587 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265702696 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259118015 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.26101234 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.262716006 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.2604309 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257707976 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.262411856 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269514087 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269437057 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.261430605 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260334138 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261033451 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260307948 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.262697666 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263691894 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.260190556 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262593798 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262202386 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.259285612 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266743638 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263271853 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262075906 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263349004 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.261097661 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.272640946 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.262303112 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263322863 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261145276 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263813605 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262135574 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.261543202 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261819678 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261657302 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263795466 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262099876 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266847546 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.267100622 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.264564216 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260428275 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.261551532 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262358686 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.263134555 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261094333 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.261029719 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262928196 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262209741 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261785697 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.264144836 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260714831 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263856992 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263075866 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265345276 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264830453 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267931968 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262560998 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.26263684 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.265540655 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265126794 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.261480743 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26324136 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.273548817 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265580491 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.272532986 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269779771 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266430476 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.263113731 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265939708 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271344675 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.261711512 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.263624659 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.263502351 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26576604 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264163169 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266756057 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263459795 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.272282188 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.264089361 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264801652 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274140055 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.281578027 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264723747 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.265013507 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.266915582 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.263435626 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26353461 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267263105 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.262764023 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27309009 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.283132127 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264207604 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266319748 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.26263617 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.265789036 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269790515 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266558618 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.266688623 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264267914 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.265182757 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265023508 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267701835 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.265211527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265432438 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.264207967 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267646491 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.271118067 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.265410338 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267421894 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.265323899 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.266503862 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265577692 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267788903 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.265089676 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26561051 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.265027891 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265433427 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.266055525 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.268490926 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.264972924 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265799941 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.269205185 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266157796 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268196907 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.274107196 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.276023781 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.265561066 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265598578 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.267777445 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270119518 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26600361 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.266016578 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267108133 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269867129 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.268219971 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266047569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268925066 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.269679268 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283459683 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28605902 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266891777 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.267407726 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272465238 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.269901197 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267275964 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.269327792 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.270747192 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269859245 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274194437 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.267775335 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274736866 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28347166 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.267954185 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.273508306 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26999464 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275324272 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.271578993 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266532578 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.26792464 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272193051 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28456616 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27070479 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277296209 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298642613 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.285227358 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.269935315 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.268484325 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266886349 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.267810711 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271027719 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.269249321 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.27099262 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271630796 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.269150811 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269343394 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275708757 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.270581785 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.270932435 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271649649 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.269358269 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27138635 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268421067 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.269498021 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.271843154 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269787479 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269082899 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268672553 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269358294 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283529408 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.280265843 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.271481504 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.2696282 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269370581 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.274157343 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.272012891 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278819929 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.27962449 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.269793813 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.270421987 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272671649 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270766326 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.269742691 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.270961134 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.269883499 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269110335 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268805588 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.284308544 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279182681 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.275681595 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271616579 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271329429 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273925742 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272083378 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27127663 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271195842 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.273221141 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.270604128 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274731064 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273349641 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273568136 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.273523351 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.280041776 seconds)
  done (took 751.209437394 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271918572 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271616481 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27111712 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271625519 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271302888 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271802368 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27149525 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271424812 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271619955 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272243048 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271304791 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272311861 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271707575 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27232186 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271479217 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271649727 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271803971 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271700501 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272439976 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272330758 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272650018 seconds)
  done (took 27.914915172 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274985371 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.272421098 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273591448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274153676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272349834 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.274918333 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272945894 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274850849 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27560685 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272010563 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.274857606 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275492598 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.273711136 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.272829778 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273017591 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275268476 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275282763 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273142254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.275729927 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272611319 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276060891 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.273104993 seconds)
  done (took 29.236713656 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.274653985 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.27296791 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.271938364 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272182052 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.276353268 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.273852525 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274234603 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.275975216 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276714491 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.275179549 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.272329081 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.274940695 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.280983211 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.281098665 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.276358709 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.276399604 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.420712259 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274949592 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274647093 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274702452 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.27438872 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.281520086 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.274510466 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.273363688 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.272848387 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275175367 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.276998158 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.277272329 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.274327117 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.276020425 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.279158447 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.27746603 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.273818157 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.276362716 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.273419472 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.275071997 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281079829 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.275402489 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.272439102 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.274459497 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.282344113 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.295713916 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.272586411 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.281147165 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.276647486 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.275027933 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.275709411 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281130046 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.273538529 seconds)
  done (took 63.890685035 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.276163054 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.275460918 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.273115054 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276421164 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.275491826 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275211374 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.2766662 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275709354 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.27304209 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.273080507 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.2763023 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.274303652 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273512392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.276620968 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.27573477 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273776306 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274699485 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.274417829 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.27478302 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274638267 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.274480308 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.277501182 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.277376921 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.275224116 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277065894 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.274579201 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.274449862 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.278034677 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.274901238 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.275065278 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.277354266 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277153643 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.27737169 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.275401371 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274656031 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277932313 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.277679197 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.274679513 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277588338 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275113127 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.277442114 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277489466 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278571891 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.279096448 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274813191 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.275452055 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275760579 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.275029492 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27557266 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.278395652 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.278026182 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275617667 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277539117 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.275705721 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278004032 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.279489022 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.275211188 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.276009115 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.277981325 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275584444 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.276162815 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27840493 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.276864486 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.27865235 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.278676908 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.276515401 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.276524535 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278444165 seconds)
  done (took 87.99020352 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277520866 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.276365323 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276491608 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276923498 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277066257 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276950022 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27778261 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276820427 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277081694 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276986088 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277584182 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279757158 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277571048 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280581047 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.2778224 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278787283 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277497881 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277243638 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277969596 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278407043 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.277431944 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277467215 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278555558 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278325769 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279004096 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278175128 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278113743 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277942168 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278038989 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277546255 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278647142 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278223533 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278199617 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279446371 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.27821474 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.278160547 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278731145 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278376625 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279334019 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.278244256 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278444158 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279504803 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278592127 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277879995 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277855042 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278892897 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279408816 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279361053 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28131516 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279166121 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278102202 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279335076 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278731379 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278857431 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278467365 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.282851781 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280489863 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279314905 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27940283 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279402019 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279366255 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.282014998 seconds)
  done (took 80.480432207 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281304963 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281922696 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280559083 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.279377691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281708012 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279864036 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282583885 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28215183 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282628447 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.282152744 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282472838 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280360765 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279457256 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282507644 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279895213 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280128227 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280161566 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280190415 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282737664 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280334814 seconds)
  done (took 26.837723381 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.280218468 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282169321 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.278974803 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280398296 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.282684092 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279909123 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282559899 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281886397 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279373136 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282075735 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282004325 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28178724 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279434882 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278801069 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281972948 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28011111 seconds)
  done (took 21.711088126 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277949872 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280459611 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.27876999 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278785245 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278842041 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.279379346 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281704791 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279720867 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279142799 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280658433 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281373387 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281835979 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.282721484 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.278708426 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279236103 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282446217 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278365395 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279459456 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.282106571 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.278540574 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279312048 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279818475 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281676022 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281541087 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.27751053 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280326954 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.278746452 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.278991846 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279111292 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.28267202 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.27816206 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.279473867 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.278451154 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.278261301 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.278288091 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.278445989 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.280771272 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.282167088 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.280897426 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.280258196 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.280332698 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279303709 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.281373961 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.281235827 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.278508458 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.28305135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277909139 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.278084938 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.278256737 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.278077867 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.281949683 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.278440973 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280735428 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.281868389 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.281318579 seconds)
  done (took 71.609816758 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281093872 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280397092 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278543061 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280102347 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282370342 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.278575568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281192506 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278864857 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27956361 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281433443 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279720899 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281396667 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279037546 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282226095 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2810199 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281576715 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.279361469 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279361102 seconds)
  done (took 24.259631866 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279689569 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281015507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283103514 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.280086617 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.280063849 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282956478 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2804214 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282420121 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282304258 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28097217 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280775988 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.2828189 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283295173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.283460888 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281282831 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28070957 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.282174942 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283230244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28044216 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281470302 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284107679 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28289173 seconds)
  done (took 29.414841658 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.279176905 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.278703418 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.297506094 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.324476777 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.310624134 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.278897041 seconds)
  done (took 8.983798412 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281400375 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282968386 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281573175 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284406287 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283891527 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280488549 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281208322 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281941895 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283640619 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282376446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28308072 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283845614 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284732307 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281724198 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283533662 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284518738 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281535869 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281118174 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283742546 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284625791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281569192 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284492997 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281061515 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280926291 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281919128 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282089737 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284584522 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283156638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282207483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285302791 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28494359 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283345122 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285525471 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282639052 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286471496 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285245501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28293324 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285435942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285249377 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282750372 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285127092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285667736 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284786172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282741937 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285584351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281901286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282811554 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282415882 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283064143 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287750579 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2854568 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283895674 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286875231 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285918427 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285764291 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286404505 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285133443 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284328466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286206202 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284575285 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283828189 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285312471 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283981948 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284764043 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286896575 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284058476 seconds)
  done (took 85.951373823 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28446654 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283812473 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284347963 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286035837 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284790131 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284303046 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283465526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283917997 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283646201 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284101275 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287329984 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284607072 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28416956 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284828531 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283066093 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284279335 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28369169 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283430359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283481425 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287273978 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284133823 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284275583 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283655908 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283352146 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284227511 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286421009 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282666764 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283248539 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283237429 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283983759 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283977049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283682936 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283628984 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283739729 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282748523 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284248933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284617193 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283743213 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285121586 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286201479 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284061602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286627627 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283814435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284339025 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286173092 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284459218 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284286482 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283513222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284476961 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284968397 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285610147 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284644709 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28568143 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283581316 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28584977 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28472033 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284941237 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284529117 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284427274 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287597047 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285891207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284567545 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288596133 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28529182 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284910632 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285132345 seconds)
  done (took 86.004689205 seconds)
done (took 1750.116942107 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.353049883 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.384433088 seconds)
  done (took 13.957564271 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.446501373 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.398239905 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.283058773 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.324277945 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.283132255 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.303181987 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.28784759 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.283251923 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.283935288 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.282874323 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.282753148 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.471215765 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.33814874 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.282901469 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.283650689 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.376814793 seconds)
  done (took 42.434547086 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.310727097 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.291364726 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.397129317 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.304226093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.309182182 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.463260236 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.337008608 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.28756433 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.444621563 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.325542408 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.737542668 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.309208334 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.28706262 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.315063196 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.303483872 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.462674022 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.514043461 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.7357073 seconds)
  done (took 29.357077414 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.699099335 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.309439393 seconds)
  done (took 9.227310198 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.305685083 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.277371891 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.286964735 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.311239083 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.289488678 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.313591804 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.323138144 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.33625828 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.329117244 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.306722125 seconds)
  done (took 64.297439751 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.298771552 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.282220229 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.282262179 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.28005322 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.272799691 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.272103018 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.279038 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.274209625 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.573731766 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.394843912 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.293843709 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.288876228 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.281232381 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.283119729 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.282424653 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.315386811 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.412442451 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.281956153 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.281084279 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.28847713 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.280783798 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.378717115 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.318686301 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.281837297 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.395426513 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.585211784 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.284153401 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.289580993 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.411863109 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.283232684 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.280776485 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.280498951 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.282143624 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.840058599 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.70166916 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.287738129 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.304342536 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.290868304 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.282346162 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.410433346 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.282019865 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.288171404 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.283048566 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.680261814 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.429048218 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.385613643 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.391798517 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.281214984 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.283335852 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.341365475 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.283152971 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.28410139 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.308611847 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.008743067 seconds)
  done (took 107.437164476 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.320284872 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.760089334 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444438157 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.296282201 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06358154 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.994397239 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.275660066 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.531648564 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.300668123 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.273972652 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.552682792 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.746820999 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.281927996 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.284066612 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.681442846 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.355401643 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.274348574 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.98065443 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.273966341 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.274695523 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.69023023 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288114511 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.284802417 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.445391697 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.311609485 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.701699638 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.536200916 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.66122788 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.277499372 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.272755289 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.708305692 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.277683281 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.346230427 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.273153705 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.533309119 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.594844941 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575447176 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.273863977 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.28255131 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.279079694 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.301728323 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.69942448 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.58387819 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.275626424 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.273422974 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.708267621 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.274278266 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.277349602 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.278092235 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486444975 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.205866406 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.276254983 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.53514635 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.276431922 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.505632141 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.355648808 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.305448614 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.732667101 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273136329 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.342116052 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.292671741 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.27672091 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.275259726 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276858473 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.277186874 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.589071847 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.361625998 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.27967534 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.589466665 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.7010077 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.276325952 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.771691522 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.064773366 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.281339773 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.336506705 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.275593813 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.819717287 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.728929505 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.27521319 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.275076812 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.573098974 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.28015582 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.539045627 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.28754224 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27517253 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.700397354 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.295151341 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.307261189 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.275606163 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.277947257 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.00044947 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.27633177 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.526901863 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.342665973 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.277889196 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.276326644 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.305148022 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277590066 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.276897987 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.278990506 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.771827831 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.279479678 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.551306739 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293377491 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277757312 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289423588 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.276244432 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.277618071 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504282164 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.883307848 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.282356062 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278887114 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.277305589 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.285852568 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.394760061 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.283005722 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.548918622 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.279489538 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284774058 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.282725758 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.040128867 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330314489 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277398873 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.27779889 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.097339579 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.483456864 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.292618565 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.288686179 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278696962 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.290419893 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.510271127 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.279300392 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.309708444 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.280687542 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958904216 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.296605361 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.296932191 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.85776847 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.279361406 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.134599208 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.299031087 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278430479 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583769566 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.535220807 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.909479612 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.281028605 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.27857413 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9292263 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311582941 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.424821061 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.295824326 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289444008 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.475636139 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829499964 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.278974636 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.813726008 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.280450278 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496364805 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.278062923 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597049108 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.735084453 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.277826228 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.286778734 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957393524 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.943328436 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.927877831 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.28133529 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.539570738 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.269749587 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.70898109 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.278126662 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.278642794 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.80338477 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.280622443 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.288167943 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.279564604 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.279082045 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350328728 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.452604801 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.960149744 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.282691906 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.707900171 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.304876645 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279349496 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.283373723 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.279950818 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.616894278 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.316236428 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.280728375 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.311268266 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.279972515 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.286988816 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.715688117 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.111124826 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.281003722 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.433201847 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883537109 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.280953071 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.282369801 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.047370589 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.514408267 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753136102 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.304618889 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.556031783 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.287372309 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.318834636 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997257659 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.296365524 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.76063003 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282763453 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.280968096 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842257992 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.281163637 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.607215195 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.281725948 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.283304857 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.783724862 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.281493048 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.284435402 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.519230341 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.281345849 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.536322176 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.282780215 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.313346489 seconds)
  done (took 1097.754853296 seconds)
done (took 1365.685529591 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.282036471 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.285110233 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.272418433 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.285999681 seconds)
  done (took 26.349919575 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.293551456 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.288846965 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.291586796 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.288805172 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.292267389 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.290292425 seconds)
  done (took 8.971169641 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.309426281 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.286284107 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.287420853 seconds)
  done (took 19.109354497 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.486654859 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.448345119 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.620473963 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.262860007 seconds)
  done (took 10.046182191 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.291732709 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.291081566 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.29167806 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.293824997 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.293881414 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.295795622 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.292574253 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.293474165 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.295038264 seconds)
  done (took 12.864951003 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.858425358 seconds)
done (took 83.423052128 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.738995688 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.505908386 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.34709108 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.314684429 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.51300652 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.284856869 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.370869721 seconds)
    (8/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.43197483 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.479571285 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.32700128 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.514979505 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.365147992 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.27267034 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.331191698 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.351174262 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.315210373 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.514233308 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.022798638 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.694075638 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.13579189 seconds)
    (21/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.284894777 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.86325424 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.073969666 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.288022289 seconds)
    (25/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.718981316 seconds)
    (26/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.300224578 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.748931015 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.287157585 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.413765398 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.115230784 seconds)
    (31/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.427979658 seconds)
    (32/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.798663699 seconds)
    (33/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.275799516 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.300801701 seconds)
    (35/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.420863268 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.372129907 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.873292368 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.418866353 seconds)
    (39/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.556455775 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.274798717 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.320640123 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.472324007 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.285917289 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.549163552 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.12572875 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.290142225 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.318596471 seconds)
    (48/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.316322608 seconds)
    (49/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.851854774 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.80110999 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.44753592 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.401484287 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.305924244 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.28695329 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.389959063 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.402388922 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.307492575 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.315989618 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.412559166 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.811907694 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.562273767 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.725451345 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.273977884 seconds)
    (64/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.32938652 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.279824029 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.278822077 seconds)
    (67/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.2905138 seconds)
    (68/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.317788176 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369831711 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.108300277 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.305612999 seconds)
    (72/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.418336907 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.055714759 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.275265229 seconds)
    (75/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.303176169 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.293637276 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.313396693 seconds)
    (78/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.467844003 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.469853298 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.670552503 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.894822928 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.073228401 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.532610126 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.831103203 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.289162315 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.320182516 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.362681439 seconds)
    (88/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.830315862 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.296882399 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 5.254310074 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.33307231 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.416818847 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.488604601 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.69288334 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.566649623 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.965892852 seconds)
    (97/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.30757594 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.418795438 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.317339414 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.377740265 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.289178711 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.299852503 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.385223206 seconds)
    (104/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.374808905 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.640705417 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.901043503 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 6.290786025 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.318953598 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.280751046 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.582708861 seconds)
    (111/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.374841066 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.600233641 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.294409389 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.406903459 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.517129438 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.6883022 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.809939673 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.296404876 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.401780576 seconds)
    (120/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.742558129 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.29264509 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.686553415 seconds)
    (123/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.304742602 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.393303606 seconds)
    (125/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.316441239 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.839829233 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.287305765 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.38817637 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.400279117 seconds)
    (130/309) benchmarking ("sort", Int8, false)...
    done (took 4.308397757 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.79126911 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.313188181 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.567796201 seconds)
    (134/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.583120418 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.021402176 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.28950596 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.969505266 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.967375191 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.559092269 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.805018013 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.839317011 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.97803541 seconds)
    (143/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.354230122 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.290417085 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.28872749 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.627698633 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.586988834 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.151426859 seconds)
    (149/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.879063532 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.421437907 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.332819623 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.537237155 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.653404163 seconds)
    (154/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.445645234 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.28722496 seconds)
    (156/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.057416438 seconds)
    (157/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.682916705 seconds)
    (158/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.887547214 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.060900022 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.362397376 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.986381735 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.289190498 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.318717701 seconds)
    (164/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.633525038 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.682956163 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.123753295 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.989331203 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.545134931 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.573166812 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.394177404 seconds)
    (171/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.620274136 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.31683983 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.561127817 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.811094505 seconds)
    (175/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.471230433 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.376276247 seconds)
    (177/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.302228939 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.970946348 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.29190323 seconds)
    (180/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.497706893 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.310392546 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.396018948 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.030275978 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.130646741 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.741922068 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.543784732 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.418691764 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.020232139 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.68688616 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.986349443 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.820522825 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.406999851 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.694161308 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.35732967 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.290717763 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.438536664 seconds)
    (197/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.378323085 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.320705031 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.315174687 seconds)
    (200/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.38345322 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.292408611 seconds)
    (202/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.471074479 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.336620018 seconds)
    (204/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.285891683 seconds)
    (205/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.859497772 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.319577315 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.291329273 seconds)
    (208/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.293859018 seconds)
    (209/309) benchmarking ("sort", Float64, false)...
    done (took 5.495696744 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.285857632 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.355847369 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.685473536 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.48531435 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.29134388 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.316482775 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.876097274 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.574532772 seconds)
    (218/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.846757955 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.983409843 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.291708989 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.672035906 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.291982498 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.855375125 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.49643186 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.558847257 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.899442389 seconds)
    (227/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.475277459 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.44394046 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.365935147 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.317909621 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.447511338 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.620684324 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.351003763 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.098124108 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.347500065 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.278309368 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.641888808 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.530165652 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.293008066 seconds)
    (240/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.52598197 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.592506857 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.471730513 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.402568294 seconds)
    (244/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.632821226 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.689965329 seconds)
    (246/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.469497701 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.278878988 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.309258074 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.055982674 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.322320348 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.292752581 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.960429686 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.488524051 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.329022075 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.293490289 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.333919013 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.290641684 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.288809979 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.345497855 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.379125197 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.419048693 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.322904105 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.591572064 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.516177449 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.32506159 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.689314311 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.279866475 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.639216098 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.871934682 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.328644093 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.815915942 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.342630269 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.323268673 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.296718604 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.297913765 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.739127215 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.603845003 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.332818225 seconds)
    (279/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.471671179 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.752404421 seconds)
    (281/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.281041276 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.094462677 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.380828686 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.986708274 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.395712123 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.403875293 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.415600387 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.305950109 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.374402531 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.470260138 seconds)
    (291/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.294929096 seconds)
    (292/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.607878137 seconds)
    (293/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.459190098 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.121584826 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.343341255 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.433431769 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.111263467 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.494233874 seconds)
    (299/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.627526424 seconds)
    (300/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.848002345 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.054125139 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.322147078 seconds)
    (303/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.645295944 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.573981272 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.001279719 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.987477003 seconds)
    (307/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.431706752 seconds)
    (308/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.307075124 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.369833938 seconds)
  done (took 898.208100369 seconds)
done (took 899.437391218 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.331917286 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326741025 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.309789577 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.330410768 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.421198366 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.339547845 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.32045523 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.311531081 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.35671119 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.35877611 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.309628162 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.338918919 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.311515349 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.310853795 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.308813442 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323909813 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.21680327 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.31054852 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.327382841 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.319697948 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.326893934 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.309145718 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.359365588 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.339076058 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.313939364 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.313040784 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.314023679 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.330064702 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.422900517 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.314826855 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.313043006 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.322458435 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.216938868 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.309628658 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.30582973 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.331524173 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.322071595 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.320580663 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.315078494 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.343546548 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.573315111 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.311820938 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.313619396 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.312610332 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.311865228 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.316362079 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.313706807 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.318119412 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325931761 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325737522 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.571570761 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.328409118 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.315928531 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.31251408 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.323125974 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.3129099 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.316741296 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.328350321 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.332176453 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328831677 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.21146008 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.316718627 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.315156766 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.329454804 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.319548448 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.608216321 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.307821466 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.317597573 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.580738034 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.318552881 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.609618118 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.321724919 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.314793919 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.327807158 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.344489101 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.223802563 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.307964516 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.312382341 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.321826186 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.312977281 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.322830562 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326092644 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.31865421 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.313848585 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328080395 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.343801973 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.323588132 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.314497383 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.322578371 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.334180973 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.321651526 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.325316421 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.317151316 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.30954158 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.323496271 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.318168628 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.317828733 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.317280907 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.319278069 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.324826465 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.580371519 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330840296 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.311147494 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.311557311 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.313118229 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.328452525 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.5843084 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.315149976 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.336830978 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.362706733 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.316480464 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.218579439 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.319067655 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331144675 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.324550673 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.318217349 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.311183346 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.218592885 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.580483113 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.330798078 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.317827102 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.314544164 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33126372 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.317135774 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.311918392 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.228700879 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.3176631 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.332871365 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.439529167 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.328887235 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.348289601 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.314496333 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.318664149 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.349673186 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33164908 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.347981563 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.318873449 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332105382 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.333578906 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.313970852 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.328323195 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.327612536 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.318146367 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.322814551 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.310724958 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.347364329 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329472013 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33007788 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.338622427 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.438231785 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.314425887 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.220128808 seconds)
done (took 220.054579215 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.377011108 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.311393375 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.417222127 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.317796333 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.412141932 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.411849238 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.315413941 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.316397161 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.315385005 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.695229404 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.315529235 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.316589109 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.309839271 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.315921503 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.397217385 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.319242173 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.315492245 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.656289014 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.316139174 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.386244815 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.31591121 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.316231863 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.318651787 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.699338859 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.309038819 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.315324118 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.386496886 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.318910906 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.664043944 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.308275208 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.313873172 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.662846475 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.407023642 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.336187051 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.329886299 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.325990632 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.413653726 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.334772858 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.397594553 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.398341527 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.418970618 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.355584564 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.309523158 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.313102613 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.32043144 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.317701226 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.31757286 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.346721672 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.313374215 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.317883675 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.6595627 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.329469041 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.318223036 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.317843848 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.318793255 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.347166144 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.318563449 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.31802162 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.407881704 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.318957121 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.379998432 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.701993024 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.779129392 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.320315225 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.317550203 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.319180743 seconds)
  done (took 147.464765998 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.384388918 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.390035902 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.424399297 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318165454 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.36939948 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.427856289 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.318207231 seconds)
  done (took 10.884827502 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.323461272 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.321545827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36838466 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368349986 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.319098433 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.466485004 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.322660124 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.330289011 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.319950094 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.371128573 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.320212934 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.32317426 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.328770614 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.317826133 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.367582997 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.330044004 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.433589279 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.319803852 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.319989659 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470510644 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.319775316 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.329425989 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.371230765 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.32991368 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.321072632 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.325807311 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.88540361 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.320061823 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.320373397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.323474118 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.320638397 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.357251321 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.323329818 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.313326344 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.320718104 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435971252 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.320710634 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32104995 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.32350474 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.316415589 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.323344404 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.323542817 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.32379287 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.321454786 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.324013361 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.34187317 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.324115243 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.324793634 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.324961033 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.324491777 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.371117296 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.324935867 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.322507093 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.322975691 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.377402407 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330888247 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.322590354 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.321858431 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.324789571 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323165779 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.473390559 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370165727 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.325326068 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369835521 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326113964 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325910358 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.325445287 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.325162584 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378014834 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.325289 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.370733108 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.323123327 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.476660076 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.344147743 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326564619 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.325238475 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.324900978 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.322643186 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.320208432 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.328507845 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.323196576 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.323134296 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.327971279 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323586447 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323313744 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.42558129 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431582929 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.323321095 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.335797047 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.329946927 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.323389591 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.376067199 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.326442405 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.323523706 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375663265 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.437645876 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.376131503 seconds)
  done (took 152.111157375 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.327378989 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.331584868 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.324429061 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.339820479 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.323297094 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.323739342 seconds)
  done (took 9.227427892 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.325927143 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.327890187 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.327247855 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.327390375 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.325365343 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.325272481 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.325191995 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325039903 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.327311752 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.327855897 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.325486971 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.326317608 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.327030311 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.325644501 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.325042459 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.327972915 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.325868172 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.32582205 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.327732376 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325153837 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.418495993 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.324739251 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.32698427 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.326532008 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.330288009 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.328996841 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.33341381 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.328530565 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.328811984 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.333915173 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.32906046 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.326504378 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.327583378 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.330871397 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.330308917 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.328202718 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333157686 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.328239558 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328083662 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.327596393 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.327884075 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.326653472 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.32878524 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.328450198 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.328085881 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.33070391 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.332280846 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.334714293 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.326255604 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.328086955 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.329336728 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.329761949 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.328565359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.328908091 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.33110231 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331060684 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.331968314 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.328475458 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.327567218 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.328561031 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.330810463 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.32882739 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.328760008 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.330875647 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.337333072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.32954595 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.328837493 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.331432192 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328368369 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.331462613 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.329982662 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.328562717 seconds)
  done (took 98.008849522 seconds)
done (took 418.9447114 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.534379305 seconds)
  done (took 7.795515015 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.477430578 seconds)
  done (took 7.742011788 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.309629558 seconds)
  done (took 19.578699413 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.353479885 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.340207453 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.331052893 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.323076747 seconds)
  done (took 26.609388994 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.529746737 seconds)
  done (took 7.792060135 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.323576961 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.340314635 seconds)
  done (took 13.927778656 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.786109825 seconds)
  done (took 8.049102221 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.802259285 seconds)
  done (took 8.067688109 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.341070739 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.357243486 seconds)
  done (took 14.231276555 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.319969092 seconds)
  done (took 7.582759843 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.993193747 seconds)
  done (took 8.254985552 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.331357772 seconds)
  done (took 7.593812214 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.391023063 seconds)
  done (took 7.652482079 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.53305532 seconds)
  done (took 8.793841223 seconds)
done (took 154.932887617 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.320020202 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.323397858 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.323038619 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.322039954 seconds)
  done (took 26.549646136 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.36549328 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.363594471 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.364697466 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.374498617 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.366917951 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.36359109 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.356869233 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.356876487 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.376285397 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.367263633 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.366224884 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.367001288 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.364300994 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.356922138 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.366246285 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.367365745 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.375650649 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.369084653 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.357306267 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.368039929 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.332282635 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.375696954 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.368325499 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.333373475 seconds)
  done (took 33.986226178 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.52434645 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.399866419 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.481625266 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.380550828 seconds)
  done (took 7.048824064 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.384188057 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.385099341 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.398062346 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.435668252 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.461488548 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.394714215 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.3590334 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.353246011 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.339560087 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.385580926 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.461373421 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.401827287 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.47819186 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.332487123 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.52211809 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.332504692 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.332823616 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.384686735 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.435796188 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.469427224 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.334170262 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.384745786 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.38881499 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.402368508 seconds)
  done (took 34.821767579 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.331363694 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.340353232 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.338197327 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.332295436 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.332611834 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.333183726 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.33808744 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.333885406 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.353577193 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.334093278 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.332663301 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.333749347 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.333299891 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.33495626 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.334254637 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.347750292 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.347371243 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.333194305 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.335982153 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.33871526 seconds)
  done (took 28.0041912 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.323336248 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.265986039 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.675334031 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.578443501 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.323499109 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.327225442 seconds)
  done (took 28.758763751 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.392689056 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.509819528 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.332652398 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.651374031 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.727444833 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.331300043 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.332012658 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.541796759 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.813689384 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.822897078 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.382658909 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.394639847 seconds)
  done (took 19.498861064 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.332971253 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.328053951 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.338315332 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.343895526 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.379280928 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.336940634 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.337321357 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.324648873 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.382095642 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.384024263 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.336280505 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.37993948 seconds)
  done (took 37.470900181 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416613961 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37363107 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.25209864 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086270232 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.705878757 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541102693 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.084667016 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.747956005 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.335388179 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604087606 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040898503 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432419299 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583352261 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338061131 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333713187 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.286917825 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55651215 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788881301 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335011731 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.021214609 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35949028 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335533107 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.106386117 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.360605871 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542964312 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463912678 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.592285954 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33184857 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588391817 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346040584 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341197611 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330930328 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60510399 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967457906 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424046982 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34132763 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028058469 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046456077 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.324416571 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.132416612 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.826607281 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334136761 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342075712 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331825395 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.265108214 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341194479 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754898588 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.339069522 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.044283971 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332808326 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343097988 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426594688 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.336351139 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.148561452 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330795113 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333508841 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.33012284 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334678614 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907688634 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.498730417 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34867709 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.269944151 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.705417794 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.031591598 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909701241 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.435337718 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.336464956 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337004781 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2680684 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.087327062 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353034626 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482341426 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.35350508 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981006544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983660734 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.054775729 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71967803 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849425299 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336095416 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.271832428 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561140727 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334142471 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271235468 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.300601878 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.269496672 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997756483 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345047117 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.699004859 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341653281 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.752969292 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.346555299 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35166338 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358089078 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557745462 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.217584974 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335570105 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.839261828 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490992032 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357834996 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.748941614 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272943781 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.337948505 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589166287 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.546454937 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347634607 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.290553933 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523250162 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34738639 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.354759111 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335200136 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.34899021 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.866584482 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347872172 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.514833936 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353142699 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336621999 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037899043 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347296917 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.439667263 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.077255393 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576094034 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.070679594 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337282475 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418127582 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337695122 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336277867 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.1482001 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.85202102 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.33621123 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.336031396 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337385888 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.349699953 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.334580474 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283030787 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.334129524 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.105026631 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.340160125 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560357875 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347446196 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614202327 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272037783 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484339412 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.426731265 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.560082446 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.460372182 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.336984837 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594316465 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337167397 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342394045 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350436334 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355487918 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435452964 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359125434 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.340403875 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593587229 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.341596351 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.342459653 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.155881795 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340987184 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339805914 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.343654812 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.158383099 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874635435 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315588602 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343416198 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229082743 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.352339821 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402989214 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343901073 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.348236781 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.000846573 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.148239009 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.343847366 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.336191294 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562808021 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348936536 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.075103229 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418151168 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.523237968 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874480251 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353923825 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.274082757 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.051692009 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.032076166 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33891952 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27470968 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.338725138 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34917733 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350973352 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.863377998 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875294498 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343103686 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.072938727 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.346105332 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351018926 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.344907732 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339744618 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.994542531 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.526011125 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34955676 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.354267365 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484802333 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.354147092 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.275185413 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.344803135 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345472768 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340567669 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339746581 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373725629 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.078790988 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804171805 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599227522 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.023499656 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352889548 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.158476242 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.371553988 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.340687382 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.868645997 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366201546 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.355214126 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349063528 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.352275342 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.082075714 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012418764 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913032269 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010944495 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835176413 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227381612 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.348478786 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344470772 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.76162829 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277820783 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.907615178 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514727495 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.765877547 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288031924 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527948338 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.484114542 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053026556 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351706551 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569977371 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220814021 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.873208075 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36798751 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554626446 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381926374 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.348441567 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274285905 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.644207218 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562382275 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.890084436 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42376944 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766353985 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.878250492 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358320964 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.339222207 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.650638766 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504471185 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.058231529 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.51570905 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344012362 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.111106489 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817670999 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34871037 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.569356804 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923009165 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347403119 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.532138952 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279548499 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.355156779 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.354819009 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.343562527 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.495867232 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.353452455 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.597345534 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354265881 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278429895 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3438826 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840793356 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.1990824 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.350436827 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344535686 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050270556 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346025486 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618769936 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.357703175 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.982078997 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352920535 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279711685 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279842019 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.038775518 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348565215 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320456476 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797162354 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.701214862 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329065493 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37493305 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189939459 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600783402 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.359729496 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.881747656 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572583032 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.124441596 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370473253 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.445855395 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.914919661 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.344249873 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345020169 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581513619 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164536761 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570470293 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.278984272 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.249896265 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341637483 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55864891 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346554685 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.119130235 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586276207 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.058865585 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.351329861 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006146687 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373360546 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.137273503 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276979114 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.720510988 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353131404 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426404976 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357870033 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.358513721 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.35735893 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507928091 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.12714306 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361975757 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.361487181 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440261808 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.559290621 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.990273832 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.351321763 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890647726 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029336152 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890420395 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361103102 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347530902 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348922444 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282024432 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497668854 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.573970554 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621442391 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476342159 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.835405973 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370959859 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.93728246 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367657085 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560115303 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624186579 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.244192853 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354367877 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360177929 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.348750784 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359939651 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.559458761 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810893115 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870797956 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469744515 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355066914 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.766772942 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624486448 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34976846 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349052 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93929238 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.36364588 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.666867777 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.355499888 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.185555427 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498483653 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359657272 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992126438 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359529581 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.510534439 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.123695386 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.101160494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607327813 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.772890713 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361813355 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890672125 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001884825 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61699382 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417445745 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361773103 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.453247594 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49667483 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.349055878 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348518232 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340711039 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185956552 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.051754387 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341205841 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884558392 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598100168 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.329297798 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.323554905 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341261475 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.32785692 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.541381303 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993549381 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543187588 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327012112 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323980726 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.130518191 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854576651 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329318905 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250645906 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.320667903 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542907731 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.554463556 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33585092 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.768769416 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.027036775 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835638088 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.288482895 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338719209 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321671792 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.970352082 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858057602 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.96550206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777422667 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.877035552 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324376965 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590541608 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.319165446 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315779556 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591787908 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.315559443 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.321522174 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327459869 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.848863841 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026583453 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.332116505 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.088532335 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.245143004 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651195304 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941803501 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245844195 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311822263 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.476748957 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309205981 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436715575 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321034984 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.307865921 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3096548 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.067975929 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581146518 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.314686555 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.303556277 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.921927412 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317191569 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313673812 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531431481 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318525063 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.00365207 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.658476995 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.563302745 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.315731656 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.292374108 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.31147715 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308024755 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295159146 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.507952333 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.817834923 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831610939 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.310708617 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.321284237 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312192255 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.52461063 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52038315 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.123034099 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333560186 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308962238 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325947345 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.211762111 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.817132942 seconds)
  done (took 1580.698491821 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357850718 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.345864039 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.354110711 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.410975423 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.334643782 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415745287 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.392064243 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.426372188 seconds)
  done (took 52.284809169 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.316903045 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.555084627 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.334990847 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.31349778 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.314458894 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.318550369 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.710408727 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.309315508 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.315244405 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.31594879 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.30657349 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.311790634 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.891875639 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.31557375 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.317573576 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.293057511 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.314931678 seconds)
  done (took 64.814339031 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.308331412 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.570249065 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.38779635 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.329844444 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.028533652 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.315355649 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.576749687 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.3205516 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.320728888 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.379451314 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.96466897 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.332297922 seconds)
  done (took 83.084318633 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.314643494 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.314312292 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.314197119 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.314440037 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.314849077 seconds)
  done (took 7.821335089 seconds)
done (took 2006.106505633 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.558428029 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.946703792 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.916049722 seconds)
  done (took 5.11232398 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.455968442 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.504767956 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.625727119 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.633003147 seconds)
  done (took 7.470031805 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.584990842 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.680986191 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.492001419 seconds)
  done (took 6.008001911 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.616012582 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.311754175 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.427032838 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.31382694 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.312747853 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.314303646 seconds)
  done (took 20.192918181 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.317066154 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.319822069 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.319071505 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.318986736 seconds)
  done (took 6.526465989 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.295077579 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.048771508 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.298239413 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.312289355 seconds)
  done (took 18.205704551 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.061355979 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.076183122 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.061364884 seconds)
  done (took 7.450354459 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.309885786 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.156002943 seconds)
  done (took 9.717962307 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.623419798 seconds)
  done (took 2.875895906 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.449541196 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.586367044 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.264431251 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.218836317 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.292224889 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.795713421 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.794975144 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.413961778 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.199940012 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.282773029 seconds)
  done (took 26.552389534 seconds)
done (took 123.27485228 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.864698439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.317233273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.526426104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.831078703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.541652248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.525610458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.513989297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.797584878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.346746909 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.334071128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.831946125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.542136024 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.461163466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.316833646 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.461971138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.31764646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.541463045 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.907713527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.516573082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.713280103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.519013533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.471107116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.66145572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.497996261 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.544119267 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.473191391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.05100973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.318324425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.688150038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.074270121 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.498847667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.88505098 seconds)
  done (took 184.146280723 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.312343219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.327554379 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.312408596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.315659208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.314079197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.312955409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.323198935 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.312035738 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.317954475 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.315659178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.321582725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.312341829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.327773629 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.312943847 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.31557819 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.31362478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.333330172 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.317265819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.312569191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.313080403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.331688525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.333729899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.326462433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.325492205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.314188453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.313917887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.32601795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.327832552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.322674777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.312479511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.315408021 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.315217911 seconds)
  done (took 203.465462782 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.317139126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.313128586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.314453224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.313368051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.313482878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.314177081 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.315506697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.313928919 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.33088266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.314819393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.31487097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.313581882 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.316543783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.314853182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.31537408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.314736835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.314766476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.3202111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.314375971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.313887935 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.317993713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.319072847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.314084755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.314862461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.314816167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.316153624 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.314791534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.315621275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.314778231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.327829628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.315037122 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.315271484 seconds)
  done (took 203.371840094 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.520542428 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.326055258 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.326689402 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.278869907 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.326107906 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.326651059 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.322592205 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.522328543 seconds)
  done (took 14.207377944 seconds)
done (took 606.443127225 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.512750037 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.236651934 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.513879345 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.347859835 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.046491049 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.343852152 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.348070157 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.502892851 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.218256368 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.504170579 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.509188974 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.340729794 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.638703971 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.344213551 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.577661946 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.438201761 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.186681426 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.304497138 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.637070161 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.820006395 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.583561828 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.747046137 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.500562698 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.208974326 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.639009353 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.741996245 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.942987909 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.189521096 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.346533297 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.645573179 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.837451794 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.181275109 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.394749325 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.377792267 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.434913438 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.416639558 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.168218001 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.375386043 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.516539426 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.517607648 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.818462745 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.04123547 seconds)
  done (took 89.256832853 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.313412867 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.315101215 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.312602291 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.314929747 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.314110545 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.315368896 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.312660456 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.313910856 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.313284186 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.312826181 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.312989419 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.314581479 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.314111103 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.314028019 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.315046562 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.313170959 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.31545921 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.316087222 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.314448677 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.315011056 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.314455841 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.31264406 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.314286929 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.315244674 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.314222506 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.314646606 seconds)
  done (took 35.429841237 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.329044423 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.556109482 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.710837183 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.332338316 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.326213256 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.330801683 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.397762493 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.332325442 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.328874145 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.33055941 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.473976089 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.334584694 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.361129765 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.718789093 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.329387974 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.331106454 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.330247125 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.327016908 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.564052265 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.337807583 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.399478829 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.331874899 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.39811565 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.337735125 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.330753903 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.327998069 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.331732392 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.84410792 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.329436305 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.474896753 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.034594499 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.396856507 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.8089714 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.721187526 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.033223461 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.335786506 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.33310213 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.479042407 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.330072322 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.328607672 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.398199828 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.329489464 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.720282727 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.942541096 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.343233277 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.332641157 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.864277733 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.479520005 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.549836507 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.338953043 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.740224653 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.331359786 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.334511953 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.330710197 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.549849316 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.333023298 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.329136844 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.886338544 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.334594093 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.398628528 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.333774389 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.329568242 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.569894927 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.330000591 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.559974334 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.331188804 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.338127655 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.330599644 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.721619822 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.332266844 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.963123068 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.343793191 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.333954352 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.477202223 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.561237715 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.895749138 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.333533118 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.574075271 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.818654301 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.398462361 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.334594029 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.834756517 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.401995193 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.333591485 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.337743862 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.336293164 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.334283325 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.378000737 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.398421668 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.886269121 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.957470161 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.9022553 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.402114851 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.343878205 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.332594209 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.890420574 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.348990975 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.335090737 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.716022384 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967176416 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.345961297 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.339745872 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.948898026 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.348109023 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.402125508 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.337715547 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.728305588 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.333269042 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.380158923 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.336317232 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.338817583 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.335604256 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.402990491 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.3353875 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.339505317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.934160394 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.498124492 seconds)
  done (took 174.45827482 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.326055929 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.325719408 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.327057014 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.325074034 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.32506659 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.331610793 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.325227167 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.326017753 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.330503912 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.325571957 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.326619465 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.326609742 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.3287413 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.332445598 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.33675456 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.33372593 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.937077569 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.326907841 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.327124401 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.338914472 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.108555963 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.327829383 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.340471232 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.326219087 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.326617795 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.327797922 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.327072727 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.329860845 seconds)
  done (took 151.865326572 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.338045958 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.852501162 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.335461865 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.452787576 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.356828101 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.335551791 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.451490757 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.384935343 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.335410811 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.335584314 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.335470589 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.609687479 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.340615498 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.812903266 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.506347749 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.459012892 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.807414332 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.342177186 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.336998365 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.335548376 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.454252167 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.343088818 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.608687034 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.847919581 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.339747543 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.847390511 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.324385045 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.339251426 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.334450895 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.848971262 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.337146194 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.613348488 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.404536752 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.388198798 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.848947083 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.80215858 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.806060889 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.47052216 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.335584849 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.33750475 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.337351389 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.324149886 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.84999265 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.340791647 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.335879841 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.844337915 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.354303726 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.340781987 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.34814791 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.337619002 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.389338748 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.388969631 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.613498434 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.853996604 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.409046555 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.359717851 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.453515729 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.701601846 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.338929412 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.800573228 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.323621066 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.860862909 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.34460739 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.324760514 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.341035446 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.344617195 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.475080586 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.45831225 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.804638565 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.337657784 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.810276294 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.47851978 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.339173869 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.339206239 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.341820998 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.860685648 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.807549086 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.47594064 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.458702206 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.511857559 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.329245803 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.336529983 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.327590964 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.40640313 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.339870357 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.858896587 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.806074786 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.342303461 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.341723761 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.343160126 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.341936578 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.494975137 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.858980857 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.409622838 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.799374208 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.6286214 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.614938157 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.343296417 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.393995016 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.341225252 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.615925306 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.343411492 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.393029711 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.764639794 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.617196216 seconds)
  done (took 158.124246733 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.563356795 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.430148702 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.427400052 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.444395282 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.857047394 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.887545225 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.48133457 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.453088182 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.44201772 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.566332847 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.415933588 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.432801691 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.511849577 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.40662572 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.020934673 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.399560586 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.429733525 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.45577323 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.443322221 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.342716044 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.933739193 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.603233122 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.496264414 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.408510212 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.425315585 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.063755468 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.855836952 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.832140935 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.494516247 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.507773901 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.846265431 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.408245406 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.2320757 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.960982003 seconds)
  done (took 63.755378773 seconds)
done (took 674.147631206 seconds)
SAVING RESULT...
DONE!
